// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "compute_pro_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic compute_pro_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic compute_pro_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<26> compute_pro_1::ap_ST_fsm_state1 = "1";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state2 = "10";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state3 = "100";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state4 = "1000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state5 = "10000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state6 = "100000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state7 = "1000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state8 = "10000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state9 = "100000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state10 = "1000000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state11 = "10000000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state12 = "100000000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<26> compute_pro_1::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<32> compute_pro_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> compute_pro_1::ap_const_lv32_2 = "10";
const sc_lv<1> compute_pro_1::ap_const_lv1_1 = "1";
const sc_lv<32> compute_pro_1::ap_const_lv32_3 = "11";
const sc_lv<32> compute_pro_1::ap_const_lv32_4 = "100";
const sc_lv<32> compute_pro_1::ap_const_lv32_5 = "101";
const sc_lv<1> compute_pro_1::ap_const_lv1_0 = "0";
const sc_lv<32> compute_pro_1::ap_const_lv32_6 = "110";
const sc_lv<32> compute_pro_1::ap_const_lv32_7 = "111";
const sc_lv<32> compute_pro_1::ap_const_lv32_A = "1010";
const sc_lv<32> compute_pro_1::ap_const_lv32_E = "1110";
const sc_lv<32> compute_pro_1::ap_const_lv32_F = "1111";
const sc_lv<32> compute_pro_1::ap_const_lv32_13 = "10011";
const sc_lv<32> compute_pro_1::ap_const_lv32_18 = "11000";
const sc_lv<31> compute_pro_1::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> compute_pro_1::ap_const_lv32_14 = "10100";
const sc_lv<16> compute_pro_1::ap_const_lv16_0 = "0000000000000000";
const sc_lv<6> compute_pro_1::ap_const_lv6_0 = "000000";
const sc_lv<32> compute_pro_1::ap_const_lv32_19 = "11001";
const sc_lv<32> compute_pro_1::ap_const_lv32_B = "1011";
const sc_lv<32> compute_pro_1::ap_const_lv32_10 = "10000";
const sc_lv<32> compute_pro_1::ap_const_lv32_15 = "10101";
const sc_lv<32> compute_pro_1::ap_const_lv32_1F = "11111";
const sc_lv<32> compute_pro_1::ap_const_lv32_200 = "1000000000";
const sc_lv<32> compute_pro_1::ap_const_lv32_20 = "100000";
const sc_lv<32> compute_pro_1::ap_const_lv32_1 = "1";
const sc_lv<32> compute_pro_1::ap_const_lv32_9 = "1001";
const sc_lv<23> compute_pro_1::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<31> compute_pro_1::ap_const_lv31_1 = "1";
const sc_lv<6> compute_pro_1::ap_const_lv6_1 = "1";
const bool compute_pro_1::ap_const_boolean_1 = true;

compute_pro_1::compute_pro_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    input_regs_U = new compute_pro_1_inpcmv("input_regs_U");
    input_regs_U->clk(ap_clk);
    input_regs_U->reset(ap_rst);
    input_regs_U->address0(input_regs_address0);
    input_regs_U->ce0(input_regs_ce0);
    input_regs_U->q0(input_regs_q0);
    input_regs_U->address1(input_regs_address1);
    input_regs_U->ce1(input_regs_ce1);
    input_regs_U->we1(input_regs_we1);
    input_regs_U->d1(input_buffer_V_dout);
    output_temp_U = new compute_pro_1_outcnw("output_temp_U");
    output_temp_U->clk(ap_clk);
    output_temp_U->reset(ap_rst);
    output_temp_U->address0(output_temp_address0);
    output_temp_U->ce0(output_temp_ce0);
    output_temp_U->q0(output_temp_q0);
    output_temp_U->address1(output_temp_address1);
    output_temp_U->ce1(output_temp_ce1);
    output_temp_U->we1(output_temp_we1);
    output_temp_U->d1(output_temp_d1);
    moblie_net_hadd_1bkb_U2945 = new moblie_net_hadd_1bkb<1,4,16,16,16>("moblie_net_hadd_1bkb_U2945");
    moblie_net_hadd_1bkb_U2945->clk(ap_clk);
    moblie_net_hadd_1bkb_U2945->reset(ap_rst);
    moblie_net_hadd_1bkb_U2945->din0(grp_fu_272_p0);
    moblie_net_hadd_1bkb_U2945->din1(mac_dat_reg_248);
    moblie_net_hadd_1bkb_U2945->ce(ap_var_for_const0);
    moblie_net_hadd_1bkb_U2945->dout(grp_fu_272_p2);
    moblie_net_hmul_1cud_U2946 = new moblie_net_hmul_1cud<1,4,16,16,16>("moblie_net_hmul_1cud_U2946");
    moblie_net_hmul_1cud_U2946->clk(ap_clk);
    moblie_net_hmul_1cud_U2946->reset(ap_rst);
    moblie_net_hmul_1cud_U2946->din0(input_regs_q0);
    moblie_net_hmul_1cud_U2946->din1(tmp_1341_reg_502);
    moblie_net_hmul_1cud_U2946->ce(ap_var_for_const0);
    moblie_net_hmul_1cud_U2946->dout(grp_fu_277_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_42_fu_361_p2 );
    sensitive << ( tmp_1340_fu_378_p1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_42_fu_361_p2 );
    sensitive << ( tmp_1340_fu_378_p1 );

    SC_METHOD(thread_beta_buffer_V_read);
    sensitive << ( beta_buffer_V_empty_n );
    sensitive << ( tmp_39_reg_460 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_45_fu_387_p2 );

    SC_METHOD(thread_data_buffer_V_read);
    sensitive << ( data_buffer_V_empty_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_42_fu_361_p2 );

    SC_METHOD(thread_data_m_V_read);
    sensitive << ( data_m_V_empty_n );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_data_n_V_read);
    sensitive << ( data_n_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_nbreadreq_fu_110_p3 );
    sensitive << ( tmp_35_nbwritereq_fu_118_p3 );

    SC_METHOD(thread_grp_fu_272_p0);
    sensitive << ( tmp_1342_reg_497 );
    sensitive << ( mul_dat_reg_517 );
    sensitive << ( output_temp_load_reg_527 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_icmp_fu_351_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_1337_fu_341_p4 );

    SC_METHOD(thread_input_buffer_V_read);
    sensitive << ( input_buffer_V_empty_n );
    sensitive << ( tmp_44_reg_476 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_45_fu_387_p2 );

    SC_METHOD(thread_input_regs_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_48_fu_421_p1 );

    SC_METHOD(thread_input_regs_address1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_47_fu_398_p1 );

    SC_METHOD(thread_input_regs_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_input_regs_ce1);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_input_regs_we1);
    sensitive << ( tmp_44_reg_476 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_45_fu_387_p2 );

    SC_METHOD(thread_mLoops_fu_304_p3);
    sensitive << ( tmp_1336_fu_290_p3 );
    sensitive << ( tmp_36_fu_298_p2 );

    SC_METHOD(thread_nLoops_fu_323_p3);
    sensitive << ( tmp_37_fu_312_p2 );
    sensitive << ( tmp_38_fu_317_p2 );

    SC_METHOD(thread_output_buffer_V_din);
    sensitive << ( tmp_39_reg_460 );
    sensitive << ( icmp_reg_464 );
    sensitive << ( tmp_51_reg_532 );
    sensitive << ( tmp_49_reg_538 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_output_buffer_V_write);
    sensitive << ( output_buffer_V_full_n );
    sensitive << ( tmp_39_reg_460 );
    sensitive << ( icmp_reg_464 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_output_temp_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_50_fu_408_p1 );

    SC_METHOD(thread_output_temp_address1);
    sensitive << ( output_temp_addr_reg_491 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_52_fu_426_p1 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_output_temp_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_temp_ce1);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_output_temp_d1);
    sensitive << ( tmp_51_reg_532 );
    sensitive << ( tmp_49_reg_538 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_output_temp_we1);
    sensitive << ( tmp_39_reg_460 );
    sensitive << ( icmp_reg_464 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_result_buffer_V_din);
    sensitive << ( data_buffer_V_dout );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_42_fu_361_p2 );

    SC_METHOD(thread_result_buffer_V_write);
    sensitive << ( result_buffer_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_42_fu_361_p2 );

    SC_METHOD(thread_result_m_V_din);
    sensitive << ( tmp_1338_reg_445 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_42_fu_361_p2 );

    SC_METHOD(thread_result_m_V_write);
    sensitive << ( result_m_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_42_fu_361_p2 );

    SC_METHOD(thread_result_n_V_din);
    sensitive << ( tmp_1339_reg_437 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_42_fu_361_p2 );

    SC_METHOD(thread_result_n_V_write);
    sensitive << ( result_n_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_42_fu_361_p2 );

    SC_METHOD(thread_tm_2_fu_366_p2);
    sensitive << ( tm_reg_236 );

    SC_METHOD(thread_tm_cast_fu_357_p1);
    sensitive << ( tm_reg_236 );

    SC_METHOD(thread_tmp_1336_fu_290_p3);
    sensitive << ( data_m_V_dout );

    SC_METHOD(thread_tmp_1337_fu_341_p4);
    sensitive << ( tmp_40_fu_336_p2 );

    SC_METHOD(thread_tmp_1340_fu_378_p1);
    sensitive << ( data_buffer_V_dout );

    SC_METHOD(thread_tmp_35_nbwritereq_fu_118_p3);
    sensitive << ( result_buffer_V_full_n );

    SC_METHOD(thread_tmp_36_fu_298_p2);
    sensitive << ( data_m_V_dout );

    SC_METHOD(thread_tmp_37_fu_312_p2);
    sensitive << ( tmp_1339_reg_437 );

    SC_METHOD(thread_tmp_38_fu_317_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_37_fu_312_p2 );

    SC_METHOD(thread_tmp_39_fu_331_p2);
    sensitive << ( tmp_1339_reg_437 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_40_fu_336_p2);
    sensitive << ( tmp_1339_reg_437 );

    SC_METHOD(thread_tmp_42_fu_361_p2);
    sensitive << ( mLoops_reg_450 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tm_cast_fu_357_p1 );

    SC_METHOD(thread_tmp_44_fu_372_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_42_fu_361_p2 );
    sensitive << ( tm_reg_236 );

    SC_METHOD(thread_tmp_45_fu_387_p2);
    sensitive << ( nLoops_reg_455 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tn_cast_fu_383_p1 );

    SC_METHOD(thread_tmp_47_fu_398_p1);
    sensitive << ( tn_reg_260 );

    SC_METHOD(thread_tmp_48_fu_421_p1);
    sensitive << ( tn_reg_260 );

    SC_METHOD(thread_tmp_50_fu_408_p1);
    sensitive << ( tm_reg_236 );

    SC_METHOD(thread_tmp_52_fu_426_p1);
    sensitive << ( tm_reg_236 );

    SC_METHOD(thread_tmp_nbreadreq_fu_110_p3);
    sensitive << ( data_buffer_V_empty_n );

    SC_METHOD(thread_tn_2_fu_392_p2);
    sensitive << ( tn_reg_260 );

    SC_METHOD(thread_tn_cast_fu_383_p1);
    sensitive << ( tn_reg_260 );

    SC_METHOD(thread_weight_buffer_V_read);
    sensitive << ( weight_buffer_V_empty_n );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_nbreadreq_fu_110_p3 );
    sensitive << ( tmp_35_nbwritereq_fu_118_p3 );
    sensitive << ( tmp_39_reg_460 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_42_fu_361_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_45_fu_387_p2 );
    sensitive << ( tmp_1340_fu_378_p1 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "compute_pro_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_buffer_V_dout, "(port)input_buffer_V_dout");
    sc_trace(mVcdFile, input_buffer_V_empty_n, "(port)input_buffer_V_empty_n");
    sc_trace(mVcdFile, input_buffer_V_read, "(port)input_buffer_V_read");
    sc_trace(mVcdFile, weight_buffer_V_dout, "(port)weight_buffer_V_dout");
    sc_trace(mVcdFile, weight_buffer_V_empty_n, "(port)weight_buffer_V_empty_n");
    sc_trace(mVcdFile, weight_buffer_V_read, "(port)weight_buffer_V_read");
    sc_trace(mVcdFile, beta_buffer_V_dout, "(port)beta_buffer_V_dout");
    sc_trace(mVcdFile, beta_buffer_V_empty_n, "(port)beta_buffer_V_empty_n");
    sc_trace(mVcdFile, beta_buffer_V_read, "(port)beta_buffer_V_read");
    sc_trace(mVcdFile, output_buffer_V_din, "(port)output_buffer_V_din");
    sc_trace(mVcdFile, output_buffer_V_full_n, "(port)output_buffer_V_full_n");
    sc_trace(mVcdFile, output_buffer_V_write, "(port)output_buffer_V_write");
    sc_trace(mVcdFile, data_buffer_V_dout, "(port)data_buffer_V_dout");
    sc_trace(mVcdFile, data_buffer_V_empty_n, "(port)data_buffer_V_empty_n");
    sc_trace(mVcdFile, data_buffer_V_read, "(port)data_buffer_V_read");
    sc_trace(mVcdFile, result_buffer_V_din, "(port)result_buffer_V_din");
    sc_trace(mVcdFile, result_buffer_V_full_n, "(port)result_buffer_V_full_n");
    sc_trace(mVcdFile, result_buffer_V_write, "(port)result_buffer_V_write");
    sc_trace(mVcdFile, data_m_V_dout, "(port)data_m_V_dout");
    sc_trace(mVcdFile, data_m_V_empty_n, "(port)data_m_V_empty_n");
    sc_trace(mVcdFile, data_m_V_read, "(port)data_m_V_read");
    sc_trace(mVcdFile, data_n_V_dout, "(port)data_n_V_dout");
    sc_trace(mVcdFile, data_n_V_empty_n, "(port)data_n_V_empty_n");
    sc_trace(mVcdFile, data_n_V_read, "(port)data_n_V_read");
    sc_trace(mVcdFile, result_m_V_din, "(port)result_m_V_din");
    sc_trace(mVcdFile, result_m_V_full_n, "(port)result_m_V_full_n");
    sc_trace(mVcdFile, result_m_V_write, "(port)result_m_V_write");
    sc_trace(mVcdFile, result_n_V_din, "(port)result_n_V_din");
    sc_trace(mVcdFile, result_n_V_full_n, "(port)result_n_V_full_n");
    sc_trace(mVcdFile, result_n_V_write, "(port)result_n_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_1339_reg_437, "tmp_1339_reg_437");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_110_p3, "tmp_nbreadreq_fu_110_p3");
    sc_trace(mVcdFile, tmp_35_nbwritereq_fu_118_p3, "tmp_35_nbwritereq_fu_118_p3");
    sc_trace(mVcdFile, tmp_1338_reg_445, "tmp_1338_reg_445");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, mLoops_fu_304_p3, "mLoops_fu_304_p3");
    sc_trace(mVcdFile, mLoops_reg_450, "mLoops_reg_450");
    sc_trace(mVcdFile, nLoops_fu_323_p3, "nLoops_fu_323_p3");
    sc_trace(mVcdFile, nLoops_reg_455, "nLoops_reg_455");
    sc_trace(mVcdFile, tmp_39_fu_331_p2, "tmp_39_fu_331_p2");
    sc_trace(mVcdFile, tmp_39_reg_460, "tmp_39_reg_460");
    sc_trace(mVcdFile, icmp_fu_351_p2, "icmp_fu_351_p2");
    sc_trace(mVcdFile, icmp_reg_464, "icmp_reg_464");
    sc_trace(mVcdFile, tm_2_fu_366_p2, "tm_2_fu_366_p2");
    sc_trace(mVcdFile, tm_2_reg_471, "tm_2_reg_471");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_44_fu_372_p2, "tmp_44_fu_372_p2");
    sc_trace(mVcdFile, tmp_44_reg_476, "tmp_44_reg_476");
    sc_trace(mVcdFile, tmp_42_fu_361_p2, "tmp_42_fu_361_p2");
    sc_trace(mVcdFile, tn_2_fu_392_p2, "tn_2_fu_392_p2");
    sc_trace(mVcdFile, tn_2_reg_486, "tn_2_reg_486");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, output_temp_addr_reg_491, "output_temp_addr_reg_491");
    sc_trace(mVcdFile, tmp_45_fu_387_p2, "tmp_45_fu_387_p2");
    sc_trace(mVcdFile, tmp_1342_reg_497, "tmp_1342_reg_497");
    sc_trace(mVcdFile, tmp_1341_reg_502, "tmp_1341_reg_502");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, input_regs_q0, "input_regs_q0");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_fu_277_p2, "grp_fu_277_p2");
    sc_trace(mVcdFile, mul_dat_reg_517, "mul_dat_reg_517");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_272_p2, "grp_fu_272_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, output_temp_q0, "output_temp_q0");
    sc_trace(mVcdFile, output_temp_load_reg_527, "output_temp_load_reg_527");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, tmp_51_reg_532, "tmp_51_reg_532");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, tmp_49_reg_538, "tmp_49_reg_538");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, input_regs_address0, "input_regs_address0");
    sc_trace(mVcdFile, input_regs_ce0, "input_regs_ce0");
    sc_trace(mVcdFile, input_regs_address1, "input_regs_address1");
    sc_trace(mVcdFile, input_regs_ce1, "input_regs_ce1");
    sc_trace(mVcdFile, input_regs_we1, "input_regs_we1");
    sc_trace(mVcdFile, output_temp_address0, "output_temp_address0");
    sc_trace(mVcdFile, output_temp_ce0, "output_temp_ce0");
    sc_trace(mVcdFile, output_temp_address1, "output_temp_address1");
    sc_trace(mVcdFile, output_temp_ce1, "output_temp_ce1");
    sc_trace(mVcdFile, output_temp_we1, "output_temp_we1");
    sc_trace(mVcdFile, output_temp_d1, "output_temp_d1");
    sc_trace(mVcdFile, tm_reg_236, "tm_reg_236");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, mac_dat_reg_248, "mac_dat_reg_248");
    sc_trace(mVcdFile, tn_reg_260, "tn_reg_260");
    sc_trace(mVcdFile, tmp_47_fu_398_p1, "tmp_47_fu_398_p1");
    sc_trace(mVcdFile, tmp_50_fu_408_p1, "tmp_50_fu_408_p1");
    sc_trace(mVcdFile, tmp_48_fu_421_p1, "tmp_48_fu_421_p1");
    sc_trace(mVcdFile, tmp_52_fu_426_p1, "tmp_52_fu_426_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, tmp_1340_fu_378_p1, "tmp_1340_fu_378_p1");
    sc_trace(mVcdFile, grp_fu_272_p0, "grp_fu_272_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, tmp_1336_fu_290_p3, "tmp_1336_fu_290_p3");
    sc_trace(mVcdFile, tmp_36_fu_298_p2, "tmp_36_fu_298_p2");
    sc_trace(mVcdFile, tmp_37_fu_312_p2, "tmp_37_fu_312_p2");
    sc_trace(mVcdFile, tmp_38_fu_317_p2, "tmp_38_fu_317_p2");
    sc_trace(mVcdFile, tmp_40_fu_336_p2, "tmp_40_fu_336_p2");
    sc_trace(mVcdFile, tmp_1337_fu_341_p4, "tmp_1337_fu_341_p4");
    sc_trace(mVcdFile, tm_cast_fu_357_p1, "tm_cast_fu_357_p1");
    sc_trace(mVcdFile, tn_cast_fu_383_p1, "tn_cast_fu_383_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
#endif

    }
}

compute_pro_1::~compute_pro_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete input_regs_U;
    delete output_temp_U;
    delete moblie_net_hadd_1bkb_U2945;
    delete moblie_net_hmul_1cud_U2946;
}

void compute_pro_1::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void compute_pro_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                    esl_seteq<1,1,1>(tmp_42_fu_361_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1340_fu_378_p1.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        mac_dat_reg_248 = grp_fu_272_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_fu_361_p2.read()))) {
        mac_dat_reg_248 = ap_const_lv16_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        tm_reg_236 = tm_2_reg_471.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tm_reg_236 = ap_const_lv31_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        tn_reg_260 = tn_2_reg_486.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_fu_361_p2.read()))) {
        tn_reg_260 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        icmp_reg_464 = icmp_fu_351_p2.read();
        mLoops_reg_450 = mLoops_fu_304_p3.read();
        nLoops_reg_455 = nLoops_fu_323_p3.read();
        tmp_1338_reg_445 = data_m_V_dout.read();
        tmp_39_reg_460 = tmp_39_fu_331_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        mul_dat_reg_517 = grp_fu_277_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(tmp_45_fu_387_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_39_reg_460.read(), ap_const_lv1_0))) {
        output_temp_addr_reg_491 =  (sc_lv<2>) (tmp_50_fu_408_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        output_temp_load_reg_527 = output_temp_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tm_2_reg_471 = tm_2_fu_366_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_110_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_35_nbwritereq_fu_118_p3.read()))) {
        tmp_1339_reg_437 = data_n_V_dout.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp_1341_reg_502 = weight_buffer_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(tmp_45_fu_387_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_460.read()))) {
        tmp_1342_reg_497 = beta_buffer_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_fu_361_p2.read()))) {
        tmp_44_reg_476 = tmp_44_fu_372_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        tmp_49_reg_538 = grp_fu_272_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        tmp_51_reg_532 = grp_fu_272_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tn_2_reg_486 = tn_2_fu_392_p2.read();
    }
}

void compute_pro_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void compute_pro_1::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void compute_pro_1::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void compute_pro_1::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void compute_pro_1::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void compute_pro_1::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void compute_pro_1::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void compute_pro_1::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void compute_pro_1::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void compute_pro_1::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void compute_pro_1::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void compute_pro_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void compute_pro_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void compute_pro_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void compute_pro_1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void compute_pro_1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void compute_pro_1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void compute_pro_1::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void compute_pro_1::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(tmp_42_fu_361_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1340_fu_378_p1.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void compute_pro_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void compute_pro_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(tmp_42_fu_361_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1340_fu_378_p1.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void compute_pro_1::thread_beta_buffer_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(tmp_45_fu_387_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_460.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, beta_buffer_V_empty_n.read()))) {
        beta_buffer_V_read = ap_const_logic_1;
    } else {
        beta_buffer_V_read = ap_const_logic_0;
    }
}

void compute_pro_1::thread_data_buffer_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(tmp_42_fu_361_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, data_buffer_V_empty_n.read()))) {
        data_buffer_V_read = ap_const_logic_1;
    } else {
        data_buffer_V_read = ap_const_logic_0;
    }
}

void compute_pro_1::thread_data_m_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, data_m_V_empty_n.read()))) {
        data_m_V_read = ap_const_logic_1;
    } else {
        data_m_V_read = ap_const_logic_0;
    }
}

void compute_pro_1::thread_data_n_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_110_p3.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_35_nbwritereq_fu_118_p3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, data_n_V_empty_n.read()))) {
        data_n_V_read = ap_const_logic_1;
    } else {
        data_n_V_read = ap_const_logic_0;
    }
}

void compute_pro_1::thread_grp_fu_272_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_272_p0 = tmp_1342_reg_497.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_272_p0 = output_temp_load_reg_527.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_272_p0 = mul_dat_reg_517.read();
    } else {
        grp_fu_272_p0 = "XXXXXXXXXXXXXXXX";
    }
}

void compute_pro_1::thread_icmp_fu_351_p2() {
    icmp_fu_351_p2 = (!tmp_1337_fu_341_p4.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): (sc_bigint<23>(tmp_1337_fu_341_p4.read()) > sc_bigint<23>(ap_const_lv23_0));
}

void compute_pro_1::thread_input_buffer_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_fu_387_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_44_reg_476.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, input_buffer_V_empty_n.read()))) {
        input_buffer_V_read = ap_const_logic_1;
    } else {
        input_buffer_V_read = ap_const_logic_0;
    }
}

void compute_pro_1::thread_input_regs_address0() {
    input_regs_address0 =  (sc_lv<5>) (tmp_48_fu_421_p1.read());
}

void compute_pro_1::thread_input_regs_address1() {
    input_regs_address1 =  (sc_lv<5>) (tmp_47_fu_398_p1.read());
}

void compute_pro_1::thread_input_regs_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        input_regs_ce0 = ap_const_logic_1;
    } else {
        input_regs_ce0 = ap_const_logic_0;
    }
}

void compute_pro_1::thread_input_regs_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_regs_ce1 = ap_const_logic_1;
    } else {
        input_regs_ce1 = ap_const_logic_0;
    }
}

void compute_pro_1::thread_input_regs_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_fu_387_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_44_reg_476.read()))) {
        input_regs_we1 = ap_const_logic_1;
    } else {
        input_regs_we1 = ap_const_logic_0;
    }
}

void compute_pro_1::thread_mLoops_fu_304_p3() {
    mLoops_fu_304_p3 = (!tmp_1336_fu_290_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_1336_fu_290_p3.read()[0].to_bool())? ap_const_lv32_4: tmp_36_fu_298_p2.read());
}

void compute_pro_1::thread_nLoops_fu_323_p3() {
    nLoops_fu_323_p3 = (!tmp_38_fu_317_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_38_fu_317_p2.read()[0].to_bool())? ap_const_lv32_20: tmp_37_fu_312_p2.read());
}

void compute_pro_1::thread_output_buffer_V_din() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_reg_464.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
            output_buffer_V_din = tmp_49_reg_538.read();
        } else if ((esl_seteq<1,1,1>(tmp_39_reg_460.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
            output_buffer_V_din = tmp_51_reg_532.read();
        } else {
            output_buffer_V_din = "XXXXXXXXXXXXXXXX";
        }
    } else {
        output_buffer_V_din = "XXXXXXXXXXXXXXXX";
    }
}

void compute_pro_1::thread_output_buffer_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, output_buffer_V_full_n.read()) && 
         ((esl_seteq<1,1,1>(tmp_39_reg_460.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, icmp_reg_464.read()) && 
           esl_seteq<1,1,1>(ap_const_logic_1, output_buffer_V_full_n.read())) || 
          (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, icmp_reg_464.read()))))) {
        output_buffer_V_write = ap_const_logic_1;
    } else {
        output_buffer_V_write = ap_const_logic_0;
    }
}

void compute_pro_1::thread_output_temp_address0() {
    output_temp_address0 =  (sc_lv<2>) (tmp_50_fu_408_p1.read());
}

void compute_pro_1::thread_output_temp_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        output_temp_address1 =  (sc_lv<2>) (tmp_52_fu_426_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        output_temp_address1 = output_temp_addr_reg_491.read();
    } else {
        output_temp_address1 =  (sc_lv<2>) ("XX");
    }
}

void compute_pro_1::thread_output_temp_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_temp_ce0 = ap_const_logic_1;
    } else {
        output_temp_ce0 = ap_const_logic_0;
    }
}

void compute_pro_1::thread_output_temp_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        output_temp_ce1 = ap_const_logic_1;
    } else {
        output_temp_ce1 = ap_const_logic_0;
    }
}

void compute_pro_1::thread_output_temp_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        output_temp_d1 = tmp_49_reg_538.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        output_temp_d1 = tmp_51_reg_532.read();
    } else {
        output_temp_d1 = "XXXXXXXXXXXXXXXX";
    }
}

void compute_pro_1::thread_output_temp_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,1,1>(icmp_reg_464.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(tmp_39_reg_460.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(icmp_reg_464.read(), ap_const_lv1_0)))) {
        output_temp_we1 = ap_const_logic_1;
    } else {
        output_temp_we1 = ap_const_logic_0;
    }
}

void compute_pro_1::thread_result_buffer_V_din() {
    result_buffer_V_din = data_buffer_V_dout.read();
}

void compute_pro_1::thread_result_buffer_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(tmp_42_fu_361_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, result_buffer_V_full_n.read()))) {
        result_buffer_V_write = ap_const_logic_1;
    } else {
        result_buffer_V_write = ap_const_logic_0;
    }
}

void compute_pro_1::thread_result_m_V_din() {
    result_m_V_din = tmp_1338_reg_445.read();
}

void compute_pro_1::thread_result_m_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(tmp_42_fu_361_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, result_m_V_full_n.read()))) {
        result_m_V_write = ap_const_logic_1;
    } else {
        result_m_V_write = ap_const_logic_0;
    }
}

void compute_pro_1::thread_result_n_V_din() {
    result_n_V_din = tmp_1339_reg_437.read();
}

void compute_pro_1::thread_result_n_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(tmp_42_fu_361_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, result_n_V_full_n.read()))) {
        result_n_V_write = ap_const_logic_1;
    } else {
        result_n_V_write = ap_const_logic_0;
    }
}

void compute_pro_1::thread_tm_2_fu_366_p2() {
    tm_2_fu_366_p2 = (!tm_reg_236.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(tm_reg_236.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void compute_pro_1::thread_tm_cast_fu_357_p1() {
    tm_cast_fu_357_p1 = esl_zext<32,31>(tm_reg_236.read());
}

void compute_pro_1::thread_tmp_1336_fu_290_p3() {
    tmp_1336_fu_290_p3 = data_m_V_dout.read().range(31, 31);
}

void compute_pro_1::thread_tmp_1337_fu_341_p4() {
    tmp_1337_fu_341_p4 = tmp_40_fu_336_p2.read().range(31, 9);
}

void compute_pro_1::thread_tmp_1340_fu_378_p1() {
    tmp_1340_fu_378_p1 =  (sc_lv<1>) (data_buffer_V_dout.read());
}

void compute_pro_1::thread_tmp_35_nbwritereq_fu_118_p3() {
    tmp_35_nbwritereq_fu_118_p3 =  (sc_lv<1>) (result_buffer_V_full_n.read());
}

void compute_pro_1::thread_tmp_36_fu_298_p2() {
    tmp_36_fu_298_p2 = (!ap_const_lv32_4.is_01() || !data_m_V_dout.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_4) - sc_biguint<32>(data_m_V_dout.read()));
}

void compute_pro_1::thread_tmp_37_fu_312_p2() {
    tmp_37_fu_312_p2 = (!ap_const_lv32_200.is_01() || !tmp_1339_reg_437.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_200) - sc_biguint<32>(tmp_1339_reg_437.read()));
}

void compute_pro_1::thread_tmp_38_fu_317_p2() {
    tmp_38_fu_317_p2 = (!tmp_37_fu_312_p2.read().is_01() || !ap_const_lv32_20.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_37_fu_312_p2.read()) > sc_bigint<32>(ap_const_lv32_20));
}

void compute_pro_1::thread_tmp_39_fu_331_p2() {
    tmp_39_fu_331_p2 = (!tmp_1339_reg_437.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_1339_reg_437.read()) < sc_bigint<32>(ap_const_lv32_1));
}

void compute_pro_1::thread_tmp_40_fu_336_p2() {
    tmp_40_fu_336_p2 = (!tmp_1339_reg_437.read().is_01() || !ap_const_lv32_20.is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1339_reg_437.read()) + sc_biguint<32>(ap_const_lv32_20));
}

void compute_pro_1::thread_tmp_42_fu_361_p2() {
    tmp_42_fu_361_p2 = (!tm_cast_fu_357_p1.read().is_01() || !mLoops_reg_450.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tm_cast_fu_357_p1.read()) < sc_bigint<32>(mLoops_reg_450.read()));
}

void compute_pro_1::thread_tmp_44_fu_372_p2() {
    tmp_44_fu_372_p2 = (!tm_reg_236.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): sc_lv<1>(tm_reg_236.read() == ap_const_lv31_0);
}

void compute_pro_1::thread_tmp_45_fu_387_p2() {
    tmp_45_fu_387_p2 = (!tn_cast_fu_383_p1.read().is_01() || !nLoops_reg_455.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tn_cast_fu_383_p1.read()) < sc_bigint<32>(nLoops_reg_455.read()));
}

void compute_pro_1::thread_tmp_47_fu_398_p1() {
    tmp_47_fu_398_p1 = esl_zext<64,6>(tn_reg_260.read());
}

void compute_pro_1::thread_tmp_48_fu_421_p1() {
    tmp_48_fu_421_p1 = esl_zext<64,6>(tn_reg_260.read());
}

void compute_pro_1::thread_tmp_50_fu_408_p1() {
    tmp_50_fu_408_p1 = esl_zext<64,31>(tm_reg_236.read());
}

void compute_pro_1::thread_tmp_52_fu_426_p1() {
    tmp_52_fu_426_p1 = esl_zext<64,31>(tm_reg_236.read());
}

void compute_pro_1::thread_tmp_nbreadreq_fu_110_p3() {
    tmp_nbreadreq_fu_110_p3 =  (sc_lv<1>) (data_buffer_V_empty_n.read());
}

void compute_pro_1::thread_tn_2_fu_392_p2() {
    tn_2_fu_392_p2 = (!tn_reg_260.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(tn_reg_260.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void compute_pro_1::thread_tn_cast_fu_383_p1() {
    tn_cast_fu_383_p1 = esl_zext<32,6>(tn_reg_260.read());
}

void compute_pro_1::thread_weight_buffer_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, weight_buffer_V_empty_n.read()))) {
        weight_buffer_V_read = ap_const_logic_1;
    } else {
        weight_buffer_V_read = ap_const_logic_0;
    }
}

void compute_pro_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && (esl_seteq<1,1,1>(tmp_35_nbwritereq_fu_118_p3.read(), ap_const_lv1_0) || 
  esl_seteq<1,1,1>(tmp_nbreadreq_fu_110_p3.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(tmp_42_fu_361_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1340_fu_378_p1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(tmp_42_fu_361_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1340_fu_378_p1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(tmp_45_fu_387_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_460.read()))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(tmp_45_fu_387_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_39_reg_460.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<26>) ("XXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

