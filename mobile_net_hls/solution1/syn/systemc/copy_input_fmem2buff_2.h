// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _copy_input_fmem2buff_2_HH_
#define _copy_input_fmem2buff_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct copy_input_fmem2buff_2 : public sc_module {
    // Port declarations 64
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_inputs_AWVALID;
    sc_in< sc_logic > m_axi_inputs_AWREADY;
    sc_out< sc_lv<32> > m_axi_inputs_AWADDR;
    sc_out< sc_lv<1> > m_axi_inputs_AWID;
    sc_out< sc_lv<32> > m_axi_inputs_AWLEN;
    sc_out< sc_lv<3> > m_axi_inputs_AWSIZE;
    sc_out< sc_lv<2> > m_axi_inputs_AWBURST;
    sc_out< sc_lv<2> > m_axi_inputs_AWLOCK;
    sc_out< sc_lv<4> > m_axi_inputs_AWCACHE;
    sc_out< sc_lv<3> > m_axi_inputs_AWPROT;
    sc_out< sc_lv<4> > m_axi_inputs_AWQOS;
    sc_out< sc_lv<4> > m_axi_inputs_AWREGION;
    sc_out< sc_lv<1> > m_axi_inputs_AWUSER;
    sc_out< sc_logic > m_axi_inputs_WVALID;
    sc_in< sc_logic > m_axi_inputs_WREADY;
    sc_out< sc_lv<16> > m_axi_inputs_WDATA;
    sc_out< sc_lv<2> > m_axi_inputs_WSTRB;
    sc_out< sc_logic > m_axi_inputs_WLAST;
    sc_out< sc_lv<1> > m_axi_inputs_WID;
    sc_out< sc_lv<1> > m_axi_inputs_WUSER;
    sc_out< sc_logic > m_axi_inputs_ARVALID;
    sc_in< sc_logic > m_axi_inputs_ARREADY;
    sc_out< sc_lv<32> > m_axi_inputs_ARADDR;
    sc_out< sc_lv<1> > m_axi_inputs_ARID;
    sc_out< sc_lv<32> > m_axi_inputs_ARLEN;
    sc_out< sc_lv<3> > m_axi_inputs_ARSIZE;
    sc_out< sc_lv<2> > m_axi_inputs_ARBURST;
    sc_out< sc_lv<2> > m_axi_inputs_ARLOCK;
    sc_out< sc_lv<4> > m_axi_inputs_ARCACHE;
    sc_out< sc_lv<3> > m_axi_inputs_ARPROT;
    sc_out< sc_lv<4> > m_axi_inputs_ARQOS;
    sc_out< sc_lv<4> > m_axi_inputs_ARREGION;
    sc_out< sc_lv<1> > m_axi_inputs_ARUSER;
    sc_in< sc_logic > m_axi_inputs_RVALID;
    sc_out< sc_logic > m_axi_inputs_RREADY;
    sc_in< sc_lv<16> > m_axi_inputs_RDATA;
    sc_in< sc_logic > m_axi_inputs_RLAST;
    sc_in< sc_lv<1> > m_axi_inputs_RID;
    sc_in< sc_lv<1> > m_axi_inputs_RUSER;
    sc_in< sc_lv<2> > m_axi_inputs_RRESP;
    sc_in< sc_logic > m_axi_inputs_BVALID;
    sc_out< sc_logic > m_axi_inputs_BREADY;
    sc_in< sc_lv<2> > m_axi_inputs_BRESP;
    sc_in< sc_lv<1> > m_axi_inputs_BID;
    sc_in< sc_lv<1> > m_axi_inputs_BUSER;
    sc_in< sc_lv<31> > inputs_offset;
    sc_out< sc_lv<16> > input_buffer_V_din;
    sc_in< sc_logic > input_buffer_V_full_n;
    sc_out< sc_logic > input_buffer_V_write;
    sc_in< sc_lv<3> > n;
    sc_in< sc_lv<10> > r;
    sc_in< sc_lv<10> > c;
    sc_in< sc_lv<2> > nLoops;
    sc_in< sc_lv<10> > rLoops;
    sc_in< sc_lv<10> > cLoops;
    sc_out< sc_logic > input_cntl_V_din;
    sc_in< sc_logic > input_cntl_V_full_n;
    sc_out< sc_logic > input_cntl_V_write;


    // Module declarations
    copy_input_fmem2buff_2(sc_module_name name);
    SC_HAS_PROCESS(copy_input_fmem2buff_2);

    ~copy_input_fmem2buff_2();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<30> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > inputs_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_logic > inputs_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< bool > ap_block_pp2_stage0;
    sc_signal< sc_lv<1> > exitcond3_reg_753;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > exitcond1_reg_744;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_reg_725;
    sc_signal< sc_lv<5> > i8_reg_294;
    sc_signal< sc_lv<5> > i6_reg_305;
    sc_signal< sc_lv<5> > i5_reg_316;
    sc_signal< sc_lv<16> > reg_338;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< bool > ap_block_state22_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state23_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state24_pp1_stage0_iter2;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<22> > base_addr1_cast_fu_383_p1;
    sc_signal< sc_lv<22> > base_addr2_cast_fu_413_p1;
    sc_signal< sc_lv<1> > tmp_127_fu_417_p2;
    sc_signal< sc_lv<1> > tmp_127_reg_648;
    sc_signal< sc_lv<1> > tmp_603_reg_652;
    sc_signal< sc_lv<5> > tmp_129_fu_441_p2;
    sc_signal< sc_lv<5> > tmp_129_reg_656;
    sc_signal< sc_lv<5> > tmp_130_fu_447_p2;
    sc_signal< sc_lv<5> > tmp_130_reg_661;
    sc_signal< sc_lv<5> > tmp_131_fu_457_p2;
    sc_signal< sc_lv<5> > tmp_131_reg_666;
    sc_signal< sc_lv<32> > tmp_132_fu_463_p1;
    sc_signal< sc_lv<32> > tmp_132_reg_671;
    sc_signal< sc_lv<33> > sext_cast_fu_467_p1;
    sc_signal< sc_lv<33> > sext_cast_reg_676;
    sc_signal< sc_lv<2> > tn_9_fu_476_p2;
    sc_signal< sc_lv<2> > tn_9_reg_685;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond4_fu_486_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<5> > tr_3_fu_491_p2;
    sc_signal< sc_lv<5> > tr_3_reg_694;
    sc_signal< sc_lv<1> > or_cond_fu_514_p2;
    sc_signal< sc_lv<1> > or_cond_reg_699;
    sc_signal< sc_lv<32> > inputs_addr_6_reg_703;
    sc_signal< sc_lv<32> > inputs_addr_reg_709;
    sc_signal< sc_lv<22> > base_addr1_d1_2_fu_558_p2;
    sc_signal< sc_lv<22> > base_addr2_d1_2_fu_564_p2;
    sc_signal< sc_lv<1> > exitcond_fu_570_p2;
    sc_signal< sc_lv<1> > exitcond_reg_725_pp0_iter1_reg;
    sc_signal< sc_lv<5> > i_4_fu_576_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<22> > base_addr1_d2_2_fu_582_p2;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<22> > base_addr2_d2_2_fu_588_p2;
    sc_signal< sc_lv<1> > exitcond1_fu_594_p2;
    sc_signal< sc_lv<1> > exitcond1_reg_744_pp1_iter1_reg;
    sc_signal< sc_lv<5> > i_18_fu_599_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<1> > exitcond3_fu_605_p2;
    sc_signal< bool > ap_block_state32_pp2_stage0_iter0;
    sc_signal< bool > ap_block_state33_pp2_stage0_iter1;
    sc_signal< bool > ap_block_state34_pp2_stage0_iter2;
    sc_signal< bool > ap_block_pp2_stage0_11001;
    sc_signal< sc_lv<1> > exitcond3_reg_753_pp2_iter1_reg;
    sc_signal< sc_lv<5> > i_17_fu_611_p2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<16> > tmp_606_reg_762;
    sc_signal< sc_lv<5> > i_9_fu_622_p2;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state22;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< bool > ap_block_pp2_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp2_exit_iter0_state32;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter2;
    sc_signal< sc_lv<22> > base_addr1_d2_reg_230;
    sc_signal< sc_lv<22> > base_addr2_d2_reg_240;
    sc_signal< sc_lv<2> > tn_reg_250;
    sc_signal< sc_lv<22> > base_addr1_d_reg_261;
    sc_signal< sc_lv<1> > exitcond5_fu_471_p2;
    sc_signal< sc_lv<22> > base_addr2_d_reg_272;
    sc_signal< sc_lv<5> > tr_reg_283;
    sc_signal< sc_lv<5> > i_reg_327;
    sc_signal< sc_lv<1> > exitcond2_fu_617_p2;
    sc_signal< sc_lv<64> > sum8_cast_fu_529_p1;
    sc_signal< sc_lv<64> > sum1_cast_fu_548_p1;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_inputs_ARREADY;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_inputs_ARREADY;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< bool > ap_block_pp2_stage0_01001;
    sc_signal< sc_lv<2> > tmp_602_fu_343_p1;
    sc_signal< sc_lv<19> > tmp_s_fu_355_p3;
    sc_signal< sc_lv<20> > tmp_fu_347_p3;
    sc_signal< sc_lv<20> > tmp_125_fu_367_p2;
    sc_signal< sc_lv<21> > tmp_cast_fu_363_p1;
    sc_signal< sc_lv<21> > tmp_382_cast_cast_fu_373_p1;
    sc_signal< sc_lv<21> > base_addr1_fu_377_p2;
    sc_signal< sc_lv<20> > tmp_126_fu_387_p2;
    sc_signal< sc_lv<21> > tmp_383_cast_cast_fu_393_p1;
    sc_signal< sc_lv<21> > tmp1_fu_397_p2;
    sc_signal< sc_lv<21> > c_cast3_fu_403_p1;
    sc_signal< sc_lv<21> > base_addr2_fu_407_p2;
    sc_signal< sc_lv<10> > tmp_128_fu_423_p2;
    sc_signal< sc_lv<5> > tmp_604_fu_437_p1;
    sc_signal< sc_lv<5> > tmp_605_fu_453_p1;
    sc_signal< sc_lv<10> > tr_cast_cast7_fu_482_p1;
    sc_signal< sc_lv<10> > tmp_135_fu_497_p2;
    sc_signal< sc_lv<1> > tmp_136_fu_502_p2;
    sc_signal< sc_lv<1> > tmp_137_fu_508_p2;
    sc_signal< sc_lv<33> > tmp_248_cast_fu_520_p1;
    sc_signal< sc_lv<33> > sum8_fu_524_p2;
    sc_signal< sc_lv<33> > tmp_245_cast_fu_539_p1;
    sc_signal< sc_lv<33> > sum1_fu_543_p2;
    sc_signal< sc_lv<30> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_logic > ap_idle_pp2;
    sc_signal< sc_logic > ap_enable_pp2;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<30> ap_ST_fsm_state1;
    static const sc_lv<30> ap_ST_fsm_state2;
    static const sc_lv<30> ap_ST_fsm_state3;
    static const sc_lv<30> ap_ST_fsm_state4;
    static const sc_lv<30> ap_ST_fsm_state5;
    static const sc_lv<30> ap_ST_fsm_state6;
    static const sc_lv<30> ap_ST_fsm_state7;
    static const sc_lv<30> ap_ST_fsm_state8;
    static const sc_lv<30> ap_ST_fsm_state9;
    static const sc_lv<30> ap_ST_fsm_state10;
    static const sc_lv<30> ap_ST_fsm_pp0_stage0;
    static const sc_lv<30> ap_ST_fsm_state14;
    static const sc_lv<30> ap_ST_fsm_state15;
    static const sc_lv<30> ap_ST_fsm_state16;
    static const sc_lv<30> ap_ST_fsm_state17;
    static const sc_lv<30> ap_ST_fsm_state18;
    static const sc_lv<30> ap_ST_fsm_state19;
    static const sc_lv<30> ap_ST_fsm_state20;
    static const sc_lv<30> ap_ST_fsm_state21;
    static const sc_lv<30> ap_ST_fsm_pp1_stage0;
    static const sc_lv<30> ap_ST_fsm_state25;
    static const sc_lv<30> ap_ST_fsm_state26;
    static const sc_lv<30> ap_ST_fsm_state27;
    static const sc_lv<30> ap_ST_fsm_state28;
    static const sc_lv<30> ap_ST_fsm_state29;
    static const sc_lv<30> ap_ST_fsm_state30;
    static const sc_lv<30> ap_ST_fsm_state31;
    static const sc_lv<30> ap_ST_fsm_pp2_stage0;
    static const sc_lv<30> ap_ST_fsm_state35;
    static const sc_lv<30> ap_ST_fsm_state36;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_1B;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<18> ap_const_lv18_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<20> ap_const_lv20_FFE00;
    static const sc_lv<20> ap_const_lv20_FFDFF;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<10> ap_const_lv10_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<22> ap_const_lv22_40000;
    static const sc_lv<5> ap_const_lv5_12;
    static const sc_lv<22> ap_const_lv22_200;
    static const sc_lv<5> ap_const_lv5_11;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp2_stage0();
    void thread_ap_block_pp2_stage0_01001();
    void thread_ap_block_pp2_stage0_11001();
    void thread_ap_block_pp2_stage0_subdone();
    void thread_ap_block_state11_pp0_stage0_iter0();
    void thread_ap_block_state12_pp0_stage0_iter1();
    void thread_ap_block_state13_pp0_stage0_iter2();
    void thread_ap_block_state22_pp1_stage0_iter0();
    void thread_ap_block_state23_pp1_stage0_iter1();
    void thread_ap_block_state24_pp1_stage0_iter2();
    void thread_ap_block_state32_pp2_stage0_iter0();
    void thread_ap_block_state33_pp2_stage0_iter1();
    void thread_ap_block_state34_pp2_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state11();
    void thread_ap_condition_pp1_exit_iter0_state22();
    void thread_ap_condition_pp2_exit_iter0_state32();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_enable_pp2();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_idle_pp2();
    void thread_ap_ready();
    void thread_ap_sig_ioackin_m_axi_inputs_ARREADY();
    void thread_base_addr1_cast_fu_383_p1();
    void thread_base_addr1_d1_2_fu_558_p2();
    void thread_base_addr1_d2_2_fu_582_p2();
    void thread_base_addr1_fu_377_p2();
    void thread_base_addr2_cast_fu_413_p1();
    void thread_base_addr2_d1_2_fu_564_p2();
    void thread_base_addr2_d2_2_fu_588_p2();
    void thread_base_addr2_fu_407_p2();
    void thread_c_cast3_fu_403_p1();
    void thread_exitcond1_fu_594_p2();
    void thread_exitcond2_fu_617_p2();
    void thread_exitcond3_fu_605_p2();
    void thread_exitcond4_fu_486_p2();
    void thread_exitcond5_fu_471_p2();
    void thread_exitcond_fu_570_p2();
    void thread_i_17_fu_611_p2();
    void thread_i_18_fu_599_p2();
    void thread_i_4_fu_576_p2();
    void thread_i_9_fu_622_p2();
    void thread_input_buffer_V_din();
    void thread_input_buffer_V_write();
    void thread_input_cntl_V_din();
    void thread_input_cntl_V_write();
    void thread_inputs_blk_n_AR();
    void thread_inputs_blk_n_R();
    void thread_m_axi_inputs_ARADDR();
    void thread_m_axi_inputs_ARBURST();
    void thread_m_axi_inputs_ARCACHE();
    void thread_m_axi_inputs_ARID();
    void thread_m_axi_inputs_ARLEN();
    void thread_m_axi_inputs_ARLOCK();
    void thread_m_axi_inputs_ARPROT();
    void thread_m_axi_inputs_ARQOS();
    void thread_m_axi_inputs_ARREGION();
    void thread_m_axi_inputs_ARSIZE();
    void thread_m_axi_inputs_ARUSER();
    void thread_m_axi_inputs_ARVALID();
    void thread_m_axi_inputs_AWADDR();
    void thread_m_axi_inputs_AWBURST();
    void thread_m_axi_inputs_AWCACHE();
    void thread_m_axi_inputs_AWID();
    void thread_m_axi_inputs_AWLEN();
    void thread_m_axi_inputs_AWLOCK();
    void thread_m_axi_inputs_AWPROT();
    void thread_m_axi_inputs_AWQOS();
    void thread_m_axi_inputs_AWREGION();
    void thread_m_axi_inputs_AWSIZE();
    void thread_m_axi_inputs_AWUSER();
    void thread_m_axi_inputs_AWVALID();
    void thread_m_axi_inputs_BREADY();
    void thread_m_axi_inputs_RREADY();
    void thread_m_axi_inputs_WDATA();
    void thread_m_axi_inputs_WID();
    void thread_m_axi_inputs_WLAST();
    void thread_m_axi_inputs_WSTRB();
    void thread_m_axi_inputs_WUSER();
    void thread_m_axi_inputs_WVALID();
    void thread_or_cond_fu_514_p2();
    void thread_sext_cast_fu_467_p1();
    void thread_sum1_cast_fu_548_p1();
    void thread_sum1_fu_543_p2();
    void thread_sum8_cast_fu_529_p1();
    void thread_sum8_fu_524_p2();
    void thread_tmp1_fu_397_p2();
    void thread_tmp_125_fu_367_p2();
    void thread_tmp_126_fu_387_p2();
    void thread_tmp_127_fu_417_p2();
    void thread_tmp_128_fu_423_p2();
    void thread_tmp_129_fu_441_p2();
    void thread_tmp_130_fu_447_p2();
    void thread_tmp_131_fu_457_p2();
    void thread_tmp_132_fu_463_p1();
    void thread_tmp_135_fu_497_p2();
    void thread_tmp_136_fu_502_p2();
    void thread_tmp_137_fu_508_p2();
    void thread_tmp_245_cast_fu_539_p1();
    void thread_tmp_248_cast_fu_520_p1();
    void thread_tmp_382_cast_cast_fu_373_p1();
    void thread_tmp_383_cast_cast_fu_393_p1();
    void thread_tmp_602_fu_343_p1();
    void thread_tmp_604_fu_437_p1();
    void thread_tmp_605_fu_453_p1();
    void thread_tmp_cast_fu_363_p1();
    void thread_tmp_fu_347_p3();
    void thread_tmp_s_fu_355_p3();
    void thread_tn_9_fu_476_p2();
    void thread_tr_3_fu_491_p2();
    void thread_tr_cast_cast7_fu_482_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
