// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "copy_input_fmem2buff_6.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic copy_input_fmem2buff_6::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic copy_input_fmem2buff_6::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state1 = "1";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state2 = "10";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state3 = "100";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state4 = "1000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state5 = "10000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state6 = "100000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state7 = "1000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state8 = "10000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state9 = "100000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state10 = "1000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_pp0_stage0 = "10000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state14 = "100000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state15 = "1000000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state16 = "10000000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state17 = "100000000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state18 = "1000000000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state19 = "10000000000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state20 = "100000000000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state21 = "1000000000000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_pp1_stage0 = "10000000000000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state25 = "100000000000000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state26 = "1000000000000000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state27 = "10000000000000000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state28 = "100000000000000000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state29 = "1000000000000000000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state30 = "10000000000000000000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state31 = "100000000000000000000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_pp2_stage0 = "1000000000000000000000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state35 = "10000000000000000000000000000";
const sc_lv<30> copy_input_fmem2buff_6::ap_ST_fsm_state36 = "100000000000000000000000000000";
const bool copy_input_fmem2buff_6::ap_const_boolean_1 = true;
const sc_lv<32> copy_input_fmem2buff_6::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> copy_input_fmem2buff_6::ap_const_lv1_0 = "0";
const sc_lv<3> copy_input_fmem2buff_6::ap_const_lv3_0 = "000";
const sc_lv<2> copy_input_fmem2buff_6::ap_const_lv2_0 = "00";
const sc_lv<4> copy_input_fmem2buff_6::ap_const_lv4_0 = "0000";
const sc_lv<16> copy_input_fmem2buff_6::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> copy_input_fmem2buff_6::ap_const_lv32_14 = "10100";
const sc_lv<32> copy_input_fmem2buff_6::ap_const_lv32_1B = "11011";
const bool copy_input_fmem2buff_6::ap_const_boolean_0 = false;
const sc_lv<32> copy_input_fmem2buff_6::ap_const_lv32_C = "1100";
const sc_lv<32> copy_input_fmem2buff_6::ap_const_lv32_3 = "11";
const sc_lv<32> copy_input_fmem2buff_6::ap_const_lv32_13 = "10011";
const sc_lv<32> copy_input_fmem2buff_6::ap_const_lv32_A = "1010";
const sc_lv<32> copy_input_fmem2buff_6::ap_const_lv32_1 = "1";
const sc_lv<32> copy_input_fmem2buff_6::ap_const_lv32_2 = "10";
const sc_lv<1> copy_input_fmem2buff_6::ap_const_lv1_1 = "1";
const sc_lv<32> copy_input_fmem2buff_6::ap_const_lv32_B = "1011";
const sc_lv<32> copy_input_fmem2buff_6::ap_const_lv32_1C = "11100";
const sc_lv<32> copy_input_fmem2buff_6::ap_const_lv32_9 = "1001";
const sc_lv<32> copy_input_fmem2buff_6::ap_const_lv32_12 = "10010";
const sc_lv<32> copy_input_fmem2buff_6::ap_const_lv32_1A = "11010";
const sc_lv<5> copy_input_fmem2buff_6::ap_const_lv5_0 = "00000";
const sc_lv<6> copy_input_fmem2buff_6::ap_const_lv6_0 = "000000";
const sc_lv<32> copy_input_fmem2buff_6::ap_const_lv32_11 = "10001";
const sc_lv<12> copy_input_fmem2buff_6::ap_const_lv12_0 = "000000000000";
const sc_lv<13> copy_input_fmem2buff_6::ap_const_lv13_1FC0 = "1111111000000";
const sc_lv<8> copy_input_fmem2buff_6::ap_const_lv8_BF = "10111111";
const sc_lv<7> copy_input_fmem2buff_6::ap_const_lv7_0 = "0000000";
const sc_lv<7> copy_input_fmem2buff_6::ap_const_lv7_10 = "10000";
const sc_lv<32> copy_input_fmem2buff_6::ap_const_lv32_6 = "110";
const sc_lv<6> copy_input_fmem2buff_6::ap_const_lv6_1 = "1";
const sc_lv<6> copy_input_fmem2buff_6::ap_const_lv6_2 = "10";
const sc_lv<5> copy_input_fmem2buff_6::ap_const_lv5_2 = "10";
const sc_lv<2> copy_input_fmem2buff_6::ap_const_lv2_1 = "1";
const sc_lv<5> copy_input_fmem2buff_6::ap_const_lv5_1 = "1";
const sc_lv<7> copy_input_fmem2buff_6::ap_const_lv7_40 = "1000000";
const sc_lv<21> copy_input_fmem2buff_6::ap_const_lv21_1000 = "1000000000000";
const sc_lv<5> copy_input_fmem2buff_6::ap_const_lv5_12 = "10010";
const sc_lv<21> copy_input_fmem2buff_6::ap_const_lv21_40 = "1000000";
const sc_lv<5> copy_input_fmem2buff_6::ap_const_lv5_11 = "10001";

copy_input_fmem2buff_6::copy_input_fmem2buff_6(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( m_axi_inputs_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_771 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( m_axi_inputs_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_771 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( m_axi_inputs_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_771 );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);
    sensitive << ( m_axi_inputs_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_790 );

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( m_axi_inputs_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_790 );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( m_axi_inputs_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_790 );

    SC_METHOD(thread_ap_block_pp2_stage0);

    SC_METHOD(thread_ap_block_pp2_stage0_01001);
    sensitive << ( m_axi_inputs_RVALID );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( exitcond1_reg_799 );

    SC_METHOD(thread_ap_block_pp2_stage0_11001);
    sensitive << ( m_axi_inputs_RVALID );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( exitcond1_reg_799 );

    SC_METHOD(thread_ap_block_pp2_stage0_subdone);
    sensitive << ( m_axi_inputs_RVALID );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( exitcond1_reg_799 );

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter1);
    sensitive << ( m_axi_inputs_RVALID );
    sensitive << ( exitcond_reg_771 );

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state22_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state23_pp1_stage0_iter1);
    sensitive << ( m_axi_inputs_RVALID );
    sensitive << ( exitcond4_reg_790 );

    SC_METHOD(thread_ap_block_state24_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state32_pp2_stage0_iter0);

    SC_METHOD(thread_ap_block_state33_pp2_stage0_iter1);
    sensitive << ( m_axi_inputs_RVALID );
    sensitive << ( exitcond1_reg_799 );

    SC_METHOD(thread_ap_block_state34_pp2_stage0_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state11);
    sensitive << ( exitcond_fu_610_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state22);
    sensitive << ( exitcond4_fu_634_p2 );

    SC_METHOD(thread_ap_condition_pp2_exit_iter0_state32);
    sensitive << ( exitcond1_fu_645_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_74_fu_493_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp2_iter2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_74_fu_493_p2 );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_inputs_ARREADY);
    sensitive << ( m_axi_inputs_ARREADY );
    sensitive << ( ap_reg_ioackin_m_axi_inputs_ARREADY );

    SC_METHOD(thread_base_addr1_d1_9_fu_598_p2);
    sensitive << ( base_addr1_d2_reg_244 );

    SC_METHOD(thread_base_addr1_d2_4_fu_622_p2);
    sensitive << ( base_addr1_d_reg_275 );

    SC_METHOD(thread_base_addr1_fu_395_p2);
    sensitive << ( tmp1_cast_fu_391_p1 );
    sensitive << ( tmp_cast_fu_369_p1 );

    SC_METHOD(thread_base_addr2_d1_3_fu_604_p2);
    sensitive << ( base_addr2_d2_reg_254 );

    SC_METHOD(thread_base_addr2_d2_3_fu_628_p2);
    sensitive << ( base_addr2_d_reg_286 );

    SC_METHOD(thread_base_addr2_fu_421_p2);
    sensitive << ( tmp3_cast_fu_417_p1 );
    sensitive << ( tmp2_cast_fu_407_p1 );

    SC_METHOD(thread_c_cast2_cast_fu_357_p1);
    sensitive << ( c );

    SC_METHOD(thread_exitcond1_fu_645_p2);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( i5_reg_330 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_exitcond2_fu_657_p2);
    sensitive << ( tmp_71_reg_702 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( i_reg_341 );

    SC_METHOD(thread_exitcond3_fu_508_p2);
    sensitive << ( tmp_72_reg_707 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tr_reg_297 );

    SC_METHOD(thread_exitcond4_fu_634_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( i6_reg_319 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( tmp_70_reg_691 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond_fu_610_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i8_reg_308 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_i_14_fu_662_p2);
    sensitive << ( i_reg_341 );

    SC_METHOD(thread_i_15_fu_651_p2);
    sensitive << ( i5_reg_330 );

    SC_METHOD(thread_i_16_fu_639_p2);
    sensitive << ( i6_reg_319 );

    SC_METHOD(thread_i_3_fu_616_p2);
    sensitive << ( i8_reg_308 );

    SC_METHOD(thread_input_buffer_V_din);
    sensitive << ( reg_352 );
    sensitive << ( tmp_67_reg_683 );
    sensitive << ( tmp_580_reg_687 );
    sensitive << ( exitcond3_fu_508_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( or_cond_fu_536_p2 );
    sensitive << ( or_cond_reg_745 );
    sensitive << ( exitcond_reg_771_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond4_reg_790_pp1_iter1_reg );
    sensitive << ( exitcond1_reg_799_pp2_iter1_reg );
    sensitive << ( tmp_583_reg_808 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( exitcond2_fu_657_p2 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( ap_block_pp1_stage0_01001 );
    sensitive << ( ap_block_pp2_stage0_01001 );

    SC_METHOD(thread_input_buffer_V_write);
    sensitive << ( input_buffer_V_full_n );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( tmp_67_reg_683 );
    sensitive << ( tmp_580_reg_687 );
    sensitive << ( exitcond3_fu_508_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( or_cond_fu_536_p2 );
    sensitive << ( or_cond_reg_745 );
    sensitive << ( exitcond_reg_771_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond4_reg_790_pp1_iter1_reg );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( exitcond1_reg_799_pp2_iter1_reg );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( exitcond2_fu_657_p2 );

    SC_METHOD(thread_input_cntl_V_din);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_74_fu_493_p2 );

    SC_METHOD(thread_input_cntl_V_write);
    sensitive << ( input_cntl_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_74_fu_493_p2 );

    SC_METHOD(thread_inputs_blk_n_AR);
    sensitive << ( m_axi_inputs_ARREADY );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_inputs_blk_n_R);
    sensitive << ( m_axi_inputs_RVALID );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( exitcond1_reg_799 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond4_reg_790 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_771 );

    SC_METHOD(thread_inputs_offset_cast_c_fu_457_p1);
    sensitive << ( inputs_offset1 );

    SC_METHOD(thread_m_axi_inputs_ARADDR);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( inputs_addr_3_reg_749 );
    sensitive << ( inputs_addr_reg_755 );
    sensitive << ( ap_reg_ioackin_m_axi_inputs_ARREADY );

    SC_METHOD(thread_m_axi_inputs_ARBURST);

    SC_METHOD(thread_m_axi_inputs_ARCACHE);

    SC_METHOD(thread_m_axi_inputs_ARID);

    SC_METHOD(thread_m_axi_inputs_ARLEN);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_73_reg_717 );
    sensitive << ( ap_reg_ioackin_m_axi_inputs_ARREADY );

    SC_METHOD(thread_m_axi_inputs_ARLOCK);

    SC_METHOD(thread_m_axi_inputs_ARPROT);

    SC_METHOD(thread_m_axi_inputs_ARQOS);

    SC_METHOD(thread_m_axi_inputs_ARREGION);

    SC_METHOD(thread_m_axi_inputs_ARSIZE);

    SC_METHOD(thread_m_axi_inputs_ARUSER);

    SC_METHOD(thread_m_axi_inputs_ARVALID);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_reg_ioackin_m_axi_inputs_ARREADY );

    SC_METHOD(thread_m_axi_inputs_AWADDR);

    SC_METHOD(thread_m_axi_inputs_AWBURST);

    SC_METHOD(thread_m_axi_inputs_AWCACHE);

    SC_METHOD(thread_m_axi_inputs_AWID);

    SC_METHOD(thread_m_axi_inputs_AWLEN);

    SC_METHOD(thread_m_axi_inputs_AWLOCK);

    SC_METHOD(thread_m_axi_inputs_AWPROT);

    SC_METHOD(thread_m_axi_inputs_AWQOS);

    SC_METHOD(thread_m_axi_inputs_AWREGION);

    SC_METHOD(thread_m_axi_inputs_AWSIZE);

    SC_METHOD(thread_m_axi_inputs_AWUSER);

    SC_METHOD(thread_m_axi_inputs_AWVALID);

    SC_METHOD(thread_m_axi_inputs_BREADY);

    SC_METHOD(thread_m_axi_inputs_RREADY);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( exitcond1_reg_799 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond4_reg_790 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_771 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_m_axi_inputs_WDATA);

    SC_METHOD(thread_m_axi_inputs_WID);

    SC_METHOD(thread_m_axi_inputs_WLAST);

    SC_METHOD(thread_m_axi_inputs_WSTRB);

    SC_METHOD(thread_m_axi_inputs_WUSER);

    SC_METHOD(thread_m_axi_inputs_WVALID);

    SC_METHOD(thread_or_cond_fu_536_p2);
    sensitive << ( tmp_78_fu_524_p2 );
    sensitive << ( tmp_79_fu_530_p2 );

    SC_METHOD(thread_sext_cast_fu_485_p1);
    sensitive << ( inputs_offset );

    SC_METHOD(thread_sum3_cast_fu_588_p1);
    sensitive << ( sum3_fu_583_p2 );

    SC_METHOD(thread_sum3_fu_583_p2);
    sensitive << ( sext_cast_reg_722 );
    sensitive << ( tmp_230_cast_fu_579_p1 );

    SC_METHOD(thread_sum9_cast_fu_560_p1);
    sensitive << ( sum9_fu_555_p2 );

    SC_METHOD(thread_sum9_fu_555_p2);
    sensitive << ( sext_cast_reg_722 );
    sensitive << ( tmp_233_cast_fu_551_p1 );

    SC_METHOD(thread_tmp1_cast_fu_391_p1);
    sensitive << ( tmp1_fu_385_p2 );

    SC_METHOD(thread_tmp1_fu_385_p2);
    sensitive << ( tmp_s_fu_373_p3 );

    SC_METHOD(thread_tmp2_cast_fu_407_p1);
    sensitive << ( tmp2_fu_401_p2 );

    SC_METHOD(thread_tmp2_fu_401_p2);
    sensitive << ( tmp_fu_361_p3 );
    sensitive << ( tmp_cast_165_fu_381_p1 );

    SC_METHOD(thread_tmp3_cast_fu_417_p1);
    sensitive << ( tmp3_fu_411_p2 );

    SC_METHOD(thread_tmp3_fu_411_p2);
    sensitive << ( c_cast2_cast_fu_357_p1 );

    SC_METHOD(thread_tmp_230_cast_fu_579_p1);
    sensitive << ( tmp_81_fu_574_p2 );

    SC_METHOD(thread_tmp_233_cast_fu_551_p1);
    sensitive << ( tmp_83_fu_546_p2 );

    SC_METHOD(thread_tmp_581_fu_467_p1);
    sensitive << ( rLoops );

    SC_METHOD(thread_tmp_582_fu_477_p1);
    sensitive << ( nLoops );

    SC_METHOD(thread_tmp_67_fu_427_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( c );

    SC_METHOD(thread_tmp_68_fu_433_p2);
    sensitive << ( c );

    SC_METHOD(thread_tmp_69_fu_447_p1);
    sensitive << ( cLoops );

    SC_METHOD(thread_tmp_70_fu_451_p2);
    sensitive << ( tmp_69_fu_447_p1 );

    SC_METHOD(thread_tmp_71_fu_461_p2);
    sensitive << ( tmp_69_fu_447_p1 );

    SC_METHOD(thread_tmp_72_fu_471_p2);
    sensitive << ( tmp_581_fu_467_p1 );

    SC_METHOD(thread_tmp_73_fu_481_p1);
    sensitive << ( tmp_70_fu_451_p2 );

    SC_METHOD(thread_tmp_74_fu_493_p2);
    sensitive << ( tmp_582_reg_712 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tn_cast_cast_fu_489_p1 );

    SC_METHOD(thread_tmp_77_fu_519_p2);
    sensitive << ( r );
    sensitive << ( tr_cast_cast_fu_504_p1 );

    SC_METHOD(thread_tmp_78_fu_524_p2);
    sensitive << ( exitcond3_fu_508_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_77_fu_519_p2 );

    SC_METHOD(thread_tmp_79_fu_530_p2);
    sensitive << ( exitcond3_fu_508_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_77_fu_519_p2 );

    SC_METHOD(thread_tmp_80_fu_570_p1);
    sensitive << ( base_addr1_d_reg_275 );

    SC_METHOD(thread_tmp_81_fu_574_p2);
    sensitive << ( inputs_offset_cast_c_reg_696 );
    sensitive << ( tmp_80_fu_570_p1 );

    SC_METHOD(thread_tmp_82_fu_542_p1);
    sensitive << ( base_addr2_d_reg_286 );

    SC_METHOD(thread_tmp_83_fu_546_p2);
    sensitive << ( inputs_offset_cast_c_reg_696 );
    sensitive << ( tmp_82_fu_542_p1 );

    SC_METHOD(thread_tmp_cast_165_fu_381_p1);
    sensitive << ( tmp_s_fu_373_p3 );

    SC_METHOD(thread_tmp_cast_fu_369_p1);
    sensitive << ( tmp_fu_361_p3 );

    SC_METHOD(thread_tmp_fu_361_p3);
    sensitive << ( n );

    SC_METHOD(thread_tmp_s_fu_373_p3);
    sensitive << ( r );

    SC_METHOD(thread_tn_11_fu_498_p2);
    sensitive << ( tn_reg_264 );

    SC_METHOD(thread_tn_cast_cast_fu_489_p1);
    sensitive << ( tn_reg_264 );

    SC_METHOD(thread_tr_4_fu_513_p2);
    sensitive << ( tr_reg_297 );

    SC_METHOD(thread_tr_cast_cast_fu_504_p1);
    sensitive << ( tr_reg_297 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_67_reg_683 );
    sensitive << ( tmp_580_reg_687 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_508_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( or_cond_fu_536_p2 );
    sensitive << ( exitcond_fu_610_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond4_fu_634_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( exitcond1_fu_645_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_pp2_stage0_subdone );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( tmp_74_fu_493_p2 );
    sensitive << ( exitcond2_fu_657_p2 );
    sensitive << ( ap_sig_ioackin_m_axi_inputs_ARREADY );

    ap_CS_fsm = "000000000000000000000000000001";
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter2 = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_inputs_ARREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "copy_input_fmem2buff_6_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_inputs_AWVALID, "(port)m_axi_inputs_AWVALID");
    sc_trace(mVcdFile, m_axi_inputs_AWREADY, "(port)m_axi_inputs_AWREADY");
    sc_trace(mVcdFile, m_axi_inputs_AWADDR, "(port)m_axi_inputs_AWADDR");
    sc_trace(mVcdFile, m_axi_inputs_AWID, "(port)m_axi_inputs_AWID");
    sc_trace(mVcdFile, m_axi_inputs_AWLEN, "(port)m_axi_inputs_AWLEN");
    sc_trace(mVcdFile, m_axi_inputs_AWSIZE, "(port)m_axi_inputs_AWSIZE");
    sc_trace(mVcdFile, m_axi_inputs_AWBURST, "(port)m_axi_inputs_AWBURST");
    sc_trace(mVcdFile, m_axi_inputs_AWLOCK, "(port)m_axi_inputs_AWLOCK");
    sc_trace(mVcdFile, m_axi_inputs_AWCACHE, "(port)m_axi_inputs_AWCACHE");
    sc_trace(mVcdFile, m_axi_inputs_AWPROT, "(port)m_axi_inputs_AWPROT");
    sc_trace(mVcdFile, m_axi_inputs_AWQOS, "(port)m_axi_inputs_AWQOS");
    sc_trace(mVcdFile, m_axi_inputs_AWREGION, "(port)m_axi_inputs_AWREGION");
    sc_trace(mVcdFile, m_axi_inputs_AWUSER, "(port)m_axi_inputs_AWUSER");
    sc_trace(mVcdFile, m_axi_inputs_WVALID, "(port)m_axi_inputs_WVALID");
    sc_trace(mVcdFile, m_axi_inputs_WREADY, "(port)m_axi_inputs_WREADY");
    sc_trace(mVcdFile, m_axi_inputs_WDATA, "(port)m_axi_inputs_WDATA");
    sc_trace(mVcdFile, m_axi_inputs_WSTRB, "(port)m_axi_inputs_WSTRB");
    sc_trace(mVcdFile, m_axi_inputs_WLAST, "(port)m_axi_inputs_WLAST");
    sc_trace(mVcdFile, m_axi_inputs_WID, "(port)m_axi_inputs_WID");
    sc_trace(mVcdFile, m_axi_inputs_WUSER, "(port)m_axi_inputs_WUSER");
    sc_trace(mVcdFile, m_axi_inputs_ARVALID, "(port)m_axi_inputs_ARVALID");
    sc_trace(mVcdFile, m_axi_inputs_ARREADY, "(port)m_axi_inputs_ARREADY");
    sc_trace(mVcdFile, m_axi_inputs_ARADDR, "(port)m_axi_inputs_ARADDR");
    sc_trace(mVcdFile, m_axi_inputs_ARID, "(port)m_axi_inputs_ARID");
    sc_trace(mVcdFile, m_axi_inputs_ARLEN, "(port)m_axi_inputs_ARLEN");
    sc_trace(mVcdFile, m_axi_inputs_ARSIZE, "(port)m_axi_inputs_ARSIZE");
    sc_trace(mVcdFile, m_axi_inputs_ARBURST, "(port)m_axi_inputs_ARBURST");
    sc_trace(mVcdFile, m_axi_inputs_ARLOCK, "(port)m_axi_inputs_ARLOCK");
    sc_trace(mVcdFile, m_axi_inputs_ARCACHE, "(port)m_axi_inputs_ARCACHE");
    sc_trace(mVcdFile, m_axi_inputs_ARPROT, "(port)m_axi_inputs_ARPROT");
    sc_trace(mVcdFile, m_axi_inputs_ARQOS, "(port)m_axi_inputs_ARQOS");
    sc_trace(mVcdFile, m_axi_inputs_ARREGION, "(port)m_axi_inputs_ARREGION");
    sc_trace(mVcdFile, m_axi_inputs_ARUSER, "(port)m_axi_inputs_ARUSER");
    sc_trace(mVcdFile, m_axi_inputs_RVALID, "(port)m_axi_inputs_RVALID");
    sc_trace(mVcdFile, m_axi_inputs_RREADY, "(port)m_axi_inputs_RREADY");
    sc_trace(mVcdFile, m_axi_inputs_RDATA, "(port)m_axi_inputs_RDATA");
    sc_trace(mVcdFile, m_axi_inputs_RLAST, "(port)m_axi_inputs_RLAST");
    sc_trace(mVcdFile, m_axi_inputs_RID, "(port)m_axi_inputs_RID");
    sc_trace(mVcdFile, m_axi_inputs_RUSER, "(port)m_axi_inputs_RUSER");
    sc_trace(mVcdFile, m_axi_inputs_RRESP, "(port)m_axi_inputs_RRESP");
    sc_trace(mVcdFile, m_axi_inputs_BVALID, "(port)m_axi_inputs_BVALID");
    sc_trace(mVcdFile, m_axi_inputs_BREADY, "(port)m_axi_inputs_BREADY");
    sc_trace(mVcdFile, m_axi_inputs_BRESP, "(port)m_axi_inputs_BRESP");
    sc_trace(mVcdFile, m_axi_inputs_BID, "(port)m_axi_inputs_BID");
    sc_trace(mVcdFile, m_axi_inputs_BUSER, "(port)m_axi_inputs_BUSER");
    sc_trace(mVcdFile, inputs_offset, "(port)inputs_offset");
    sc_trace(mVcdFile, inputs_offset1, "(port)inputs_offset1");
    sc_trace(mVcdFile, input_buffer_V_din, "(port)input_buffer_V_din");
    sc_trace(mVcdFile, input_buffer_V_full_n, "(port)input_buffer_V_full_n");
    sc_trace(mVcdFile, input_buffer_V_write, "(port)input_buffer_V_write");
    sc_trace(mVcdFile, n, "(port)n");
    sc_trace(mVcdFile, r, "(port)r");
    sc_trace(mVcdFile, c, "(port)c");
    sc_trace(mVcdFile, nLoops, "(port)nLoops");
    sc_trace(mVcdFile, rLoops, "(port)rLoops");
    sc_trace(mVcdFile, cLoops, "(port)cLoops");
    sc_trace(mVcdFile, input_cntl_V_din, "(port)input_cntl_V_din");
    sc_trace(mVcdFile, input_cntl_V_full_n, "(port)input_cntl_V_full_n");
    sc_trace(mVcdFile, input_cntl_V_write, "(port)input_cntl_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, inputs_blk_n_AR, "inputs_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, inputs_blk_n_R, "inputs_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0, "ap_block_pp2_stage0");
    sc_trace(mVcdFile, exitcond1_reg_799, "exitcond1_reg_799");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, exitcond4_reg_790, "exitcond4_reg_790");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_reg_771, "exitcond_reg_771");
    sc_trace(mVcdFile, i8_reg_308, "i8_reg_308");
    sc_trace(mVcdFile, i6_reg_319, "i6_reg_319");
    sc_trace(mVcdFile, i5_reg_330, "i5_reg_330");
    sc_trace(mVcdFile, reg_352, "reg_352");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter0, "ap_block_state11_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter1, "ap_block_state12_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter2, "ap_block_state13_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ap_block_state22_pp1_stage0_iter0, "ap_block_state22_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state23_pp1_stage0_iter1, "ap_block_state23_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state24_pp1_stage0_iter2, "ap_block_state24_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, base_addr1_fu_395_p2, "base_addr1_fu_395_p2");
    sc_trace(mVcdFile, base_addr2_fu_421_p2, "base_addr2_fu_421_p2");
    sc_trace(mVcdFile, tmp_67_fu_427_p2, "tmp_67_fu_427_p2");
    sc_trace(mVcdFile, tmp_67_reg_683, "tmp_67_reg_683");
    sc_trace(mVcdFile, tmp_580_reg_687, "tmp_580_reg_687");
    sc_trace(mVcdFile, tmp_70_fu_451_p2, "tmp_70_fu_451_p2");
    sc_trace(mVcdFile, tmp_70_reg_691, "tmp_70_reg_691");
    sc_trace(mVcdFile, inputs_offset_cast_c_fu_457_p1, "inputs_offset_cast_c_fu_457_p1");
    sc_trace(mVcdFile, inputs_offset_cast_c_reg_696, "inputs_offset_cast_c_reg_696");
    sc_trace(mVcdFile, tmp_71_fu_461_p2, "tmp_71_fu_461_p2");
    sc_trace(mVcdFile, tmp_71_reg_702, "tmp_71_reg_702");
    sc_trace(mVcdFile, tmp_72_fu_471_p2, "tmp_72_fu_471_p2");
    sc_trace(mVcdFile, tmp_72_reg_707, "tmp_72_reg_707");
    sc_trace(mVcdFile, tmp_582_fu_477_p1, "tmp_582_fu_477_p1");
    sc_trace(mVcdFile, tmp_582_reg_712, "tmp_582_reg_712");
    sc_trace(mVcdFile, tmp_73_fu_481_p1, "tmp_73_fu_481_p1");
    sc_trace(mVcdFile, tmp_73_reg_717, "tmp_73_reg_717");
    sc_trace(mVcdFile, sext_cast_fu_485_p1, "sext_cast_fu_485_p1");
    sc_trace(mVcdFile, sext_cast_reg_722, "sext_cast_reg_722");
    sc_trace(mVcdFile, tn_11_fu_498_p2, "tn_11_fu_498_p2");
    sc_trace(mVcdFile, tn_11_reg_731, "tn_11_reg_731");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond3_fu_508_p2, "exitcond3_fu_508_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tr_4_fu_513_p2, "tr_4_fu_513_p2");
    sc_trace(mVcdFile, tr_4_reg_740, "tr_4_reg_740");
    sc_trace(mVcdFile, or_cond_fu_536_p2, "or_cond_fu_536_p2");
    sc_trace(mVcdFile, or_cond_reg_745, "or_cond_reg_745");
    sc_trace(mVcdFile, inputs_addr_3_reg_749, "inputs_addr_3_reg_749");
    sc_trace(mVcdFile, inputs_addr_reg_755, "inputs_addr_reg_755");
    sc_trace(mVcdFile, base_addr1_d1_9_fu_598_p2, "base_addr1_d1_9_fu_598_p2");
    sc_trace(mVcdFile, base_addr2_d1_3_fu_604_p2, "base_addr2_d1_3_fu_604_p2");
    sc_trace(mVcdFile, exitcond_fu_610_p2, "exitcond_fu_610_p2");
    sc_trace(mVcdFile, exitcond_reg_771_pp0_iter1_reg, "exitcond_reg_771_pp0_iter1_reg");
    sc_trace(mVcdFile, i_3_fu_616_p2, "i_3_fu_616_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, base_addr1_d2_4_fu_622_p2, "base_addr1_d2_4_fu_622_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, base_addr2_d2_3_fu_628_p2, "base_addr2_d2_3_fu_628_p2");
    sc_trace(mVcdFile, exitcond4_fu_634_p2, "exitcond4_fu_634_p2");
    sc_trace(mVcdFile, exitcond4_reg_790_pp1_iter1_reg, "exitcond4_reg_790_pp1_iter1_reg");
    sc_trace(mVcdFile, i_16_fu_639_p2, "i_16_fu_639_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, exitcond1_fu_645_p2, "exitcond1_fu_645_p2");
    sc_trace(mVcdFile, ap_block_state32_pp2_stage0_iter0, "ap_block_state32_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state33_pp2_stage0_iter1, "ap_block_state33_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state34_pp2_stage0_iter2, "ap_block_state34_pp2_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp2_stage0_11001, "ap_block_pp2_stage0_11001");
    sc_trace(mVcdFile, exitcond1_reg_799_pp2_iter1_reg, "exitcond1_reg_799_pp2_iter1_reg");
    sc_trace(mVcdFile, i_15_fu_651_p2, "i_15_fu_651_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, tmp_583_reg_808, "tmp_583_reg_808");
    sc_trace(mVcdFile, i_14_fu_662_p2, "i_14_fu_662_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state11, "ap_condition_pp0_exit_iter0_state11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state22, "ap_condition_pp1_exit_iter0_state22");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_block_pp2_stage0_subdone, "ap_block_pp2_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp2_exit_iter0_state32, "ap_condition_pp2_exit_iter0_state32");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter2, "ap_enable_reg_pp2_iter2");
    sc_trace(mVcdFile, base_addr1_d2_reg_244, "base_addr1_d2_reg_244");
    sc_trace(mVcdFile, base_addr2_d2_reg_254, "base_addr2_d2_reg_254");
    sc_trace(mVcdFile, tn_reg_264, "tn_reg_264");
    sc_trace(mVcdFile, base_addr1_d_reg_275, "base_addr1_d_reg_275");
    sc_trace(mVcdFile, tmp_74_fu_493_p2, "tmp_74_fu_493_p2");
    sc_trace(mVcdFile, base_addr2_d_reg_286, "base_addr2_d_reg_286");
    sc_trace(mVcdFile, tr_reg_297, "tr_reg_297");
    sc_trace(mVcdFile, i_reg_341, "i_reg_341");
    sc_trace(mVcdFile, exitcond2_fu_657_p2, "exitcond2_fu_657_p2");
    sc_trace(mVcdFile, sum9_cast_fu_560_p1, "sum9_cast_fu_560_p1");
    sc_trace(mVcdFile, sum3_cast_fu_588_p1, "sum3_cast_fu_588_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_inputs_ARREADY, "ap_reg_ioackin_m_axi_inputs_ARREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_inputs_ARREADY, "ap_sig_ioackin_m_axi_inputs_ARREADY");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, ap_block_pp2_stage0_01001, "ap_block_pp2_stage0_01001");
    sc_trace(mVcdFile, tmp_fu_361_p3, "tmp_fu_361_p3");
    sc_trace(mVcdFile, tmp_s_fu_373_p3, "tmp_s_fu_373_p3");
    sc_trace(mVcdFile, tmp1_fu_385_p2, "tmp1_fu_385_p2");
    sc_trace(mVcdFile, tmp1_cast_fu_391_p1, "tmp1_cast_fu_391_p1");
    sc_trace(mVcdFile, tmp_cast_fu_369_p1, "tmp_cast_fu_369_p1");
    sc_trace(mVcdFile, tmp_cast_165_fu_381_p1, "tmp_cast_165_fu_381_p1");
    sc_trace(mVcdFile, tmp2_fu_401_p2, "tmp2_fu_401_p2");
    sc_trace(mVcdFile, c_cast2_cast_fu_357_p1, "c_cast2_cast_fu_357_p1");
    sc_trace(mVcdFile, tmp3_fu_411_p2, "tmp3_fu_411_p2");
    sc_trace(mVcdFile, tmp3_cast_fu_417_p1, "tmp3_cast_fu_417_p1");
    sc_trace(mVcdFile, tmp2_cast_fu_407_p1, "tmp2_cast_fu_407_p1");
    sc_trace(mVcdFile, tmp_68_fu_433_p2, "tmp_68_fu_433_p2");
    sc_trace(mVcdFile, tmp_69_fu_447_p1, "tmp_69_fu_447_p1");
    sc_trace(mVcdFile, tmp_581_fu_467_p1, "tmp_581_fu_467_p1");
    sc_trace(mVcdFile, tn_cast_cast_fu_489_p1, "tn_cast_cast_fu_489_p1");
    sc_trace(mVcdFile, tr_cast_cast_fu_504_p1, "tr_cast_cast_fu_504_p1");
    sc_trace(mVcdFile, tmp_77_fu_519_p2, "tmp_77_fu_519_p2");
    sc_trace(mVcdFile, tmp_78_fu_524_p2, "tmp_78_fu_524_p2");
    sc_trace(mVcdFile, tmp_79_fu_530_p2, "tmp_79_fu_530_p2");
    sc_trace(mVcdFile, tmp_82_fu_542_p1, "tmp_82_fu_542_p1");
    sc_trace(mVcdFile, tmp_83_fu_546_p2, "tmp_83_fu_546_p2");
    sc_trace(mVcdFile, tmp_233_cast_fu_551_p1, "tmp_233_cast_fu_551_p1");
    sc_trace(mVcdFile, sum9_fu_555_p2, "sum9_fu_555_p2");
    sc_trace(mVcdFile, tmp_80_fu_570_p1, "tmp_80_fu_570_p1");
    sc_trace(mVcdFile, tmp_81_fu_574_p2, "tmp_81_fu_574_p2");
    sc_trace(mVcdFile, tmp_230_cast_fu_579_p1, "tmp_230_cast_fu_579_p1");
    sc_trace(mVcdFile, sum3_fu_583_p2, "sum3_fu_583_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
#endif

    }
}

copy_input_fmem2buff_6::~copy_input_fmem2buff_6() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void copy_input_fmem2buff_6::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state11.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state11.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state11.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state22.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state22.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state22.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
            ap_enable_reg_pp1_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state32.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state32.read())) {
                ap_enable_reg_pp2_iter1 = (ap_condition_pp2_exit_iter0_state32.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp2_iter2 = ap_enable_reg_pp2_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
            ap_enable_reg_pp2_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_inputs_ARREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_inputs_ARREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_inputs_ARREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_inputs_ARREADY.read(), ap_const_logic_1)))) {
            ap_reg_ioackin_m_axi_inputs_ARREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axi_inputs_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axi_inputs_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axi_inputs_ARREADY.read())))) {
            ap_reg_ioackin_m_axi_inputs_ARREADY = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_508_p2.read(), ap_const_lv1_1))) {
        base_addr1_d2_reg_244 = base_addr1_d1_9_fu_598_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        base_addr1_d2_reg_244 = base_addr1_fu_395_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        base_addr1_d_reg_275 = base_addr1_d2_4_fu_622_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_74_fu_493_p2.read()))) {
        base_addr1_d_reg_275 = base_addr1_d2_reg_244.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_508_p2.read(), ap_const_lv1_1))) {
        base_addr2_d2_reg_254 = base_addr2_d1_3_fu_604_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        base_addr2_d2_reg_254 = base_addr2_fu_421_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        base_addr2_d_reg_286 = base_addr2_d2_3_fu_628_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_74_fu_493_p2.read()))) {
        base_addr2_d_reg_286 = base_addr2_d2_reg_254.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        i5_reg_330 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_645_p2.read()))) {
        i5_reg_330 = i_15_fu_651_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        i6_reg_319 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_634_p2.read()))) {
        i6_reg_319 = i_16_fu_639_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i8_reg_308 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_610_p2.read()))) {
        i8_reg_308 = i_3_fu_616_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_508_p2.read()) && 
         esl_seteq<1,1,1>(or_cond_fu_536_p2.read(), ap_const_lv1_1))) {
        i_reg_341 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_657_p2.read()))) {
        i_reg_341 = i_14_fu_662_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_508_p2.read(), ap_const_lv1_1))) {
        tn_reg_264 = tn_11_reg_731.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tn_reg_264 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        tr_reg_297 = tr_4_reg_740.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_74_fu_493_p2.read()))) {
        tr_reg_297 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond1_reg_799 = exitcond1_fu_645_p2.read();
        exitcond1_reg_799_pp2_iter1_reg = exitcond1_reg_799.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond4_reg_790 = exitcond4_fu_634_p2.read();
        exitcond4_reg_790_pp1_iter1_reg = exitcond4_reg_790.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_reg_771 = exitcond_fu_610_p2.read();
        exitcond_reg_771_pp0_iter1_reg = exitcond_reg_771.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_508_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_536_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_reg_683.read()))) {
        inputs_addr_3_reg_749 =  (sc_lv<32>) (sum9_cast_fu_560_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_508_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_536_p2.read()) && esl_seteq<1,1,1>(tmp_67_reg_683.read(), ap_const_lv1_1))) {
        inputs_addr_reg_755 =  (sc_lv<32>) (sum3_cast_fu_588_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        inputs_offset_cast_c_reg_696 = inputs_offset_cast_c_fu_457_p1.read();
        sext_cast_reg_722 = sext_cast_fu_485_p1.read();
        tmp_580_reg_687 = tmp_68_fu_433_p2.read().range(6, 6);
        tmp_582_reg_712 = tmp_582_fu_477_p1.read();
        tmp_67_reg_683 = tmp_67_fu_427_p2.read();
        tmp_70_reg_691 = tmp_70_fu_451_p2.read();
        tmp_71_reg_702 = tmp_71_fu_461_p2.read();
        tmp_72_reg_707 = tmp_72_fu_471_p2.read();
        tmp_73_reg_717 = tmp_73_fu_481_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_508_p2.read()))) {
        or_cond_reg_745 = or_cond_fu_536_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_771.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_790.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_352 = m_axi_inputs_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_799.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_583_reg_808 = m_axi_inputs_RDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tn_11_reg_731 = tn_11_fu_498_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tr_4_reg_740 = tr_4_fu_513_p2.read();
    }
}

void copy_input_fmem2buff_6::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[10];
}

void copy_input_fmem2buff_6::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[19];
}

void copy_input_fmem2buff_6::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[27];
}

void copy_input_fmem2buff_6::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void copy_input_fmem2buff_6::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void copy_input_fmem2buff_6::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[11];
}

void copy_input_fmem2buff_6::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[12];
}

void copy_input_fmem2buff_6::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void copy_input_fmem2buff_6::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[18];
}

void copy_input_fmem2buff_6::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[20];
}

void copy_input_fmem2buff_6::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void copy_input_fmem2buff_6::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[26];
}

void copy_input_fmem2buff_6::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[28];
}

void copy_input_fmem2buff_6::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void copy_input_fmem2buff_6::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void copy_input_fmem2buff_6::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_771.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_inputs_RVALID.read()));
}

void copy_input_fmem2buff_6::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_771.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_inputs_RVALID.read()));
}

void copy_input_fmem2buff_6::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_771.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_inputs_RVALID.read()));
}

void copy_input_fmem2buff_6::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void copy_input_fmem2buff_6::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_790.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_inputs_RVALID.read()));
}

void copy_input_fmem2buff_6::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_790.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_inputs_RVALID.read()));
}

void copy_input_fmem2buff_6::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_790.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_inputs_RVALID.read()));
}

void copy_input_fmem2buff_6::thread_ap_block_pp2_stage0() {
    ap_block_pp2_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void copy_input_fmem2buff_6::thread_ap_block_pp2_stage0_01001() {
    ap_block_pp2_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_799.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_inputs_RVALID.read()));
}

void copy_input_fmem2buff_6::thread_ap_block_pp2_stage0_11001() {
    ap_block_pp2_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_799.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_inputs_RVALID.read()));
}

void copy_input_fmem2buff_6::thread_ap_block_pp2_stage0_subdone() {
    ap_block_pp2_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_799.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_inputs_RVALID.read()));
}

void copy_input_fmem2buff_6::thread_ap_block_state11_pp0_stage0_iter0() {
    ap_block_state11_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void copy_input_fmem2buff_6::thread_ap_block_state12_pp0_stage0_iter1() {
    ap_block_state12_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_771.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_inputs_RVALID.read()));
}

void copy_input_fmem2buff_6::thread_ap_block_state13_pp0_stage0_iter2() {
    ap_block_state13_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void copy_input_fmem2buff_6::thread_ap_block_state22_pp1_stage0_iter0() {
    ap_block_state22_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void copy_input_fmem2buff_6::thread_ap_block_state23_pp1_stage0_iter1() {
    ap_block_state23_pp1_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_790.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_inputs_RVALID.read()));
}

void copy_input_fmem2buff_6::thread_ap_block_state24_pp1_stage0_iter2() {
    ap_block_state24_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void copy_input_fmem2buff_6::thread_ap_block_state32_pp2_stage0_iter0() {
    ap_block_state32_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void copy_input_fmem2buff_6::thread_ap_block_state33_pp2_stage0_iter1() {
    ap_block_state33_pp2_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_799.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_inputs_RVALID.read()));
}

void copy_input_fmem2buff_6::thread_ap_block_state34_pp2_stage0_iter2() {
    ap_block_state34_pp2_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void copy_input_fmem2buff_6::thread_ap_condition_pp0_exit_iter0_state11() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_610_p2.read())) {
        ap_condition_pp0_exit_iter0_state11 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state11 = ap_const_logic_0;
    }
}

void copy_input_fmem2buff_6::thread_ap_condition_pp1_exit_iter0_state22() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_634_p2.read())) {
        ap_condition_pp1_exit_iter0_state22 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state22 = ap_const_logic_0;
    }
}

void copy_input_fmem2buff_6::thread_ap_condition_pp2_exit_iter0_state32() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_645_p2.read())) {
        ap_condition_pp2_exit_iter0_state32 = ap_const_logic_1;
    } else {
        ap_condition_pp2_exit_iter0_state32 = ap_const_logic_0;
    }
}

void copy_input_fmem2buff_6::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_74_fu_493_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void copy_input_fmem2buff_6::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void copy_input_fmem2buff_6::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void copy_input_fmem2buff_6::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void copy_input_fmem2buff_6::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void copy_input_fmem2buff_6::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void copy_input_fmem2buff_6::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void copy_input_fmem2buff_6::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter2.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void copy_input_fmem2buff_6::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_74_fu_493_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void copy_input_fmem2buff_6::thread_ap_sig_ioackin_m_axi_inputs_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_inputs_ARREADY.read())) {
        ap_sig_ioackin_m_axi_inputs_ARREADY = m_axi_inputs_ARREADY.read();
    } else {
        ap_sig_ioackin_m_axi_inputs_ARREADY = ap_const_logic_1;
    }
}

void copy_input_fmem2buff_6::thread_base_addr1_d1_9_fu_598_p2() {
    base_addr1_d1_9_fu_598_p2 = (!base_addr1_d2_reg_244.read().is_01() || !ap_const_lv21_1000.is_01())? sc_lv<21>(): (sc_biguint<21>(base_addr1_d2_reg_244.read()) + sc_biguint<21>(ap_const_lv21_1000));
}

void copy_input_fmem2buff_6::thread_base_addr1_d2_4_fu_622_p2() {
    base_addr1_d2_4_fu_622_p2 = (!base_addr1_d_reg_275.read().is_01() || !ap_const_lv21_40.is_01())? sc_lv<21>(): (sc_bigint<21>(base_addr1_d_reg_275.read()) + sc_biguint<21>(ap_const_lv21_40));
}

void copy_input_fmem2buff_6::thread_base_addr1_fu_395_p2() {
    base_addr1_fu_395_p2 = (!tmp1_cast_fu_391_p1.read().is_01() || !tmp_cast_fu_369_p1.read().is_01())? sc_lv<21>(): (sc_bigint<21>(tmp1_cast_fu_391_p1.read()) + sc_biguint<21>(tmp_cast_fu_369_p1.read()));
}

void copy_input_fmem2buff_6::thread_base_addr2_d1_3_fu_604_p2() {
    base_addr2_d1_3_fu_604_p2 = (!base_addr2_d2_reg_254.read().is_01() || !ap_const_lv21_1000.is_01())? sc_lv<21>(): (sc_biguint<21>(base_addr2_d2_reg_254.read()) + sc_biguint<21>(ap_const_lv21_1000));
}

void copy_input_fmem2buff_6::thread_base_addr2_d2_3_fu_628_p2() {
    base_addr2_d2_3_fu_628_p2 = (!base_addr2_d_reg_286.read().is_01() || !ap_const_lv21_40.is_01())? sc_lv<21>(): (sc_bigint<21>(base_addr2_d_reg_286.read()) + sc_biguint<21>(ap_const_lv21_40));
}

void copy_input_fmem2buff_6::thread_base_addr2_fu_421_p2() {
    base_addr2_fu_421_p2 = (!tmp3_cast_fu_417_p1.read().is_01() || !tmp2_cast_fu_407_p1.read().is_01())? sc_lv<21>(): (sc_bigint<21>(tmp3_cast_fu_417_p1.read()) + sc_biguint<21>(tmp2_cast_fu_407_p1.read()));
}

void copy_input_fmem2buff_6::thread_c_cast2_cast_fu_357_p1() {
    c_cast2_cast_fu_357_p1 = esl_zext<8,7>(c.read());
}

void copy_input_fmem2buff_6::thread_exitcond1_fu_645_p2() {
    exitcond1_fu_645_p2 = (!i5_reg_330.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(i5_reg_330.read() == ap_const_lv5_11);
}

void copy_input_fmem2buff_6::thread_exitcond2_fu_657_p2() {
    exitcond2_fu_657_p2 = (!i_reg_341.read().is_01() || !tmp_71_reg_702.read().is_01())? sc_lv<1>(): sc_lv<1>(i_reg_341.read() == tmp_71_reg_702.read());
}

void copy_input_fmem2buff_6::thread_exitcond3_fu_508_p2() {
    exitcond3_fu_508_p2 = (!tr_reg_297.read().is_01() || !tmp_72_reg_707.read().is_01())? sc_lv<1>(): sc_lv<1>(tr_reg_297.read() == tmp_72_reg_707.read());
}

void copy_input_fmem2buff_6::thread_exitcond4_fu_634_p2() {
    exitcond4_fu_634_p2 = (!i6_reg_319.read().is_01() || !tmp_70_reg_691.read().is_01())? sc_lv<1>(): sc_lv<1>(i6_reg_319.read() == tmp_70_reg_691.read());
}

void copy_input_fmem2buff_6::thread_exitcond_fu_610_p2() {
    exitcond_fu_610_p2 = (!i8_reg_308.read().is_01() || !ap_const_lv5_12.is_01())? sc_lv<1>(): sc_lv<1>(i8_reg_308.read() == ap_const_lv5_12);
}

void copy_input_fmem2buff_6::thread_i_14_fu_662_p2() {
    i_14_fu_662_p2 = (!i_reg_341.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_reg_341.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void copy_input_fmem2buff_6::thread_i_15_fu_651_p2() {
    i_15_fu_651_p2 = (!i5_reg_330.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i5_reg_330.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void copy_input_fmem2buff_6::thread_i_16_fu_639_p2() {
    i_16_fu_639_p2 = (!i6_reg_319.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i6_reg_319.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void copy_input_fmem2buff_6::thread_i_3_fu_616_p2() {
    i_3_fu_616_p2 = (!i8_reg_308.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i8_reg_308.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void copy_input_fmem2buff_6::thread_input_buffer_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_799_pp2_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_01001.read(), ap_const_boolean_0))) {
        input_buffer_V_din = tmp_583_reg_808.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_771_pp0_iter1_reg.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_790_pp1_iter1_reg.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0)))) {
        input_buffer_V_din = reg_352.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_508_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_536_p2.read()) && 
                 esl_seteq<1,1,1>(tmp_67_reg_683.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_657_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_reg_683.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_745.read()) && 
                 esl_seteq<1,1,1>(tmp_580_reg_687.read(), ap_const_lv1_1)))) {
        input_buffer_V_din = ap_const_lv16_0;
    } else {
        input_buffer_V_din = "XXXXXXXXXXXXXXXX";
    }
}

void copy_input_fmem2buff_6::thread_input_buffer_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, input_buffer_V_full_n.read()) && 
         ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_657_p2.read())) || 
          (esl_seteq<1,1,1>(ap_const_logic_1, input_buffer_V_full_n.read()) && 
           ((esl_seteq<1,1,1>(ap_const_logic_1, input_buffer_V_full_n.read()) && 
             ((esl_seteq<1,1,1>(ap_const_logic_1, input_buffer_V_full_n.read()) && 
               ((esl_seteq<1,1,1>(ap_const_logic_1, input_buffer_V_full_n.read()) && 
                 ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_508_p2.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_536_p2.read()) && 
                   esl_seteq<1,1,1>(tmp_67_reg_683.read(), ap_const_lv1_1) && 
                   esl_seteq<1,1,1>(ap_const_logic_1, input_buffer_V_full_n.read())) || 
                  (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                   esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_771_pp0_iter1_reg.read())))) || 
                (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_reg_683.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_745.read()) && 
                 esl_seteq<1,1,1>(tmp_580_reg_687.read(), ap_const_lv1_1)))) || 
              (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
               esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
               esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_790_pp1_iter1_reg.read())))) || 
            (esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_799_pp2_iter1_reg.read()))))))) {
        input_buffer_V_write = ap_const_logic_1;
    } else {
        input_buffer_V_write = ap_const_logic_0;
    }
}

void copy_input_fmem2buff_6::thread_input_cntl_V_din() {
    input_cntl_V_din =  (sc_logic) (ap_const_lv1_0[0]);
}

void copy_input_fmem2buff_6::thread_input_cntl_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_74_fu_493_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, input_cntl_V_full_n.read()))) {
        input_cntl_V_write = ap_const_logic_1;
    } else {
        input_cntl_V_write = ap_const_logic_0;
    }
}

void copy_input_fmem2buff_6::thread_inputs_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        inputs_blk_n_AR = m_axi_inputs_ARREADY.read();
    } else {
        inputs_blk_n_AR = ap_const_logic_1;
    }
}

void copy_input_fmem2buff_6::thread_inputs_blk_n_R() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_799.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_790.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_771.read())))) {
        inputs_blk_n_R = m_axi_inputs_RVALID.read();
    } else {
        inputs_blk_n_R = ap_const_logic_1;
    }
}

void copy_input_fmem2buff_6::thread_inputs_offset_cast_c_fu_457_p1() {
    inputs_offset_cast_c_fu_457_p1 = esl_zext<22,20>(inputs_offset1.read());
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_ARADDR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_inputs_ARREADY.read()))) {
        m_axi_inputs_ARADDR = inputs_addr_reg_755.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_inputs_ARREADY.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_inputs_ARREADY.read())))) {
        m_axi_inputs_ARADDR = inputs_addr_3_reg_749.read();
    } else {
        m_axi_inputs_ARADDR =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_ARBURST() {
    m_axi_inputs_ARBURST = ap_const_lv2_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_ARCACHE() {
    m_axi_inputs_ARCACHE = ap_const_lv4_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_ARID() {
    m_axi_inputs_ARID = ap_const_lv1_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_ARLEN() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_inputs_ARREADY.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
            m_axi_inputs_ARLEN = ap_const_lv32_11;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
            m_axi_inputs_ARLEN = tmp_73_reg_717.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            m_axi_inputs_ARLEN = ap_const_lv32_12;
        } else {
            m_axi_inputs_ARLEN =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        m_axi_inputs_ARLEN =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_ARLOCK() {
    m_axi_inputs_ARLOCK = ap_const_lv2_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_ARPROT() {
    m_axi_inputs_ARPROT = ap_const_lv3_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_ARQOS() {
    m_axi_inputs_ARQOS = ap_const_lv4_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_ARREGION() {
    m_axi_inputs_ARREGION = ap_const_lv4_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_ARSIZE() {
    m_axi_inputs_ARSIZE = ap_const_lv3_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_ARUSER() {
    m_axi_inputs_ARUSER = ap_const_lv1_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_inputs_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_inputs_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_inputs_ARREADY.read())))) {
        m_axi_inputs_ARVALID = ap_const_logic_1;
    } else {
        m_axi_inputs_ARVALID = ap_const_logic_0;
    }
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_AWADDR() {
    m_axi_inputs_AWADDR = ap_const_lv32_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_AWBURST() {
    m_axi_inputs_AWBURST = ap_const_lv2_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_AWCACHE() {
    m_axi_inputs_AWCACHE = ap_const_lv4_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_AWID() {
    m_axi_inputs_AWID = ap_const_lv1_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_AWLEN() {
    m_axi_inputs_AWLEN = ap_const_lv32_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_AWLOCK() {
    m_axi_inputs_AWLOCK = ap_const_lv2_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_AWPROT() {
    m_axi_inputs_AWPROT = ap_const_lv3_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_AWQOS() {
    m_axi_inputs_AWQOS = ap_const_lv4_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_AWREGION() {
    m_axi_inputs_AWREGION = ap_const_lv4_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_AWSIZE() {
    m_axi_inputs_AWSIZE = ap_const_lv3_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_AWUSER() {
    m_axi_inputs_AWUSER = ap_const_lv1_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_AWVALID() {
    m_axi_inputs_AWVALID = ap_const_logic_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_BREADY() {
    m_axi_inputs_BREADY = ap_const_logic_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_771.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_790.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_799.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0)))) {
        m_axi_inputs_RREADY = ap_const_logic_1;
    } else {
        m_axi_inputs_RREADY = ap_const_logic_0;
    }
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_WDATA() {
    m_axi_inputs_WDATA = ap_const_lv16_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_WID() {
    m_axi_inputs_WID = ap_const_lv1_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_WLAST() {
    m_axi_inputs_WLAST = ap_const_logic_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_WSTRB() {
    m_axi_inputs_WSTRB = ap_const_lv2_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_WUSER() {
    m_axi_inputs_WUSER = ap_const_lv1_0;
}

void copy_input_fmem2buff_6::thread_m_axi_inputs_WVALID() {
    m_axi_inputs_WVALID = ap_const_logic_0;
}

void copy_input_fmem2buff_6::thread_or_cond_fu_536_p2() {
    or_cond_fu_536_p2 = (tmp_78_fu_524_p2.read() | tmp_79_fu_530_p2.read());
}

void copy_input_fmem2buff_6::thread_sext_cast_fu_485_p1() {
    sext_cast_fu_485_p1 = esl_zext<33,31>(inputs_offset.read());
}

void copy_input_fmem2buff_6::thread_sum3_cast_fu_588_p1() {
    sum3_cast_fu_588_p1 = esl_sext<64,33>(sum3_fu_583_p2.read());
}

void copy_input_fmem2buff_6::thread_sum3_fu_583_p2() {
    sum3_fu_583_p2 = (!sext_cast_reg_722.read().is_01() || !tmp_230_cast_fu_579_p1.read().is_01())? sc_lv<33>(): (sc_biguint<33>(sext_cast_reg_722.read()) + sc_bigint<33>(tmp_230_cast_fu_579_p1.read()));
}

void copy_input_fmem2buff_6::thread_sum9_cast_fu_560_p1() {
    sum9_cast_fu_560_p1 = esl_sext<64,33>(sum9_fu_555_p2.read());
}

void copy_input_fmem2buff_6::thread_sum9_fu_555_p2() {
    sum9_fu_555_p2 = (!sext_cast_reg_722.read().is_01() || !tmp_233_cast_fu_551_p1.read().is_01())? sc_lv<33>(): (sc_biguint<33>(sext_cast_reg_722.read()) + sc_bigint<33>(tmp_233_cast_fu_551_p1.read()));
}

void copy_input_fmem2buff_6::thread_tmp1_cast_fu_391_p1() {
    tmp1_cast_fu_391_p1 = esl_sext<21,13>(tmp1_fu_385_p2.read());
}

void copy_input_fmem2buff_6::thread_tmp1_fu_385_p2() {
    tmp1_fu_385_p2 = (!ap_const_lv13_1FC0.is_01() || !tmp_s_fu_373_p3.read().is_01())? sc_lv<13>(): (sc_bigint<13>(ap_const_lv13_1FC0) + sc_biguint<13>(tmp_s_fu_373_p3.read()));
}

void copy_input_fmem2buff_6::thread_tmp2_cast_fu_407_p1() {
    tmp2_cast_fu_407_p1 = esl_zext<21,20>(tmp2_fu_401_p2.read());
}

void copy_input_fmem2buff_6::thread_tmp2_fu_401_p2() {
    tmp2_fu_401_p2 = (!tmp_fu_361_p3.read().is_01() || !tmp_cast_165_fu_381_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_fu_361_p3.read()) + sc_biguint<20>(tmp_cast_165_fu_381_p1.read()));
}

void copy_input_fmem2buff_6::thread_tmp3_cast_fu_417_p1() {
    tmp3_cast_fu_417_p1 = esl_sext<21,8>(tmp3_fu_411_p2.read());
}

void copy_input_fmem2buff_6::thread_tmp3_fu_411_p2() {
    tmp3_fu_411_p2 = (!ap_const_lv8_BF.is_01() || !c_cast2_cast_fu_357_p1.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_BF) + sc_biguint<8>(c_cast2_cast_fu_357_p1.read()));
}

void copy_input_fmem2buff_6::thread_tmp_230_cast_fu_579_p1() {
    tmp_230_cast_fu_579_p1 = esl_sext<33,22>(tmp_81_fu_574_p2.read());
}

void copy_input_fmem2buff_6::thread_tmp_233_cast_fu_551_p1() {
    tmp_233_cast_fu_551_p1 = esl_sext<33,22>(tmp_83_fu_546_p2.read());
}

void copy_input_fmem2buff_6::thread_tmp_581_fu_467_p1() {
    tmp_581_fu_467_p1 = rLoops.read().range(5-1, 0);
}

void copy_input_fmem2buff_6::thread_tmp_582_fu_477_p1() {
    tmp_582_fu_477_p1 = nLoops.read().range(3-1, 0);
}

void copy_input_fmem2buff_6::thread_tmp_67_fu_427_p2() {
    tmp_67_fu_427_p2 = (!c.read().is_01() || !ap_const_lv7_0.is_01())? sc_lv<1>(): sc_lv<1>(c.read() == ap_const_lv7_0);
}

void copy_input_fmem2buff_6::thread_tmp_68_fu_433_p2() {
    tmp_68_fu_433_p2 = (!ap_const_lv7_10.is_01() || !c.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_10) + sc_biguint<7>(c.read()));
}

void copy_input_fmem2buff_6::thread_tmp_69_fu_447_p1() {
    tmp_69_fu_447_p1 = esl_zext<6,5>(cLoops.read());
}

void copy_input_fmem2buff_6::thread_tmp_70_fu_451_p2() {
    tmp_70_fu_451_p2 = (!ap_const_lv6_1.is_01() || !tmp_69_fu_447_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(tmp_69_fu_447_p1.read()));
}

void copy_input_fmem2buff_6::thread_tmp_71_fu_461_p2() {
    tmp_71_fu_461_p2 = (!ap_const_lv6_2.is_01() || !tmp_69_fu_447_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_2) + sc_biguint<6>(tmp_69_fu_447_p1.read()));
}

void copy_input_fmem2buff_6::thread_tmp_72_fu_471_p2() {
    tmp_72_fu_471_p2 = (!ap_const_lv5_2.is_01() || !tmp_581_fu_467_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_2) + sc_biguint<5>(tmp_581_fu_467_p1.read()));
}

void copy_input_fmem2buff_6::thread_tmp_73_fu_481_p1() {
    tmp_73_fu_481_p1 = esl_zext<32,6>(tmp_70_fu_451_p2.read());
}

void copy_input_fmem2buff_6::thread_tmp_74_fu_493_p2() {
    tmp_74_fu_493_p2 = (!tn_cast_cast_fu_489_p1.read().is_01() || !tmp_582_reg_712.read().is_01())? sc_lv<1>(): (sc_bigint<3>(tn_cast_cast_fu_489_p1.read()) < sc_bigint<3>(tmp_582_reg_712.read()));
}

void copy_input_fmem2buff_6::thread_tmp_77_fu_519_p2() {
    tmp_77_fu_519_p2 = (!tr_cast_cast_fu_504_p1.read().is_01() || !r.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tr_cast_cast_fu_504_p1.read()) + sc_biguint<7>(r.read()));
}

void copy_input_fmem2buff_6::thread_tmp_78_fu_524_p2() {
    tmp_78_fu_524_p2 = (!tmp_77_fu_519_p2.read().is_01() || !ap_const_lv7_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_77_fu_519_p2.read() == ap_const_lv7_0);
}

void copy_input_fmem2buff_6::thread_tmp_79_fu_530_p2() {
    tmp_79_fu_530_p2 = (!tmp_77_fu_519_p2.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): (sc_biguint<7>(tmp_77_fu_519_p2.read()) > sc_biguint<7>(ap_const_lv7_40));
}

void copy_input_fmem2buff_6::thread_tmp_80_fu_570_p1() {
    tmp_80_fu_570_p1 = esl_sext<22,21>(base_addr1_d_reg_275.read());
}

void copy_input_fmem2buff_6::thread_tmp_81_fu_574_p2() {
    tmp_81_fu_574_p2 = (!inputs_offset_cast_c_reg_696.read().is_01() || !tmp_80_fu_570_p1.read().is_01())? sc_lv<22>(): (sc_biguint<22>(inputs_offset_cast_c_reg_696.read()) + sc_bigint<22>(tmp_80_fu_570_p1.read()));
}

void copy_input_fmem2buff_6::thread_tmp_82_fu_542_p1() {
    tmp_82_fu_542_p1 = esl_sext<22,21>(base_addr2_d_reg_286.read());
}

void copy_input_fmem2buff_6::thread_tmp_83_fu_546_p2() {
    tmp_83_fu_546_p2 = (!inputs_offset_cast_c_reg_696.read().is_01() || !tmp_82_fu_542_p1.read().is_01())? sc_lv<22>(): (sc_biguint<22>(inputs_offset_cast_c_reg_696.read()) + sc_bigint<22>(tmp_82_fu_542_p1.read()));
}

void copy_input_fmem2buff_6::thread_tmp_cast_165_fu_381_p1() {
    tmp_cast_165_fu_381_p1 = esl_zext<20,13>(tmp_s_fu_373_p3.read());
}

void copy_input_fmem2buff_6::thread_tmp_cast_fu_369_p1() {
    tmp_cast_fu_369_p1 = esl_zext<21,20>(tmp_fu_361_p3.read());
}

void copy_input_fmem2buff_6::thread_tmp_fu_361_p3() {
    tmp_fu_361_p3 = esl_concat<8,12>(n.read(), ap_const_lv12_0);
}

void copy_input_fmem2buff_6::thread_tmp_s_fu_373_p3() {
    tmp_s_fu_373_p3 = esl_concat<7,6>(r.read(), ap_const_lv6_0);
}

void copy_input_fmem2buff_6::thread_tn_11_fu_498_p2() {
    tn_11_fu_498_p2 = (!tn_reg_264.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(tn_reg_264.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void copy_input_fmem2buff_6::thread_tn_cast_cast_fu_489_p1() {
    tn_cast_cast_fu_489_p1 = esl_zext<3,2>(tn_reg_264.read());
}

void copy_input_fmem2buff_6::thread_tr_4_fu_513_p2() {
    tr_4_fu_513_p2 = (!tr_reg_297.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(tr_reg_297.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void copy_input_fmem2buff_6::thread_tr_cast_cast_fu_504_p1() {
    tr_cast_cast_fu_504_p1 = esl_zext<7,5>(tr_reg_297.read());
}

void copy_input_fmem2buff_6::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_74_fu_493_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond3_fu_508_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_508_p2.read()) && esl_seteq<1,1,1>(or_cond_fu_536_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state35;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_508_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_536_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_reg_683.read()) && esl_seteq<1,1,1>(tmp_580_reg_687.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_508_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_536_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_reg_683.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_580_reg_687.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state25;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_inputs_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 1024 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_610_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_610_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_inputs_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 524288 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_634_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_634_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_inputs_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state25;
            }
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            break;
        case 134217728 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_645_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_645_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            }
            break;
        case 268435456 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_657_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state35;
            } else {
                ap_NS_fsm = ap_ST_fsm_state36;
            }
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<30>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

