// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mac_1_1_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mac_1_1_s::ap_const_logic_1 = sc_dt::Log_1;
const bool mac_1_1_s::ap_const_boolean_1 = true;
const bool mac_1_1_s::ap_const_boolean_0 = false;
const sc_logic mac_1_1_s::ap_const_logic_0 = sc_dt::Log_0;

mac_1_1_s::mac_1_1_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    moblie_net_hmul_1cud_U725 = new moblie_net_hmul_1cud<1,4,16,16,16>("moblie_net_hmul_1cud_U725");
    moblie_net_hmul_1cud_U725->clk(ap_clk);
    moblie_net_hmul_1cud_U725->reset(ap_rst);
    moblie_net_hmul_1cud_U725->din0(input_regs_read_int_reg);
    moblie_net_hmul_1cud_U725->din1(weight_regs_read_int_reg);
    moblie_net_hmul_1cud_U725->ce(ap_var_for_const0);
    moblie_net_hmul_1cud_U725->dout(grp_fu_18_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter3);

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( grp_fu_18_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mac_1_1_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, input_regs_read, "(port)input_regs_read");
    sc_trace(mVcdFile, weight_regs_read, "(port)weight_regs_read");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter3, "ap_block_state4_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, grp_fu_18_p2, "grp_fu_18_p2");
    sc_trace(mVcdFile, input_regs_read_int_reg, "input_regs_read_int_reg");
    sc_trace(mVcdFile, weight_regs_read_int_reg, "weight_regs_read_int_reg");
#endif

    }
}

mac_1_1_s::~mac_1_1_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete moblie_net_hmul_1cud_U725;
}

void mac_1_1_s::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void mac_1_1_s::thread_ap_clk_no_reset_() {
    input_regs_read_int_reg = input_regs_read.read();
    weight_regs_read_int_reg = weight_regs_read.read();
}

void mac_1_1_s::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mac_1_1_s::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mac_1_1_s::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mac_1_1_s::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mac_1_1_s::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mac_1_1_s::thread_ap_block_state4_pp0_stage0_iter3() {
    ap_block_state4_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mac_1_1_s::thread_ap_return() {
    ap_return = grp_fu_18_p2.read();
}

}

