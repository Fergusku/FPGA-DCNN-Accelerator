// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _copy_input_fmem2buff_5_HH_
#define _copy_input_fmem2buff_5_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct copy_input_fmem2buff_5 : public sc_module {
    // Port declarations 65
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_inputs_AWVALID;
    sc_in< sc_logic > m_axi_inputs_AWREADY;
    sc_out< sc_lv<32> > m_axi_inputs_AWADDR;
    sc_out< sc_lv<1> > m_axi_inputs_AWID;
    sc_out< sc_lv<32> > m_axi_inputs_AWLEN;
    sc_out< sc_lv<3> > m_axi_inputs_AWSIZE;
    sc_out< sc_lv<2> > m_axi_inputs_AWBURST;
    sc_out< sc_lv<2> > m_axi_inputs_AWLOCK;
    sc_out< sc_lv<4> > m_axi_inputs_AWCACHE;
    sc_out< sc_lv<3> > m_axi_inputs_AWPROT;
    sc_out< sc_lv<4> > m_axi_inputs_AWQOS;
    sc_out< sc_lv<4> > m_axi_inputs_AWREGION;
    sc_out< sc_lv<1> > m_axi_inputs_AWUSER;
    sc_out< sc_logic > m_axi_inputs_WVALID;
    sc_in< sc_logic > m_axi_inputs_WREADY;
    sc_out< sc_lv<16> > m_axi_inputs_WDATA;
    sc_out< sc_lv<2> > m_axi_inputs_WSTRB;
    sc_out< sc_logic > m_axi_inputs_WLAST;
    sc_out< sc_lv<1> > m_axi_inputs_WID;
    sc_out< sc_lv<1> > m_axi_inputs_WUSER;
    sc_out< sc_logic > m_axi_inputs_ARVALID;
    sc_in< sc_logic > m_axi_inputs_ARREADY;
    sc_out< sc_lv<32> > m_axi_inputs_ARADDR;
    sc_out< sc_lv<1> > m_axi_inputs_ARID;
    sc_out< sc_lv<32> > m_axi_inputs_ARLEN;
    sc_out< sc_lv<3> > m_axi_inputs_ARSIZE;
    sc_out< sc_lv<2> > m_axi_inputs_ARBURST;
    sc_out< sc_lv<2> > m_axi_inputs_ARLOCK;
    sc_out< sc_lv<4> > m_axi_inputs_ARCACHE;
    sc_out< sc_lv<3> > m_axi_inputs_ARPROT;
    sc_out< sc_lv<4> > m_axi_inputs_ARQOS;
    sc_out< sc_lv<4> > m_axi_inputs_ARREGION;
    sc_out< sc_lv<1> > m_axi_inputs_ARUSER;
    sc_in< sc_logic > m_axi_inputs_RVALID;
    sc_out< sc_logic > m_axi_inputs_RREADY;
    sc_in< sc_lv<16> > m_axi_inputs_RDATA;
    sc_in< sc_logic > m_axi_inputs_RLAST;
    sc_in< sc_lv<1> > m_axi_inputs_RID;
    sc_in< sc_lv<1> > m_axi_inputs_RUSER;
    sc_in< sc_lv<2> > m_axi_inputs_RRESP;
    sc_in< sc_logic > m_axi_inputs_BVALID;
    sc_out< sc_logic > m_axi_inputs_BREADY;
    sc_in< sc_lv<2> > m_axi_inputs_BRESP;
    sc_in< sc_lv<1> > m_axi_inputs_BID;
    sc_in< sc_lv<1> > m_axi_inputs_BUSER;
    sc_in< sc_lv<31> > inputs_offset;
    sc_in< sc_lv<20> > inputs_offset1;
    sc_out< sc_lv<16> > input_buffer_V_din;
    sc_in< sc_logic > input_buffer_V_full_n;
    sc_out< sc_logic > input_buffer_V_write;
    sc_in< sc_lv<6> > n;
    sc_in< sc_lv<8> > r;
    sc_in< sc_lv<8> > c;
    sc_in< sc_lv<2> > nLoops;
    sc_in< sc_lv<8> > rLoops;
    sc_in< sc_lv<8> > cLoops;
    sc_out< sc_logic > input_cntl_V_din;
    sc_in< sc_logic > input_cntl_V_full_n;
    sc_out< sc_logic > input_cntl_V_write;


    // Module declarations
    copy_input_fmem2buff_5(sc_module_name name);
    SC_HAS_PROCESS(copy_input_fmem2buff_5);

    ~copy_input_fmem2buff_5();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<30> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > inputs_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_logic > inputs_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< bool > ap_block_pp2_stage0;
    sc_signal< sc_lv<1> > exitcond6_reg_723;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > tmp_102_reg_714;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_reg_695;
    sc_signal< sc_lv<5> > i8_reg_286;
    sc_signal< sc_lv<5> > i6_reg_297;
    sc_signal< sc_lv<5> > i5_reg_308;
    sc_signal< sc_lv<16> > reg_330;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< bool > ap_block_state22_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state23_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state24_pp1_stage0_iter2;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<32> > inputs_offset_cast_fu_335_p1;
    sc_signal< sc_lv<32> > inputs_offset_cast_reg_606;
    sc_signal< sc_lv<20> > base_addr1_fu_367_p2;
    sc_signal< sc_lv<20> > base_addr2_fu_377_p2;
    sc_signal< sc_lv<1> > tmp_88_fu_383_p2;
    sc_signal< sc_lv<1> > tmp_88_reg_622;
    sc_signal< sc_lv<1> > tmp_587_reg_626;
    sc_signal< sc_lv<21> > inputs_offset_cast_c_fu_403_p1;
    sc_signal< sc_lv<21> > inputs_offset_cast_c_reg_630;
    sc_signal< sc_lv<6> > tmp_588_fu_407_p1;
    sc_signal< sc_lv<6> > tmp_588_reg_636;
    sc_signal< sc_lv<6> > tmp_589_fu_411_p1;
    sc_signal< sc_lv<6> > tmp_589_reg_641;
    sc_signal< sc_lv<32> > tmp_90_fu_415_p1;
    sc_signal< sc_lv<32> > tmp_90_reg_647;
    sc_signal< sc_lv<2> > tn_12_fu_424_p2;
    sc_signal< sc_lv<2> > tn_12_reg_655;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_92_fu_438_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<5> > tr_5_fu_443_p2;
    sc_signal< sc_lv<5> > tr_5_reg_664;
    sc_signal< sc_lv<1> > tmp_590_fu_454_p3;
    sc_signal< sc_lv<32> > inputs_addr_4_reg_673;
    sc_signal< sc_lv<32> > inputs_addr_reg_679;
    sc_signal< sc_lv<20> > base_addr1_d1_5_fu_518_p2;
    sc_signal< sc_lv<20> > base_addr2_d1_4_fu_524_p2;
    sc_signal< sc_lv<1> > exitcond_fu_530_p2;
    sc_signal< sc_lv<1> > exitcond_reg_695_pp0_iter1_reg;
    sc_signal< sc_lv<5> > i_3_fu_536_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<20> > base_addr1_d2_5_fu_542_p2;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<20> > base_addr2_d2_4_fu_548_p2;
    sc_signal< sc_lv<1> > tmp_102_fu_558_p2;
    sc_signal< sc_lv<1> > tmp_102_reg_714_pp1_iter1_reg;
    sc_signal< sc_lv<5> > i_2_fu_563_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<1> > exitcond6_fu_569_p2;
    sc_signal< bool > ap_block_state32_pp2_stage0_iter0;
    sc_signal< bool > ap_block_state33_pp2_stage0_iter1;
    sc_signal< bool > ap_block_state34_pp2_stage0_iter2;
    sc_signal< bool > ap_block_pp2_stage0_11001;
    sc_signal< sc_lv<1> > exitcond6_reg_723_pp2_iter1_reg;
    sc_signal< sc_lv<5> > i_1_fu_575_p2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<16> > tmp_591_reg_732;
    sc_signal< sc_lv<5> > i_s_fu_590_p2;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state22;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< bool > ap_block_pp2_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp2_exit_iter0_state32;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter2;
    sc_signal< sc_lv<20> > base_addr1_d2_reg_222;
    sc_signal< sc_lv<20> > base_addr2_d2_reg_232;
    sc_signal< sc_lv<2> > tn_reg_242;
    sc_signal< sc_lv<20> > base_addr1_d_reg_253;
    sc_signal< sc_lv<1> > exitcond1_fu_419_p2;
    sc_signal< sc_lv<20> > base_addr2_d_reg_264;
    sc_signal< sc_lv<5> > tr_reg_275;
    sc_signal< sc_lv<5> > i_reg_319;
    sc_signal< sc_lv<1> > tmp_95_fu_585_p2;
    sc_signal< sc_lv<64> > sum9_cast_fu_480_p1;
    sc_signal< sc_lv<64> > sum3_cast_fu_508_p1;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_inputs_ARREADY;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_inputs_ARREADY;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< bool > ap_block_pp2_stage0_01001;
    sc_signal< sc_lv<5> > tmp_586_fu_339_p1;
    sc_signal< sc_lv<19> > tmp_fu_343_p3;
    sc_signal< sc_lv<15> > tmp_s_fu_355_p3;
    sc_signal< sc_lv<20> > tmp_cast_fu_351_p1;
    sc_signal< sc_lv<20> > tmp_cast_171_fu_363_p1;
    sc_signal< sc_lv<20> > c_cast7_fu_373_p1;
    sc_signal< sc_lv<8> > tmp_89_fu_389_p2;
    sc_signal< sc_lv<6> > tr_cast_cast_fu_434_p1;
    sc_signal< sc_lv<8> > tr_cast_cast9_fu_430_p1;
    sc_signal< sc_lv<8> > tmp_94_fu_449_p2;
    sc_signal< sc_lv<21> > tmp_98_fu_462_p1;
    sc_signal< sc_lv<21> > tmp_99_fu_466_p2;
    sc_signal< sc_lv<32> > tmp_244_cast_fu_471_p1;
    sc_signal< sc_lv<32> > sum9_fu_475_p2;
    sc_signal< sc_lv<21> > tmp_96_fu_490_p1;
    sc_signal< sc_lv<21> > tmp_97_fu_494_p2;
    sc_signal< sc_lv<32> > tmp_241_cast_fu_499_p1;
    sc_signal< sc_lv<32> > sum3_fu_503_p2;
    sc_signal< sc_lv<6> > i6_cast_cast_fu_554_p1;
    sc_signal< sc_lv<6> > i_cast_fu_581_p1;
    sc_signal< sc_lv<30> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_logic > ap_idle_pp2;
    sc_signal< sc_logic > ap_enable_pp2;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<30> ap_ST_fsm_state1;
    static const sc_lv<30> ap_ST_fsm_state2;
    static const sc_lv<30> ap_ST_fsm_state3;
    static const sc_lv<30> ap_ST_fsm_state4;
    static const sc_lv<30> ap_ST_fsm_state5;
    static const sc_lv<30> ap_ST_fsm_state6;
    static const sc_lv<30> ap_ST_fsm_state7;
    static const sc_lv<30> ap_ST_fsm_state8;
    static const sc_lv<30> ap_ST_fsm_state9;
    static const sc_lv<30> ap_ST_fsm_state10;
    static const sc_lv<30> ap_ST_fsm_pp0_stage0;
    static const sc_lv<30> ap_ST_fsm_state14;
    static const sc_lv<30> ap_ST_fsm_state15;
    static const sc_lv<30> ap_ST_fsm_state16;
    static const sc_lv<30> ap_ST_fsm_state17;
    static const sc_lv<30> ap_ST_fsm_state18;
    static const sc_lv<30> ap_ST_fsm_state19;
    static const sc_lv<30> ap_ST_fsm_state20;
    static const sc_lv<30> ap_ST_fsm_state21;
    static const sc_lv<30> ap_ST_fsm_pp1_stage0;
    static const sc_lv<30> ap_ST_fsm_state25;
    static const sc_lv<30> ap_ST_fsm_state26;
    static const sc_lv<30> ap_ST_fsm_state27;
    static const sc_lv<30> ap_ST_fsm_state28;
    static const sc_lv<30> ap_ST_fsm_state29;
    static const sc_lv<30> ap_ST_fsm_state30;
    static const sc_lv<30> ap_ST_fsm_state31;
    static const sc_lv<30> ap_ST_fsm_pp2_stage0;
    static const sc_lv<30> ap_ST_fsm_state35;
    static const sc_lv<30> ap_ST_fsm_state36;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_1B;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<20> ap_const_lv20_4000;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<20> ap_const_lv20_80;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp2_stage0();
    void thread_ap_block_pp2_stage0_01001();
    void thread_ap_block_pp2_stage0_11001();
    void thread_ap_block_pp2_stage0_subdone();
    void thread_ap_block_state11_pp0_stage0_iter0();
    void thread_ap_block_state12_pp0_stage0_iter1();
    void thread_ap_block_state13_pp0_stage0_iter2();
    void thread_ap_block_state22_pp1_stage0_iter0();
    void thread_ap_block_state23_pp1_stage0_iter1();
    void thread_ap_block_state24_pp1_stage0_iter2();
    void thread_ap_block_state32_pp2_stage0_iter0();
    void thread_ap_block_state33_pp2_stage0_iter1();
    void thread_ap_block_state34_pp2_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state11();
    void thread_ap_condition_pp1_exit_iter0_state22();
    void thread_ap_condition_pp2_exit_iter0_state32();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_enable_pp2();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_idle_pp2();
    void thread_ap_ready();
    void thread_ap_sig_ioackin_m_axi_inputs_ARREADY();
    void thread_base_addr1_d1_5_fu_518_p2();
    void thread_base_addr1_d2_5_fu_542_p2();
    void thread_base_addr1_fu_367_p2();
    void thread_base_addr2_d1_4_fu_524_p2();
    void thread_base_addr2_d2_4_fu_548_p2();
    void thread_base_addr2_fu_377_p2();
    void thread_c_cast7_fu_373_p1();
    void thread_exitcond1_fu_419_p2();
    void thread_exitcond6_fu_569_p2();
    void thread_exitcond_fu_530_p2();
    void thread_i6_cast_cast_fu_554_p1();
    void thread_i_1_fu_575_p2();
    void thread_i_2_fu_563_p2();
    void thread_i_3_fu_536_p2();
    void thread_i_cast_fu_581_p1();
    void thread_i_s_fu_590_p2();
    void thread_input_buffer_V_din();
    void thread_input_buffer_V_write();
    void thread_input_cntl_V_din();
    void thread_input_cntl_V_write();
    void thread_inputs_blk_n_AR();
    void thread_inputs_blk_n_R();
    void thread_inputs_offset_cast_c_fu_403_p1();
    void thread_inputs_offset_cast_fu_335_p1();
    void thread_m_axi_inputs_ARADDR();
    void thread_m_axi_inputs_ARBURST();
    void thread_m_axi_inputs_ARCACHE();
    void thread_m_axi_inputs_ARID();
    void thread_m_axi_inputs_ARLEN();
    void thread_m_axi_inputs_ARLOCK();
    void thread_m_axi_inputs_ARPROT();
    void thread_m_axi_inputs_ARQOS();
    void thread_m_axi_inputs_ARREGION();
    void thread_m_axi_inputs_ARSIZE();
    void thread_m_axi_inputs_ARUSER();
    void thread_m_axi_inputs_ARVALID();
    void thread_m_axi_inputs_AWADDR();
    void thread_m_axi_inputs_AWBURST();
    void thread_m_axi_inputs_AWCACHE();
    void thread_m_axi_inputs_AWID();
    void thread_m_axi_inputs_AWLEN();
    void thread_m_axi_inputs_AWLOCK();
    void thread_m_axi_inputs_AWPROT();
    void thread_m_axi_inputs_AWQOS();
    void thread_m_axi_inputs_AWREGION();
    void thread_m_axi_inputs_AWSIZE();
    void thread_m_axi_inputs_AWUSER();
    void thread_m_axi_inputs_AWVALID();
    void thread_m_axi_inputs_BREADY();
    void thread_m_axi_inputs_RREADY();
    void thread_m_axi_inputs_WDATA();
    void thread_m_axi_inputs_WID();
    void thread_m_axi_inputs_WLAST();
    void thread_m_axi_inputs_WSTRB();
    void thread_m_axi_inputs_WUSER();
    void thread_m_axi_inputs_WVALID();
    void thread_sum3_cast_fu_508_p1();
    void thread_sum3_fu_503_p2();
    void thread_sum9_cast_fu_480_p1();
    void thread_sum9_fu_475_p2();
    void thread_tmp_102_fu_558_p2();
    void thread_tmp_241_cast_fu_499_p1();
    void thread_tmp_244_cast_fu_471_p1();
    void thread_tmp_586_fu_339_p1();
    void thread_tmp_588_fu_407_p1();
    void thread_tmp_589_fu_411_p1();
    void thread_tmp_590_fu_454_p3();
    void thread_tmp_88_fu_383_p2();
    void thread_tmp_89_fu_389_p2();
    void thread_tmp_90_fu_415_p1();
    void thread_tmp_92_fu_438_p2();
    void thread_tmp_94_fu_449_p2();
    void thread_tmp_95_fu_585_p2();
    void thread_tmp_96_fu_490_p1();
    void thread_tmp_97_fu_494_p2();
    void thread_tmp_98_fu_462_p1();
    void thread_tmp_99_fu_466_p2();
    void thread_tmp_cast_171_fu_363_p1();
    void thread_tmp_cast_fu_351_p1();
    void thread_tmp_fu_343_p3();
    void thread_tmp_s_fu_355_p3();
    void thread_tn_12_fu_424_p2();
    void thread_tr_5_fu_443_p2();
    void thread_tr_cast_cast9_fu_430_p1();
    void thread_tr_cast_cast_fu_434_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
