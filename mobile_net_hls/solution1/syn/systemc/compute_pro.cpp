// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "compute_pro.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic compute_pro::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic compute_pro::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<54> compute_pro::ap_ST_fsm_state1 = "1";
const sc_lv<54> compute_pro::ap_ST_fsm_state2 = "10";
const sc_lv<54> compute_pro::ap_ST_fsm_state3 = "100";
const sc_lv<54> compute_pro::ap_ST_fsm_state4 = "1000";
const sc_lv<54> compute_pro::ap_ST_fsm_state5 = "10000";
const sc_lv<54> compute_pro::ap_ST_fsm_state6 = "100000";
const sc_lv<54> compute_pro::ap_ST_fsm_state7 = "1000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state8 = "10000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state9 = "100000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state10 = "1000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state11 = "10000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state12 = "100000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<54> compute_pro::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<32> compute_pro::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> compute_pro::ap_const_lv32_9 = "1001";
const sc_lv<32> compute_pro::ap_const_lv32_2B = "101011";
const sc_lv<32> compute_pro::ap_const_lv32_18 = "11000";
const sc_lv<32> compute_pro::ap_const_lv32_21 = "100001";
const sc_lv<32> compute_pro::ap_const_lv32_2 = "10";
const sc_lv<1> compute_pro::ap_const_lv1_1 = "1";
const sc_lv<32> compute_pro::ap_const_lv32_3 = "11";
const sc_lv<32> compute_pro::ap_const_lv32_B = "1011";
const sc_lv<32> compute_pro::ap_const_lv32_C = "1100";
const sc_lv<32> compute_pro::ap_const_lv32_D = "1101";
const sc_lv<32> compute_pro::ap_const_lv32_E = "1110";
const sc_lv<1> compute_pro::ap_const_lv1_0 = "0";
const sc_lv<32> compute_pro::ap_const_lv32_F = "1111";
const sc_lv<32> compute_pro::ap_const_lv32_13 = "10011";
const sc_lv<32> compute_pro::ap_const_lv32_1C = "11100";
const sc_lv<32> compute_pro::ap_const_lv32_25 = "100101";
const sc_lv<32> compute_pro::ap_const_lv32_26 = "100110";
const sc_lv<32> compute_pro::ap_const_lv32_2E = "101110";
const sc_lv<32> compute_pro::ap_const_lv32_34 = "110100";
const sc_lv<4> compute_pro::ap_const_lv4_0 = "0000";
const sc_lv<32> compute_pro::ap_const_lv32_35 = "110101";
const sc_lv<16> compute_pro::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> compute_pro::ap_const_lv32_20 = "100000";
const sc_lv<32> compute_pro::ap_const_lv32_4 = "100";
const sc_lv<32> compute_pro::ap_const_lv32_A = "1010";
const sc_lv<32> compute_pro::ap_const_lv32_2C = "101100";
const sc_lv<32> compute_pro::ap_const_lv32_10 = "10000";
const sc_lv<32> compute_pro::ap_const_lv32_19 = "11001";
const sc_lv<32> compute_pro::ap_const_lv32_22 = "100010";
const sc_lv<32> compute_pro::ap_const_lv32_2F = "101111";
const sc_lv<32> compute_pro::ap_const_lv32_1F = "11111";
const sc_lv<32> compute_pro::ap_const_lv32_8 = "1000";
const sc_lv<32> compute_pro::ap_const_lv32_200 = "1000000000";
const sc_lv<32> compute_pro::ap_const_lv32_1 = "1";
const sc_lv<28> compute_pro::ap_const_lv28_1 = "1";
const sc_lv<4> compute_pro::ap_const_lv4_1 = "1";
const sc_lv<28> compute_pro::ap_const_lv28_0 = "0000000000000000000000000000";
const bool compute_pro::ap_const_boolean_1 = true;

compute_pro::compute_pro(sc_module_name name) : sc_module(name), mVcdFile(0) {
    output_temp_U = new compute_pro_outpucgu("output_temp_U");
    output_temp_U->clk(ap_clk);
    output_temp_U->reset(ap_rst);
    output_temp_U->address0(output_temp_addr_1_reg_639);
    output_temp_U->ce0(output_temp_ce0);
    output_temp_U->q0(output_temp_q0);
    output_temp_U->address1(output_temp_address1);
    output_temp_U->ce1(output_temp_ce1);
    output_temp_U->we1(output_temp_we1);
    output_temp_U->d1(output_temp_d1);
    moblie_net_sitofpchv_U2843 = new moblie_net_sitofpchv<1,6,32,32>("moblie_net_sitofpchv_U2843");
    moblie_net_sitofpchv_U2843->clk(ap_clk);
    moblie_net_sitofpchv_U2843->reset(ap_rst);
    moblie_net_sitofpchv_U2843->din0(grp_fu_266_p0);
    moblie_net_sitofpchv_U2843->ce(ap_var_for_const0);
    moblie_net_sitofpchv_U2843->dout(grp_fu_266_p1);
    moblie_net_sitofpchv_U2844 = new moblie_net_sitofpchv<1,6,32,32>("moblie_net_sitofpchv_U2844");
    moblie_net_sitofpchv_U2844->clk(ap_clk);
    moblie_net_sitofpchv_U2844->reset(ap_rst);
    moblie_net_sitofpchv_U2844->din0(rLoops_reg_559);
    moblie_net_sitofpchv_U2844->ce(ap_var_for_const0);
    moblie_net_sitofpchv_U2844->dout(grp_fu_269_p1);
    moblie_net_sptohpciv_U2845 = new moblie_net_sptohpciv<1,3,32,16>("moblie_net_sptohpciv_U2845");
    moblie_net_sptohpciv_U2845->clk(ap_clk);
    moblie_net_sptohpciv_U2845->reset(ap_rst);
    moblie_net_sptohpciv_U2845->din0(reg_313);
    moblie_net_sptohpciv_U2845->ce(ap_var_for_const0);
    moblie_net_sptohpciv_U2845->dout(grp_fu_272_p1);
    moblie_net_sptohpciv_U2846 = new moblie_net_sptohpciv<1,3,32,16>("moblie_net_sptohpciv_U2846");
    moblie_net_sptohpciv_U2846->clk(ap_clk);
    moblie_net_sptohpciv_U2846->reset(ap_rst);
    moblie_net_sptohpciv_U2846->din0(tmp_1344_reg_573);
    moblie_net_sptohpciv_U2846->ce(ap_var_for_const0);
    moblie_net_sptohpciv_U2846->dout(grp_fu_275_p1);
    moblie_net_hadd_1bkb_U2847 = new moblie_net_hadd_1bkb<1,4,16,16,16>("moblie_net_hadd_1bkb_U2847");
    moblie_net_hadd_1bkb_U2847->clk(ap_clk);
    moblie_net_hadd_1bkb_U2847->reset(ap_rst);
    moblie_net_hadd_1bkb_U2847->din0(grp_fu_278_p0);
    moblie_net_hadd_1bkb_U2847->din1(grp_fu_278_p1);
    moblie_net_hadd_1bkb_U2847->ce(ap_var_for_const0);
    moblie_net_hadd_1bkb_U2847->dout(grp_fu_278_p2);
    moblie_net_hdiv_1cjv_U2848 = new moblie_net_hdiv_1cjv<1,6,16,16,16>("moblie_net_hdiv_1cjv_U2848");
    moblie_net_hdiv_1cjv_U2848->clk(ap_clk);
    moblie_net_hdiv_1cjv_U2848->reset(ap_rst);
    moblie_net_hdiv_1cjv_U2848->din0(grp_fu_284_p0);
    moblie_net_hdiv_1cjv_U2848->din1(grp_fu_284_p1);
    moblie_net_hdiv_1cjv_U2848->ce(ap_var_for_const0);
    moblie_net_hdiv_1cjv_U2848->dout(grp_fu_284_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_17_fu_453_p2 );
    sensitive << ( tmp_1352_fu_493_p1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_17_fu_453_p2 );
    sensitive << ( tmp_1352_fu_493_p1 );

    SC_METHOD(thread_brmerge_fu_443_p2);
    sensitive << ( icmp_fu_431_p2 );
    sensitive << ( icmp16_fu_437_p2 );

    SC_METHOD(thread_cLoops_fu_362_p3);
    sensitive << ( tmp_6_fu_351_p2 );
    sensitive << ( tmp_7_fu_356_p2 );

    SC_METHOD(thread_data_buffer_V_read);
    sensitive << ( data_buffer_V_empty_n );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_17_fu_453_p2 );

    SC_METHOD(thread_data_c_V_read);
    sensitive << ( data_c_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_nbreadreq_fu_104_p3 );
    sensitive << ( tmp_9_nbwritereq_fu_112_p3 );

    SC_METHOD(thread_data_n_V_read);
    sensitive << ( data_n_V_empty_n );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_r_V_read);
    sensitive << ( data_r_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_nbreadreq_fu_104_p3 );
    sensitive << ( tmp_9_nbwritereq_fu_112_p3 );

    SC_METHOD(thread_grp_fu_266_p0);
    sensitive << ( block_cnt );
    sensitive << ( cLoops_reg_566 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_278_p0);
    sensitive << ( reg_318 );
    sensitive << ( tmp_1355_reg_653 );
    sensitive << ( output_temp_load_reg_668 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_grp_fu_278_p1);
    sensitive << ( reg_318 );
    sensitive << ( acc_datftr_reg_220 );
    sensitive << ( acc_datftc_reg_243 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_grp_fu_284_p0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_25_reg_673 );
    sensitive << ( acc_datftr_reg_220 );
    sensitive << ( acc_datftc_reg_243 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_grp_fu_284_p1);
    sensitive << ( tmp_588_reg_593 );
    sensitive << ( tmp_589_reg_598 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_590_reg_684 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_grp_fu_295_p1);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_15_fu_421_p2 );
    sensitive << ( tmp_15_reg_603 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_fu_295_p4);
    sensitive << ( grp_fu_295_p1 );

    SC_METHOD(thread_grp_fu_304_p1);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_16_fu_426_p2 );
    sensitive << ( tmp_16_reg_608 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_fu_304_p4);
    sensitive << ( grp_fu_304_p1 );

    SC_METHOD(thread_icmp16_fu_437_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( grp_fu_304_p4 );

    SC_METHOD(thread_icmp19_fu_469_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_17_fu_453_p2 );
    sensitive << ( grp_fu_295_p4 );

    SC_METHOD(thread_icmp22_fu_475_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_17_fu_453_p2 );
    sensitive << ( grp_fu_304_p4 );

    SC_METHOD(thread_icmp_fu_431_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( grp_fu_295_p4 );

    SC_METHOD(thread_input_buffer_V_read);
    sensitive << ( input_buffer_V_empty_n );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_26_fu_522_p2 );

    SC_METHOD(thread_nLoops_fu_385_p3);
    sensitive << ( tmp_s_fu_374_p2 );
    sensitive << ( tmp_3_fu_379_p2 );

    SC_METHOD(thread_or_cond7_fu_481_p2);
    sensitive << ( icmp19_fu_469_p2 );
    sensitive << ( icmp22_fu_475_p2 );

    SC_METHOD(thread_or_cond_fu_415_p2);
    sensitive << ( tmp_11_fu_405_p2 );
    sensitive << ( tmp_12_fu_410_p2 );

    SC_METHOD(thread_output_buffer_V_din);
    sensitive << ( brmerge_reg_613 );
    sensitive << ( output_reg_reg_689 );
    sensitive << ( ap_CS_fsm_state54 );

    SC_METHOD(thread_output_buffer_V_write);
    sensitive << ( output_buffer_V_full_n );
    sensitive << ( brmerge_reg_613 );
    sensitive << ( ap_CS_fsm_state54 );

    SC_METHOD(thread_output_temp_address1);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( output_temp_addr_1_reg_639 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_21_fu_464_p1 );

    SC_METHOD(thread_output_temp_ce0);
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_output_temp_ce1);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_output_temp_d1);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_25_reg_673 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_output_temp_we1);
    sensitive << ( or_cond_reg_589 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_17_fu_453_p2 );

    SC_METHOD(thread_rLoops_fu_343_p3);
    sensitive << ( tmp_4_fu_332_p2 );
    sensitive << ( tmp_5_fu_337_p2 );

    SC_METHOD(thread_result_buffer_V_din);
    sensitive << ( data_buffer_V_dout );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_17_fu_453_p2 );

    SC_METHOD(thread_result_buffer_V_write);
    sensitive << ( result_buffer_V_full_n );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_17_fu_453_p2 );

    SC_METHOD(thread_result_c_V_din);
    sensitive << ( tmp_1351_reg_551 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_17_fu_453_p2 );

    SC_METHOD(thread_result_c_V_write);
    sensitive << ( result_c_V_full_n );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_17_fu_453_p2 );

    SC_METHOD(thread_result_n_V_din);
    sensitive << ( tmp_1349_reg_578 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_17_fu_453_p2 );

    SC_METHOD(thread_result_n_V_write);
    sensitive << ( result_n_V_full_n );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_17_fu_453_p2 );

    SC_METHOD(thread_result_r_V_din);
    sensitive << ( tmp_1350_reg_543 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_17_fu_453_p2 );

    SC_METHOD(thread_result_r_V_write);
    sensitive << ( result_r_V_full_n );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_17_fu_453_p2 );

    SC_METHOD(thread_tc_1_fu_527_p2);
    sensitive << ( tc_reg_255 );

    SC_METHOD(thread_tc_cast_fu_518_p1);
    sensitive << ( tc_reg_255 );

    SC_METHOD(thread_tmp_10_fu_393_p2);
    sensitive << ( block_cnt );

    SC_METHOD(thread_tmp_11_fu_405_p2);
    sensitive << ( tmp_1350_reg_543 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_tmp_12_fu_410_p2);
    sensitive << ( tmp_1351_reg_551 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_tmp_1352_fu_493_p1);
    sensitive << ( data_buffer_V_dout );

    SC_METHOD(thread_tmp_15_fu_421_p2);
    sensitive << ( tmp_1350_reg_543 );
    sensitive << ( rLoops_reg_559 );

    SC_METHOD(thread_tmp_16_fu_426_p2);
    sensitive << ( tmp_1351_reg_551 );
    sensitive << ( cLoops_reg_566 );

    SC_METHOD(thread_tmp_17_fu_453_p2);
    sensitive << ( nLoops_reg_584 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tn_cast_fu_449_p1 );

    SC_METHOD(thread_tmp_21_fu_464_p1);
    sensitive << ( tn_reg_208 );

    SC_METHOD(thread_tmp_22_fu_502_p2);
    sensitive << ( rLoops_reg_559 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tr_cast_fu_498_p1 );

    SC_METHOD(thread_tmp_24_fu_513_p1);
    sensitive << ( tn_reg_208 );

    SC_METHOD(thread_tmp_26_fu_522_p2);
    sensitive << ( cLoops_reg_566 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tc_cast_fu_518_p1 );

    SC_METHOD(thread_tmp_3_fu_379_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_s_fu_374_p2 );

    SC_METHOD(thread_tmp_4_fu_332_p2);
    sensitive << ( tmp_1350_reg_543 );

    SC_METHOD(thread_tmp_5_fu_337_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_4_fu_332_p2 );

    SC_METHOD(thread_tmp_6_fu_351_p2);
    sensitive << ( tmp_1351_reg_551 );

    SC_METHOD(thread_tmp_7_fu_356_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_6_fu_351_p2 );

    SC_METHOD(thread_tmp_9_nbwritereq_fu_112_p3);
    sensitive << ( result_buffer_V_full_n );

    SC_METHOD(thread_tmp_nbreadreq_fu_104_p3);
    sensitive << ( data_buffer_V_empty_n );

    SC_METHOD(thread_tmp_s_fu_374_p2);
    sensitive << ( tmp_1349_reg_578 );

    SC_METHOD(thread_tn_1_fu_458_p2);
    sensitive << ( tn_reg_208 );

    SC_METHOD(thread_tn_cast_fu_449_p1);
    sensitive << ( tn_reg_208 );

    SC_METHOD(thread_tr_1_fu_507_p2);
    sensitive << ( tr_reg_232 );

    SC_METHOD(thread_tr_cast_fu_498_p1);
    sensitive << ( tr_reg_232 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_nbreadreq_fu_104_p3 );
    sensitive << ( tmp_9_nbwritereq_fu_112_p3 );
    sensitive << ( brmerge_reg_613 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_22_fu_502_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_26_fu_522_p2 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_17_fu_453_p2 );
    sensitive << ( tmp_1352_fu_493_p1 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000000000000000000000000000000000000000000000000000001";
    block_cnt = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "compute_pro_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_buffer_V_dout, "(port)input_buffer_V_dout");
    sc_trace(mVcdFile, input_buffer_V_empty_n, "(port)input_buffer_V_empty_n");
    sc_trace(mVcdFile, input_buffer_V_read, "(port)input_buffer_V_read");
    sc_trace(mVcdFile, output_buffer_V_din, "(port)output_buffer_V_din");
    sc_trace(mVcdFile, output_buffer_V_full_n, "(port)output_buffer_V_full_n");
    sc_trace(mVcdFile, output_buffer_V_write, "(port)output_buffer_V_write");
    sc_trace(mVcdFile, data_buffer_V_dout, "(port)data_buffer_V_dout");
    sc_trace(mVcdFile, data_buffer_V_empty_n, "(port)data_buffer_V_empty_n");
    sc_trace(mVcdFile, data_buffer_V_read, "(port)data_buffer_V_read");
    sc_trace(mVcdFile, result_buffer_V_din, "(port)result_buffer_V_din");
    sc_trace(mVcdFile, result_buffer_V_full_n, "(port)result_buffer_V_full_n");
    sc_trace(mVcdFile, result_buffer_V_write, "(port)result_buffer_V_write");
    sc_trace(mVcdFile, data_n_V_dout, "(port)data_n_V_dout");
    sc_trace(mVcdFile, data_n_V_empty_n, "(port)data_n_V_empty_n");
    sc_trace(mVcdFile, data_n_V_read, "(port)data_n_V_read");
    sc_trace(mVcdFile, data_r_V_dout, "(port)data_r_V_dout");
    sc_trace(mVcdFile, data_r_V_empty_n, "(port)data_r_V_empty_n");
    sc_trace(mVcdFile, data_r_V_read, "(port)data_r_V_read");
    sc_trace(mVcdFile, data_c_V_dout, "(port)data_c_V_dout");
    sc_trace(mVcdFile, data_c_V_empty_n, "(port)data_c_V_empty_n");
    sc_trace(mVcdFile, data_c_V_read, "(port)data_c_V_read");
    sc_trace(mVcdFile, result_n_V_din, "(port)result_n_V_din");
    sc_trace(mVcdFile, result_n_V_full_n, "(port)result_n_V_full_n");
    sc_trace(mVcdFile, result_n_V_write, "(port)result_n_V_write");
    sc_trace(mVcdFile, result_r_V_din, "(port)result_r_V_din");
    sc_trace(mVcdFile, result_r_V_full_n, "(port)result_r_V_full_n");
    sc_trace(mVcdFile, result_r_V_write, "(port)result_r_V_write");
    sc_trace(mVcdFile, result_c_V_din, "(port)result_c_V_din");
    sc_trace(mVcdFile, result_c_V_full_n, "(port)result_c_V_full_n");
    sc_trace(mVcdFile, result_c_V_write, "(port)result_c_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, block_cnt, "block_cnt");
    sc_trace(mVcdFile, grp_fu_266_p1, "grp_fu_266_p1");
    sc_trace(mVcdFile, reg_313, "reg_313");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, grp_fu_284_p2, "grp_fu_284_p2");
    sc_trace(mVcdFile, reg_318, "reg_318");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, tmp_1350_reg_543, "tmp_1350_reg_543");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_104_p3, "tmp_nbreadreq_fu_104_p3");
    sc_trace(mVcdFile, tmp_9_nbwritereq_fu_112_p3, "tmp_9_nbwritereq_fu_112_p3");
    sc_trace(mVcdFile, tmp_1351_reg_551, "tmp_1351_reg_551");
    sc_trace(mVcdFile, rLoops_fu_343_p3, "rLoops_fu_343_p3");
    sc_trace(mVcdFile, rLoops_reg_559, "rLoops_reg_559");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, cLoops_fu_362_p3, "cLoops_fu_362_p3");
    sc_trace(mVcdFile, cLoops_reg_566, "cLoops_reg_566");
    sc_trace(mVcdFile, grp_fu_269_p1, "grp_fu_269_p1");
    sc_trace(mVcdFile, tmp_1344_reg_573, "tmp_1344_reg_573");
    sc_trace(mVcdFile, tmp_1349_reg_578, "tmp_1349_reg_578");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, nLoops_fu_385_p3, "nLoops_fu_385_p3");
    sc_trace(mVcdFile, nLoops_reg_584, "nLoops_reg_584");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, or_cond_fu_415_p2, "or_cond_fu_415_p2");
    sc_trace(mVcdFile, or_cond_reg_589, "or_cond_reg_589");
    sc_trace(mVcdFile, grp_fu_272_p1, "grp_fu_272_p1");
    sc_trace(mVcdFile, tmp_588_reg_593, "tmp_588_reg_593");
    sc_trace(mVcdFile, grp_fu_275_p1, "grp_fu_275_p1");
    sc_trace(mVcdFile, tmp_589_reg_598, "tmp_589_reg_598");
    sc_trace(mVcdFile, tmp_15_fu_421_p2, "tmp_15_fu_421_p2");
    sc_trace(mVcdFile, tmp_15_reg_603, "tmp_15_reg_603");
    sc_trace(mVcdFile, tmp_16_fu_426_p2, "tmp_16_fu_426_p2");
    sc_trace(mVcdFile, tmp_16_reg_608, "tmp_16_reg_608");
    sc_trace(mVcdFile, brmerge_fu_443_p2, "brmerge_fu_443_p2");
    sc_trace(mVcdFile, brmerge_reg_613, "brmerge_reg_613");
    sc_trace(mVcdFile, tn_1_fu_458_p2, "tn_1_fu_458_p2");
    sc_trace(mVcdFile, tn_1_reg_620, "tn_1_reg_620");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tr_1_fu_507_p2, "tr_1_fu_507_p2");
    sc_trace(mVcdFile, tr_1_reg_634, "tr_1_reg_634");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, output_temp_addr_1_reg_639, "output_temp_addr_1_reg_639");
    sc_trace(mVcdFile, tmp_22_fu_502_p2, "tmp_22_fu_502_p2");
    sc_trace(mVcdFile, tc_1_fu_527_p2, "tc_1_fu_527_p2");
    sc_trace(mVcdFile, tc_1_reg_648, "tc_1_reg_648");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, tmp_1355_reg_653, "tmp_1355_reg_653");
    sc_trace(mVcdFile, tmp_26_fu_522_p2, "tmp_26_fu_522_p2");
    sc_trace(mVcdFile, grp_fu_278_p2, "grp_fu_278_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, output_temp_q0, "output_temp_q0");
    sc_trace(mVcdFile, output_temp_load_reg_668, "output_temp_load_reg_668");
    sc_trace(mVcdFile, tmp_25_reg_673, "tmp_25_reg_673");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, tmp_590_reg_684, "tmp_590_reg_684");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, output_reg_reg_689, "output_reg_reg_689");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, output_temp_ce0, "output_temp_ce0");
    sc_trace(mVcdFile, output_temp_address1, "output_temp_address1");
    sc_trace(mVcdFile, output_temp_ce1, "output_temp_ce1");
    sc_trace(mVcdFile, output_temp_we1, "output_temp_we1");
    sc_trace(mVcdFile, output_temp_d1, "output_temp_d1");
    sc_trace(mVcdFile, tn_reg_208, "tn_reg_208");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, acc_datftr_reg_220, "acc_datftr_reg_220");
    sc_trace(mVcdFile, tmp_17_fu_453_p2, "tmp_17_fu_453_p2");
    sc_trace(mVcdFile, tr_reg_232, "tr_reg_232");
    sc_trace(mVcdFile, acc_datftc_reg_243, "acc_datftc_reg_243");
    sc_trace(mVcdFile, tc_reg_255, "tc_reg_255");
    sc_trace(mVcdFile, tmp_21_fu_464_p1, "tmp_21_fu_464_p1");
    sc_trace(mVcdFile, tmp_24_fu_513_p1, "tmp_24_fu_513_p1");
    sc_trace(mVcdFile, tmp_1352_fu_493_p1, "tmp_1352_fu_493_p1");
    sc_trace(mVcdFile, tmp_10_fu_393_p2, "tmp_10_fu_393_p2");
    sc_trace(mVcdFile, or_cond7_fu_481_p2, "or_cond7_fu_481_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, grp_fu_266_p0, "grp_fu_266_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, grp_fu_278_p0, "grp_fu_278_p0");
    sc_trace(mVcdFile, grp_fu_278_p1, "grp_fu_278_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, grp_fu_284_p0, "grp_fu_284_p0");
    sc_trace(mVcdFile, grp_fu_284_p1, "grp_fu_284_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, grp_fu_295_p1, "grp_fu_295_p1");
    sc_trace(mVcdFile, grp_fu_304_p1, "grp_fu_304_p1");
    sc_trace(mVcdFile, tmp_4_fu_332_p2, "tmp_4_fu_332_p2");
    sc_trace(mVcdFile, tmp_5_fu_337_p2, "tmp_5_fu_337_p2");
    sc_trace(mVcdFile, tmp_6_fu_351_p2, "tmp_6_fu_351_p2");
    sc_trace(mVcdFile, tmp_7_fu_356_p2, "tmp_7_fu_356_p2");
    sc_trace(mVcdFile, tmp_s_fu_374_p2, "tmp_s_fu_374_p2");
    sc_trace(mVcdFile, tmp_3_fu_379_p2, "tmp_3_fu_379_p2");
    sc_trace(mVcdFile, tmp_11_fu_405_p2, "tmp_11_fu_405_p2");
    sc_trace(mVcdFile, tmp_12_fu_410_p2, "tmp_12_fu_410_p2");
    sc_trace(mVcdFile, grp_fu_295_p4, "grp_fu_295_p4");
    sc_trace(mVcdFile, grp_fu_304_p4, "grp_fu_304_p4");
    sc_trace(mVcdFile, icmp_fu_431_p2, "icmp_fu_431_p2");
    sc_trace(mVcdFile, icmp16_fu_437_p2, "icmp16_fu_437_p2");
    sc_trace(mVcdFile, tn_cast_fu_449_p1, "tn_cast_fu_449_p1");
    sc_trace(mVcdFile, icmp19_fu_469_p2, "icmp19_fu_469_p2");
    sc_trace(mVcdFile, icmp22_fu_475_p2, "icmp22_fu_475_p2");
    sc_trace(mVcdFile, tr_cast_fu_498_p1, "tr_cast_fu_498_p1");
    sc_trace(mVcdFile, tc_cast_fu_518_p1, "tc_cast_fu_518_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
#endif

    }
}

compute_pro::~compute_pro() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete output_temp_U;
    delete moblie_net_sitofpchv_U2843;
    delete moblie_net_sitofpchv_U2844;
    delete moblie_net_sptohpciv_U2845;
    delete moblie_net_sptohpciv_U2846;
    delete moblie_net_hadd_1bkb_U2847;
    delete moblie_net_hdiv_1cjv_U2848;
}

void compute_pro::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void compute_pro::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        acc_datftc_reg_243 = grp_fu_278_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_22_fu_502_p2.read()))) {
        acc_datftc_reg_243 = ap_const_lv16_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        acc_datftr_reg_220 = grp_fu_278_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_fu_453_p2.read()))) {
        acc_datftr_reg_220 = ap_const_lv16_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_453_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1352_fu_493_p1.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_453_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond7_fu_481_p2.read()))) {
        block_cnt = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        block_cnt = tmp_10_fu_393_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        tc_reg_255 = tc_1_reg_648.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_22_fu_502_p2.read()))) {
        tc_reg_255 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        tn_reg_208 = tn_1_reg_620.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        tn_reg_208 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        tr_reg_232 = tr_1_reg_634.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_fu_453_p2.read()))) {
        tr_reg_232 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        brmerge_reg_613 = brmerge_fu_443_p2.read();
        nLoops_reg_584 = nLoops_fu_385_p3.read();
        or_cond_reg_589 = or_cond_fu_415_p2.read();
        tmp_15_reg_603 = tmp_15_fu_421_p2.read();
        tmp_16_reg_608 = tmp_16_fu_426_p2.read();
        tmp_588_reg_593 = grp_fu_272_p1.read();
        tmp_589_reg_598 = grp_fu_275_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cLoops_reg_566 = cLoops_fu_362_p3.read();
        rLoops_reg_559 = rLoops_fu_343_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        output_reg_reg_689 = grp_fu_284_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(tmp_22_fu_502_p2.read(), ap_const_lv1_0))) {
        output_temp_addr_1_reg_639 =  (sc_lv<3>) (tmp_24_fu_513_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        output_temp_load_reg_668 = output_temp_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        reg_313 = grp_fu_266_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        reg_318 = grp_fu_284_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        tc_1_reg_648 = tc_1_fu_527_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_1344_reg_573 = grp_fu_269_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_1349_reg_578 = data_n_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_104_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_nbwritereq_fu_112_p3.read()))) {
        tmp_1350_reg_543 = data_r_V_dout.read();
        tmp_1351_reg_551 = data_c_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_26_fu_522_p2.read()))) {
        tmp_1355_reg_653 = input_buffer_V_dout.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        tmp_25_reg_673 = grp_fu_278_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        tmp_590_reg_684 = grp_fu_272_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        tn_1_reg_620 = tn_1_fu_458_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        tr_1_reg_634 = tr_1_fu_507_p2.read();
    }
}

void compute_pro::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void compute_pro::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void compute_pro::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void compute_pro::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void compute_pro::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void compute_pro::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void compute_pro::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void compute_pro::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void compute_pro::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void compute_pro::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void compute_pro::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void compute_pro::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void compute_pro::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void compute_pro::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void compute_pro::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void compute_pro::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void compute_pro::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void compute_pro::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void compute_pro::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void compute_pro::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void compute_pro::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void compute_pro::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void compute_pro::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void compute_pro::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void compute_pro::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void compute_pro::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[52];
}

void compute_pro::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[53];
}

void compute_pro::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void compute_pro::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_453_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1352_fu_493_p1.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void compute_pro::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void compute_pro::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_453_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1352_fu_493_p1.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void compute_pro::thread_brmerge_fu_443_p2() {
    brmerge_fu_443_p2 = (icmp_fu_431_p2.read() | icmp16_fu_437_p2.read());
}

void compute_pro::thread_cLoops_fu_362_p3() {
    cLoops_fu_362_p3 = (!tmp_7_fu_356_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_7_fu_356_p2.read()[0].to_bool())? ap_const_lv32_8: tmp_6_fu_351_p2.read());
}

void compute_pro::thread_data_buffer_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_453_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, data_buffer_V_empty_n.read()))) {
        data_buffer_V_read = ap_const_logic_1;
    } else {
        data_buffer_V_read = ap_const_logic_0;
    }
}

void compute_pro::thread_data_c_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_104_p3.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_nbwritereq_fu_112_p3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, data_c_V_empty_n.read()))) {
        data_c_V_read = ap_const_logic_1;
    } else {
        data_c_V_read = ap_const_logic_0;
    }
}

void compute_pro::thread_data_n_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, data_n_V_empty_n.read()))) {
        data_n_V_read = ap_const_logic_1;
    } else {
        data_n_V_read = ap_const_logic_0;
    }
}

void compute_pro::thread_data_r_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_104_p3.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_nbwritereq_fu_112_p3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, data_r_V_empty_n.read()))) {
        data_r_V_read = ap_const_logic_1;
    } else {
        data_r_V_read = ap_const_logic_0;
    }
}

void compute_pro::thread_grp_fu_266_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_fu_266_p0 = block_cnt.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_266_p0 = cLoops_reg_566.read();
    } else {
        grp_fu_266_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void compute_pro::thread_grp_fu_278_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_278_p0 = output_temp_load_reg_668.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_fu_278_p0 = reg_318.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_278_p0 = tmp_1355_reg_653.read();
    } else {
        grp_fu_278_p0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void compute_pro::thread_grp_fu_278_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_278_p1 = reg_318.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_fu_278_p1 = acc_datftr_reg_220.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_278_p1 = acc_datftc_reg_243.read();
    } else {
        grp_fu_278_p1 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void compute_pro::thread_grp_fu_284_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        grp_fu_284_p0 = tmp_25_reg_673.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_284_p0 = acc_datftc_reg_243.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_284_p0 = acc_datftr_reg_220.read();
    } else {
        grp_fu_284_p0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void compute_pro::thread_grp_fu_284_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        grp_fu_284_p1 = tmp_590_reg_684.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_284_p1 = tmp_588_reg_593.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_284_p1 = tmp_589_reg_598.read();
    } else {
        grp_fu_284_p1 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void compute_pro::thread_grp_fu_295_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_295_p1 = tmp_15_reg_603.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_295_p1 = tmp_15_fu_421_p2.read();
    } else {
        grp_fu_295_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void compute_pro::thread_grp_fu_295_p4() {
    grp_fu_295_p4 = grp_fu_295_p1.read().range(31, 4);
}

void compute_pro::thread_grp_fu_304_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_304_p1 = tmp_16_reg_608.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_304_p1 = tmp_16_fu_426_p2.read();
    } else {
        grp_fu_304_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void compute_pro::thread_grp_fu_304_p4() {
    grp_fu_304_p4 = grp_fu_304_p1.read().range(31, 4);
}

void compute_pro::thread_icmp16_fu_437_p2() {
    icmp16_fu_437_p2 = (!grp_fu_304_p4.read().is_01() || !ap_const_lv28_1.is_01())? sc_lv<1>(): (sc_bigint<28>(grp_fu_304_p4.read()) < sc_bigint<28>(ap_const_lv28_1));
}

void compute_pro::thread_icmp19_fu_469_p2() {
    icmp19_fu_469_p2 = (!grp_fu_295_p4.read().is_01() || !ap_const_lv28_0.is_01())? sc_lv<1>(): (sc_bigint<28>(grp_fu_295_p4.read()) > sc_bigint<28>(ap_const_lv28_0));
}

void compute_pro::thread_icmp22_fu_475_p2() {
    icmp22_fu_475_p2 = (!grp_fu_304_p4.read().is_01() || !ap_const_lv28_0.is_01())? sc_lv<1>(): (sc_bigint<28>(grp_fu_304_p4.read()) > sc_bigint<28>(ap_const_lv28_0));
}

void compute_pro::thread_icmp_fu_431_p2() {
    icmp_fu_431_p2 = (!grp_fu_295_p4.read().is_01() || !ap_const_lv28_1.is_01())? sc_lv<1>(): (sc_bigint<28>(grp_fu_295_p4.read()) < sc_bigint<28>(ap_const_lv28_1));
}

void compute_pro::thread_input_buffer_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_26_fu_522_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, input_buffer_V_empty_n.read()))) {
        input_buffer_V_read = ap_const_logic_1;
    } else {
        input_buffer_V_read = ap_const_logic_0;
    }
}

void compute_pro::thread_nLoops_fu_385_p3() {
    nLoops_fu_385_p3 = (!tmp_3_fu_379_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_3_fu_379_p2.read()[0].to_bool())? ap_const_lv32_8: tmp_s_fu_374_p2.read());
}

void compute_pro::thread_or_cond7_fu_481_p2() {
    or_cond7_fu_481_p2 = (icmp19_fu_469_p2.read() & icmp22_fu_475_p2.read());
}

void compute_pro::thread_or_cond_fu_415_p2() {
    or_cond_fu_415_p2 = (tmp_11_fu_405_p2.read() & tmp_12_fu_410_p2.read());
}

void compute_pro::thread_output_buffer_V_din() {
    output_buffer_V_din = output_reg_reg_689.read();
}

void compute_pro::thread_output_buffer_V_write() {
    if ((esl_seteq<1,1,1>(brmerge_reg_613.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, output_buffer_V_full_n.read()))) {
        output_buffer_V_write = ap_const_logic_1;
    } else {
        output_buffer_V_write = ap_const_logic_0;
    }
}

void compute_pro::thread_output_temp_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        output_temp_address1 = output_temp_addr_1_reg_639.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        output_temp_address1 =  (sc_lv<3>) (tmp_21_fu_464_p1.read());
    } else {
        output_temp_address1 =  (sc_lv<3>) ("XXX");
    }
}

void compute_pro::thread_output_temp_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        output_temp_ce0 = ap_const_logic_1;
    } else {
        output_temp_ce0 = ap_const_logic_0;
    }
}

void compute_pro::thread_output_temp_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
        output_temp_ce1 = ap_const_logic_1;
    } else {
        output_temp_ce1 = ap_const_logic_0;
    }
}

void compute_pro::thread_output_temp_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        output_temp_d1 = tmp_25_reg_673.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        output_temp_d1 = ap_const_lv16_0;
    } else {
        output_temp_d1 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void compute_pro::thread_output_temp_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_fu_453_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_589.read())))) {
        output_temp_we1 = ap_const_logic_1;
    } else {
        output_temp_we1 = ap_const_logic_0;
    }
}

void compute_pro::thread_rLoops_fu_343_p3() {
    rLoops_fu_343_p3 = (!tmp_5_fu_337_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_5_fu_337_p2.read()[0].to_bool())? ap_const_lv32_8: tmp_4_fu_332_p2.read());
}

void compute_pro::thread_result_buffer_V_din() {
    result_buffer_V_din = data_buffer_V_dout.read();
}

void compute_pro::thread_result_buffer_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_453_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, result_buffer_V_full_n.read()))) {
        result_buffer_V_write = ap_const_logic_1;
    } else {
        result_buffer_V_write = ap_const_logic_0;
    }
}

void compute_pro::thread_result_c_V_din() {
    result_c_V_din = tmp_1351_reg_551.read();
}

void compute_pro::thread_result_c_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_453_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, result_c_V_full_n.read()))) {
        result_c_V_write = ap_const_logic_1;
    } else {
        result_c_V_write = ap_const_logic_0;
    }
}

void compute_pro::thread_result_n_V_din() {
    result_n_V_din = tmp_1349_reg_578.read();
}

void compute_pro::thread_result_n_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_453_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, result_n_V_full_n.read()))) {
        result_n_V_write = ap_const_logic_1;
    } else {
        result_n_V_write = ap_const_logic_0;
    }
}

void compute_pro::thread_result_r_V_din() {
    result_r_V_din = tmp_1350_reg_543.read();
}

void compute_pro::thread_result_r_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_453_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, result_r_V_full_n.read()))) {
        result_r_V_write = ap_const_logic_1;
    } else {
        result_r_V_write = ap_const_logic_0;
    }
}

void compute_pro::thread_tc_1_fu_527_p2() {
    tc_1_fu_527_p2 = (!tc_reg_255.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(tc_reg_255.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void compute_pro::thread_tc_cast_fu_518_p1() {
    tc_cast_fu_518_p1 = esl_zext<32,4>(tc_reg_255.read());
}

void compute_pro::thread_tmp_10_fu_393_p2() {
    tmp_10_fu_393_p2 = (!block_cnt.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(block_cnt.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void compute_pro::thread_tmp_11_fu_405_p2() {
    tmp_11_fu_405_p2 = (!tmp_1350_reg_543.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_1350_reg_543.read()) < sc_bigint<32>(ap_const_lv32_1));
}

void compute_pro::thread_tmp_12_fu_410_p2() {
    tmp_12_fu_410_p2 = (!tmp_1351_reg_551.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_1351_reg_551.read()) < sc_bigint<32>(ap_const_lv32_1));
}

void compute_pro::thread_tmp_1352_fu_493_p1() {
    tmp_1352_fu_493_p1 =  (sc_lv<1>) (data_buffer_V_dout.read());
}

void compute_pro::thread_tmp_15_fu_421_p2() {
    tmp_15_fu_421_p2 = (!tmp_1350_reg_543.read().is_01() || !rLoops_reg_559.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1350_reg_543.read()) + sc_biguint<32>(rLoops_reg_559.read()));
}

void compute_pro::thread_tmp_16_fu_426_p2() {
    tmp_16_fu_426_p2 = (!tmp_1351_reg_551.read().is_01() || !cLoops_reg_566.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1351_reg_551.read()) + sc_biguint<32>(cLoops_reg_566.read()));
}

void compute_pro::thread_tmp_17_fu_453_p2() {
    tmp_17_fu_453_p2 = (!tn_cast_fu_449_p1.read().is_01() || !nLoops_reg_584.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tn_cast_fu_449_p1.read()) < sc_bigint<32>(nLoops_reg_584.read()));
}

void compute_pro::thread_tmp_21_fu_464_p1() {
    tmp_21_fu_464_p1 = esl_zext<64,4>(tn_reg_208.read());
}

void compute_pro::thread_tmp_22_fu_502_p2() {
    tmp_22_fu_502_p2 = (!tr_cast_fu_498_p1.read().is_01() || !rLoops_reg_559.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tr_cast_fu_498_p1.read()) < sc_bigint<32>(rLoops_reg_559.read()));
}

void compute_pro::thread_tmp_24_fu_513_p1() {
    tmp_24_fu_513_p1 = esl_zext<64,4>(tn_reg_208.read());
}

void compute_pro::thread_tmp_26_fu_522_p2() {
    tmp_26_fu_522_p2 = (!tc_cast_fu_518_p1.read().is_01() || !cLoops_reg_566.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tc_cast_fu_518_p1.read()) < sc_bigint<32>(cLoops_reg_566.read()));
}

void compute_pro::thread_tmp_3_fu_379_p2() {
    tmp_3_fu_379_p2 = (!tmp_s_fu_374_p2.read().is_01() || !ap_const_lv32_8.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_s_fu_374_p2.read()) > sc_bigint<32>(ap_const_lv32_8));
}

void compute_pro::thread_tmp_4_fu_332_p2() {
    tmp_4_fu_332_p2 = (!ap_const_lv32_10.is_01() || !tmp_1350_reg_543.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_10) - sc_biguint<32>(tmp_1350_reg_543.read()));
}

void compute_pro::thread_tmp_5_fu_337_p2() {
    tmp_5_fu_337_p2 = (!tmp_4_fu_332_p2.read().is_01() || !ap_const_lv32_8.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_4_fu_332_p2.read()) > sc_bigint<32>(ap_const_lv32_8));
}

void compute_pro::thread_tmp_6_fu_351_p2() {
    tmp_6_fu_351_p2 = (!ap_const_lv32_10.is_01() || !tmp_1351_reg_551.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_10) - sc_biguint<32>(tmp_1351_reg_551.read()));
}

void compute_pro::thread_tmp_7_fu_356_p2() {
    tmp_7_fu_356_p2 = (!tmp_6_fu_351_p2.read().is_01() || !ap_const_lv32_8.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_6_fu_351_p2.read()) > sc_bigint<32>(ap_const_lv32_8));
}

void compute_pro::thread_tmp_9_nbwritereq_fu_112_p3() {
    tmp_9_nbwritereq_fu_112_p3 =  (sc_lv<1>) (result_buffer_V_full_n.read());
}

void compute_pro::thread_tmp_nbreadreq_fu_104_p3() {
    tmp_nbreadreq_fu_104_p3 =  (sc_lv<1>) (data_buffer_V_empty_n.read());
}

void compute_pro::thread_tmp_s_fu_374_p2() {
    tmp_s_fu_374_p2 = (!ap_const_lv32_200.is_01() || !tmp_1349_reg_578.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_200) - sc_biguint<32>(tmp_1349_reg_578.read()));
}

void compute_pro::thread_tn_1_fu_458_p2() {
    tn_1_fu_458_p2 = (!tn_reg_208.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(tn_reg_208.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void compute_pro::thread_tn_cast_fu_449_p1() {
    tn_cast_fu_449_p1 = esl_zext<32,4>(tn_reg_208.read());
}

void compute_pro::thread_tr_1_fu_507_p2() {
    tr_1_fu_507_p2 = (!tr_reg_232.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(tr_reg_232.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void compute_pro::thread_tr_cast_fu_498_p1() {
    tr_cast_fu_498_p1 = esl_zext<32,4>(tr_reg_232.read());
}

void compute_pro::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && (esl_seteq<1,1,1>(tmp_9_nbwritereq_fu_112_p3.read(), ap_const_lv1_0) || 
  esl_seteq<1,1,1>(tmp_nbreadreq_fu_104_p3.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_453_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1352_fu_493_p1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_453_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1352_fu_493_p1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_22_fu_502_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state30;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_26_fu_522_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, brmerge_reg_613.read()))) {
                ap_NS_fsm = ap_ST_fsm_state54;
            } else {
                ap_NS_fsm = ap_ST_fsm_state40;
            }
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state50;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_fsm_state51;
            break;
        case 1125899906842624 : 
            ap_NS_fsm = ap_ST_fsm_state52;
            break;
        case 2251799813685248 : 
            ap_NS_fsm = ap_ST_fsm_state53;
            break;
        case 4503599627370496 : 
            ap_NS_fsm = ap_ST_fsm_state54;
            break;
        case 9007199254740992 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<54>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

