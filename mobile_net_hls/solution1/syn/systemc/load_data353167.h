// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _load_data353167_HH_
#define _load_data353167_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct load_data353167 : public sc_module {
    // Port declarations 80
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_out< sc_logic > m_axi_inputs_AWVALID;
    sc_in< sc_logic > m_axi_inputs_AWREADY;
    sc_out< sc_lv<32> > m_axi_inputs_AWADDR;
    sc_out< sc_lv<1> > m_axi_inputs_AWID;
    sc_out< sc_lv<32> > m_axi_inputs_AWLEN;
    sc_out< sc_lv<3> > m_axi_inputs_AWSIZE;
    sc_out< sc_lv<2> > m_axi_inputs_AWBURST;
    sc_out< sc_lv<2> > m_axi_inputs_AWLOCK;
    sc_out< sc_lv<4> > m_axi_inputs_AWCACHE;
    sc_out< sc_lv<3> > m_axi_inputs_AWPROT;
    sc_out< sc_lv<4> > m_axi_inputs_AWQOS;
    sc_out< sc_lv<4> > m_axi_inputs_AWREGION;
    sc_out< sc_lv<1> > m_axi_inputs_AWUSER;
    sc_out< sc_logic > m_axi_inputs_WVALID;
    sc_in< sc_logic > m_axi_inputs_WREADY;
    sc_out< sc_lv<16> > m_axi_inputs_WDATA;
    sc_out< sc_lv<2> > m_axi_inputs_WSTRB;
    sc_out< sc_logic > m_axi_inputs_WLAST;
    sc_out< sc_lv<1> > m_axi_inputs_WID;
    sc_out< sc_lv<1> > m_axi_inputs_WUSER;
    sc_out< sc_logic > m_axi_inputs_ARVALID;
    sc_in< sc_logic > m_axi_inputs_ARREADY;
    sc_out< sc_lv<32> > m_axi_inputs_ARADDR;
    sc_out< sc_lv<1> > m_axi_inputs_ARID;
    sc_out< sc_lv<32> > m_axi_inputs_ARLEN;
    sc_out< sc_lv<3> > m_axi_inputs_ARSIZE;
    sc_out< sc_lv<2> > m_axi_inputs_ARBURST;
    sc_out< sc_lv<2> > m_axi_inputs_ARLOCK;
    sc_out< sc_lv<4> > m_axi_inputs_ARCACHE;
    sc_out< sc_lv<3> > m_axi_inputs_ARPROT;
    sc_out< sc_lv<4> > m_axi_inputs_ARQOS;
    sc_out< sc_lv<4> > m_axi_inputs_ARREGION;
    sc_out< sc_lv<1> > m_axi_inputs_ARUSER;
    sc_in< sc_logic > m_axi_inputs_RVALID;
    sc_out< sc_logic > m_axi_inputs_RREADY;
    sc_in< sc_lv<16> > m_axi_inputs_RDATA;
    sc_in< sc_logic > m_axi_inputs_RLAST;
    sc_in< sc_lv<1> > m_axi_inputs_RID;
    sc_in< sc_lv<1> > m_axi_inputs_RUSER;
    sc_in< sc_lv<2> > m_axi_inputs_RRESP;
    sc_in< sc_logic > m_axi_inputs_BVALID;
    sc_out< sc_logic > m_axi_inputs_BREADY;
    sc_in< sc_lv<2> > m_axi_inputs_BRESP;
    sc_in< sc_lv<1> > m_axi_inputs_BID;
    sc_in< sc_lv<1> > m_axi_inputs_BUSER;
    sc_in< sc_lv<31> > inputs_offset;
    sc_in< sc_lv<18> > inputs_offset1;
    sc_out< sc_lv<16> > input_buffer_V_din;
    sc_in< sc_logic > input_buffer_V_full_n;
    sc_out< sc_logic > input_buffer_V_write;
    sc_out< sc_logic > data_buffer_V_din;
    sc_in< sc_logic > data_buffer_V_full_n;
    sc_out< sc_logic > data_buffer_V_write;
    sc_out< sc_lv<32> > data_n_V_din;
    sc_in< sc_logic > data_n_V_full_n;
    sc_out< sc_logic > data_n_V_write;
    sc_out< sc_lv<32> > data_r_V_din;
    sc_in< sc_logic > data_r_V_full_n;
    sc_out< sc_logic > data_r_V_write;
    sc_out< sc_lv<32> > data_c_V_din;
    sc_in< sc_logic > data_c_V_full_n;
    sc_out< sc_logic > data_c_V_write;
    sc_in< sc_lv<10> > outputs_offset2;
    sc_out< sc_lv<10> > outputs_offset_c_din;
    sc_in< sc_logic > outputs_offset_c_full_n;
    sc_out< sc_logic > outputs_offset_c_write;
    sc_in< sc_lv<31> > outputs_offset;
    sc_out< sc_lv<31> > outputs_offset_out_din;
    sc_in< sc_logic > outputs_offset_out_full_n;
    sc_out< sc_logic > outputs_offset_out_write;


    // Module declarations
    load_data353167(sc_module_name name);
    SC_HAS_PROCESS(load_data353167);

    ~load_data353167();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > inputs_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > inputs_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_i_i_i_reg_761;
    sc_signal< sc_logic > outputs_offset_c_blk_n;
    sc_signal< sc_logic > outputs_offset_out_blk_n;
    sc_signal< sc_lv<4> > i_0_i_i_i_i_i_i_reg_302;
    sc_signal< sc_lv<32> > inputs_offset_cast_i_fu_313_p1;
    sc_signal< sc_lv<32> > inputs_offset_cast_i_reg_637;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<19> > inputs_offset_cast_i_1_fu_317_p1;
    sc_signal< sc_lv<19> > inputs_offset_cast_i_1_reg_642;
    sc_signal< sc_lv<32> > tmp_305_fu_321_p1;
    sc_signal< sc_lv<32> > tmp_305_reg_647;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > nLoops_fu_349_p3;
    sc_signal< sc_lv<4> > nLoops_reg_655;
    sc_signal< sc_lv<1> > tmp_fu_325_p3;
    sc_signal< sc_lv<1> > tmp_295_reg_660;
    sc_signal< sc_lv<32> > tmp_307_fu_375_p1;
    sc_signal< sc_lv<32> > tmp_307_reg_665;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > rLoops_fu_403_p3;
    sc_signal< sc_lv<4> > rLoops_reg_673;
    sc_signal< sc_lv<1> > tmp_296_fu_379_p3;
    sc_signal< sc_lv<9> > tmp_298_fu_421_p1;
    sc_signal< sc_lv<9> > tmp_298_reg_678;
    sc_signal< sc_lv<1> > tmp_299_reg_683;
    sc_signal< sc_lv<10> > n_fu_433_p2;
    sc_signal< sc_lv<32> > tmp_309_fu_439_p1;
    sc_signal< sc_lv<32> > tmp_309_reg_693;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > r_fu_451_p2;
    sc_signal< sc_lv<1> > tmp_300_fu_443_p3;
    sc_signal< sc_lv<4> > cLoops_fu_473_p3;
    sc_signal< sc_lv<4> > cLoops_reg_709;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > tmp_301_nbwritereq_fu_180_p3;
    sc_signal< sc_lv<5> > cLoops_cast_i_i_i_i_s_fu_481_p1;
    sc_signal< sc_lv<5> > cLoops_cast_i_i_i_i_s_reg_714;
    sc_signal< sc_lv<18> > base_addr_cast_i_i_i_fu_504_p1;
    sc_signal< sc_lv<32> > tmp_40_i_i_i_fu_508_p1;
    sc_signal< sc_lv<32> > tmp_40_i_i_i_reg_724;
    sc_signal< sc_lv<4> > tn_fu_517_p2;
    sc_signal< sc_lv<4> > tn_reg_732;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<5> > c_fu_553_p2;
    sc_signal< sc_lv<1> > exitcond2_i_i_i_fu_512_p2;
    sc_signal< sc_lv<4> > tr_fu_564_p2;
    sc_signal< sc_lv<4> > tr_reg_745;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > inputs_addr_reg_750;
    sc_signal< sc_lv<1> > exitcond1_i_i_i_fu_559_p2;
    sc_signal< sc_lv<18> > base_addr_d1_13_fu_620_p2;
    sc_signal< sc_lv<1> > exitcond_i_i_i_fu_626_p2;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_i_i_i_reg_761_pp0_iter1_reg;
    sc_signal< sc_lv<4> > i_fu_631_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<16> > tmp_312_reg_770;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state15;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<10> > tmp_304_reg_234;
    sc_signal< sc_lv<5> > tmp_306_reg_246;
    sc_signal< sc_lv<5> > tmp_308_reg_258;
    sc_signal< sc_lv<18> > base_addr_d1_0_i_i_i_reg_270;
    sc_signal< sc_lv<4> > tn_0_i_i_i_i_i_i_reg_280;
    sc_signal< sc_lv<4> > tr_0_i_i_i_i_i_i_reg_291;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<64> > sum_cast_i_i_i_fu_610_p1;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_inputs_ARREADY;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_inputs_ARREADY;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<10> > tmp_i_i_i_i_i_fu_333_p2;
    sc_signal< sc_lv<1> > tmp_15_i_i_i_i_i_fu_343_p2;
    sc_signal< sc_lv<4> > tmp_294_fu_339_p1;
    sc_signal< sc_lv<10> > nLoops_cast10_i_i_i_s_fu_357_p1;
    sc_signal< sc_lv<10> > tmp_16_i_i_i_i_i_fu_361_p2;
    sc_signal< sc_lv<5> > tmp_18_i_i_i_i_i_fu_387_p2;
    sc_signal< sc_lv<1> > tmp_19_i_i_i_i_i_fu_397_p2;
    sc_signal< sc_lv<4> > tmp_297_fu_393_p1;
    sc_signal< sc_lv<5> > rLoops_cast_i_i_i_i_s_fu_411_p1;
    sc_signal< sc_lv<5> > tmp_20_i_i_i_i_i_fu_415_p2;
    sc_signal< sc_lv<5> > tmp_23_i_i_i_i_i_fu_457_p2;
    sc_signal< sc_lv<1> > tmp_24_i_i_i_i_i_fu_467_p2;
    sc_signal< sc_lv<4> > tmp_302_fu_463_p1;
    sc_signal< sc_lv<3> > tmp_22_i_i_i_fu_485_p4;
    sc_signal< sc_lv<17> > base_addr_fu_495_p4;
    sc_signal< sc_lv<5> > tmp_31_i_i_i_i_i_fu_523_p2;
    sc_signal< sc_lv<1> > tmp_303_fu_528_p3;
    sc_signal< sc_lv<1> > tmp4_i_i_i_fu_536_p2;
    sc_signal< sc_lv<1> > sel_tmp1_i_i_i_fu_541_p2;
    sc_signal< sc_lv<3> > tmp_311_fu_570_p1;
    sc_signal< sc_lv<7> > tmp_33_i_i_i_fu_574_p3;
    sc_signal< sc_lv<18> > tmp_34_i_i_i_fu_582_p1;
    sc_signal< sc_lv<18> > tmp_35_i_i_i_fu_586_p2;
    sc_signal< sc_lv<19> > tmp_36_i_i_i_fu_592_p1;
    sc_signal< sc_lv<19> > tmp_37_i_i_i_fu_596_p2;
    sc_signal< sc_lv<32> > tmp_38_cast_i_i_i_fu_601_p1;
    sc_signal< sc_lv<32> > sum_i_i_i_fu_605_p2;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_fsm_state1;
    static const sc_lv<16> ap_ST_fsm_state2;
    static const sc_lv<16> ap_ST_fsm_state3;
    static const sc_lv<16> ap_ST_fsm_state4;
    static const sc_lv<16> ap_ST_fsm_state5;
    static const sc_lv<16> ap_ST_fsm_state6;
    static const sc_lv<16> ap_ST_fsm_state7;
    static const sc_lv<16> ap_ST_fsm_state8;
    static const sc_lv<16> ap_ST_fsm_state9;
    static const sc_lv<16> ap_ST_fsm_state10;
    static const sc_lv<16> ap_ST_fsm_state11;
    static const sc_lv<16> ap_ST_fsm_state12;
    static const sc_lv<16> ap_ST_fsm_state13;
    static const sc_lv<16> ap_ST_fsm_state14;
    static const sc_lv<16> ap_ST_fsm_pp0_stage0;
    static const sc_lv<16> ap_ST_fsm_state18;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_E;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<10> ap_const_lv10_8;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<18> ap_const_lv18_100;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state15_pp0_stage0_iter0();
    void thread_ap_block_state16_pp0_stage0_iter1();
    void thread_ap_block_state17_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state15();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ap_sig_ioackin_m_axi_inputs_ARREADY();
    void thread_base_addr_cast_i_i_i_fu_504_p1();
    void thread_base_addr_d1_13_fu_620_p2();
    void thread_base_addr_fu_495_p4();
    void thread_cLoops_cast_i_i_i_i_s_fu_481_p1();
    void thread_cLoops_fu_473_p3();
    void thread_c_fu_553_p2();
    void thread_data_buffer_V_din();
    void thread_data_buffer_V_write();
    void thread_data_c_V_din();
    void thread_data_c_V_write();
    void thread_data_n_V_din();
    void thread_data_n_V_write();
    void thread_data_r_V_din();
    void thread_data_r_V_write();
    void thread_exitcond1_i_i_i_fu_559_p2();
    void thread_exitcond2_i_i_i_fu_512_p2();
    void thread_exitcond_i_i_i_fu_626_p2();
    void thread_i_fu_631_p2();
    void thread_input_buffer_V_din();
    void thread_input_buffer_V_write();
    void thread_inputs_blk_n_AR();
    void thread_inputs_blk_n_R();
    void thread_inputs_offset_cast_i_1_fu_317_p1();
    void thread_inputs_offset_cast_i_fu_313_p1();
    void thread_internal_ap_ready();
    void thread_m_axi_inputs_ARADDR();
    void thread_m_axi_inputs_ARBURST();
    void thread_m_axi_inputs_ARCACHE();
    void thread_m_axi_inputs_ARID();
    void thread_m_axi_inputs_ARLEN();
    void thread_m_axi_inputs_ARLOCK();
    void thread_m_axi_inputs_ARPROT();
    void thread_m_axi_inputs_ARQOS();
    void thread_m_axi_inputs_ARREGION();
    void thread_m_axi_inputs_ARSIZE();
    void thread_m_axi_inputs_ARUSER();
    void thread_m_axi_inputs_ARVALID();
    void thread_m_axi_inputs_AWADDR();
    void thread_m_axi_inputs_AWBURST();
    void thread_m_axi_inputs_AWCACHE();
    void thread_m_axi_inputs_AWID();
    void thread_m_axi_inputs_AWLEN();
    void thread_m_axi_inputs_AWLOCK();
    void thread_m_axi_inputs_AWPROT();
    void thread_m_axi_inputs_AWQOS();
    void thread_m_axi_inputs_AWREGION();
    void thread_m_axi_inputs_AWSIZE();
    void thread_m_axi_inputs_AWUSER();
    void thread_m_axi_inputs_AWVALID();
    void thread_m_axi_inputs_BREADY();
    void thread_m_axi_inputs_RREADY();
    void thread_m_axi_inputs_WDATA();
    void thread_m_axi_inputs_WID();
    void thread_m_axi_inputs_WLAST();
    void thread_m_axi_inputs_WSTRB();
    void thread_m_axi_inputs_WUSER();
    void thread_m_axi_inputs_WVALID();
    void thread_nLoops_cast10_i_i_i_s_fu_357_p1();
    void thread_nLoops_fu_349_p3();
    void thread_n_fu_433_p2();
    void thread_outputs_offset_c_blk_n();
    void thread_outputs_offset_c_din();
    void thread_outputs_offset_c_write();
    void thread_outputs_offset_out_blk_n();
    void thread_outputs_offset_out_din();
    void thread_outputs_offset_out_write();
    void thread_rLoops_cast_i_i_i_i_s_fu_411_p1();
    void thread_rLoops_fu_403_p3();
    void thread_r_fu_451_p2();
    void thread_real_start();
    void thread_sel_tmp1_i_i_i_fu_541_p2();
    void thread_start_out();
    void thread_start_write();
    void thread_sum_cast_i_i_i_fu_610_p1();
    void thread_sum_i_i_i_fu_605_p2();
    void thread_tmp4_i_i_i_fu_536_p2();
    void thread_tmp_15_i_i_i_i_i_fu_343_p2();
    void thread_tmp_16_i_i_i_i_i_fu_361_p2();
    void thread_tmp_18_i_i_i_i_i_fu_387_p2();
    void thread_tmp_19_i_i_i_i_i_fu_397_p2();
    void thread_tmp_20_i_i_i_i_i_fu_415_p2();
    void thread_tmp_22_i_i_i_fu_485_p4();
    void thread_tmp_23_i_i_i_i_i_fu_457_p2();
    void thread_tmp_24_i_i_i_i_i_fu_467_p2();
    void thread_tmp_294_fu_339_p1();
    void thread_tmp_296_fu_379_p3();
    void thread_tmp_297_fu_393_p1();
    void thread_tmp_298_fu_421_p1();
    void thread_tmp_300_fu_443_p3();
    void thread_tmp_301_nbwritereq_fu_180_p3();
    void thread_tmp_302_fu_463_p1();
    void thread_tmp_303_fu_528_p3();
    void thread_tmp_305_fu_321_p1();
    void thread_tmp_307_fu_375_p1();
    void thread_tmp_309_fu_439_p1();
    void thread_tmp_311_fu_570_p1();
    void thread_tmp_31_i_i_i_i_i_fu_523_p2();
    void thread_tmp_33_i_i_i_fu_574_p3();
    void thread_tmp_34_i_i_i_fu_582_p1();
    void thread_tmp_35_i_i_i_fu_586_p2();
    void thread_tmp_36_i_i_i_fu_592_p1();
    void thread_tmp_37_i_i_i_fu_596_p2();
    void thread_tmp_38_cast_i_i_i_fu_601_p1();
    void thread_tmp_40_i_i_i_fu_508_p1();
    void thread_tmp_fu_325_p3();
    void thread_tmp_i_i_i_i_i_fu_333_p2();
    void thread_tn_fu_517_p2();
    void thread_tr_fu_564_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
