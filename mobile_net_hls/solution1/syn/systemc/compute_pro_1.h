// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _compute_pro_1_HH_
#define _compute_pro_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "moblie_net_hadd_1bkb.h"
#include "moblie_net_hmul_1cud.h"
#include "compute_pro_1_inpcmv.h"
#include "compute_pro_1_outcnw.h"

namespace ap_rtl {

struct compute_pro_1 : public sc_module {
    // Port declarations 37
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > input_buffer_V_dout;
    sc_in< sc_logic > input_buffer_V_empty_n;
    sc_out< sc_logic > input_buffer_V_read;
    sc_in< sc_lv<16> > weight_buffer_V_dout;
    sc_in< sc_logic > weight_buffer_V_empty_n;
    sc_out< sc_logic > weight_buffer_V_read;
    sc_in< sc_lv<16> > beta_buffer_V_dout;
    sc_in< sc_logic > beta_buffer_V_empty_n;
    sc_out< sc_logic > beta_buffer_V_read;
    sc_out< sc_lv<16> > output_buffer_V_din;
    sc_in< sc_logic > output_buffer_V_full_n;
    sc_out< sc_logic > output_buffer_V_write;
    sc_in< sc_logic > data_buffer_V_dout;
    sc_in< sc_logic > data_buffer_V_empty_n;
    sc_out< sc_logic > data_buffer_V_read;
    sc_out< sc_logic > result_buffer_V_din;
    sc_in< sc_logic > result_buffer_V_full_n;
    sc_out< sc_logic > result_buffer_V_write;
    sc_in< sc_lv<32> > data_m_V_dout;
    sc_in< sc_logic > data_m_V_empty_n;
    sc_out< sc_logic > data_m_V_read;
    sc_in< sc_lv<32> > data_n_V_dout;
    sc_in< sc_logic > data_n_V_empty_n;
    sc_out< sc_logic > data_n_V_read;
    sc_out< sc_lv<32> > result_m_V_din;
    sc_in< sc_logic > result_m_V_full_n;
    sc_out< sc_logic > result_m_V_write;
    sc_out< sc_lv<32> > result_n_V_din;
    sc_in< sc_logic > result_n_V_full_n;
    sc_out< sc_logic > result_n_V_write;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    compute_pro_1(sc_module_name name);
    SC_HAS_PROCESS(compute_pro_1);

    ~compute_pro_1();

    sc_trace_file* mVcdFile;

    compute_pro_1_inpcmv* input_regs_U;
    compute_pro_1_outcnw* output_temp_U;
    moblie_net_hadd_1bkb<1,4,16,16,16>* moblie_net_hadd_1bkb_U2945;
    moblie_net_hmul_1cud<1,4,16,16,16>* moblie_net_hmul_1cud_U2946;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<26> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > tmp_1339_reg_437;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_110_p3;
    sc_signal< sc_lv<1> > tmp_35_nbwritereq_fu_118_p3;
    sc_signal< sc_lv<32> > tmp_1338_reg_445;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > mLoops_fu_304_p3;
    sc_signal< sc_lv<32> > mLoops_reg_450;
    sc_signal< sc_lv<32> > nLoops_fu_323_p3;
    sc_signal< sc_lv<32> > nLoops_reg_455;
    sc_signal< sc_lv<1> > tmp_39_fu_331_p2;
    sc_signal< sc_lv<1> > tmp_39_reg_460;
    sc_signal< sc_lv<1> > icmp_fu_351_p2;
    sc_signal< sc_lv<1> > icmp_reg_464;
    sc_signal< sc_lv<31> > tm_2_fu_366_p2;
    sc_signal< sc_lv<31> > tm_2_reg_471;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > tmp_44_fu_372_p2;
    sc_signal< sc_lv<1> > tmp_44_reg_476;
    sc_signal< sc_lv<1> > tmp_42_fu_361_p2;
    sc_signal< sc_lv<6> > tn_2_fu_392_p2;
    sc_signal< sc_lv<6> > tn_2_reg_486;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > output_temp_addr_reg_491;
    sc_signal< sc_lv<1> > tmp_45_fu_387_p2;
    sc_signal< sc_lv<16> > tmp_1342_reg_497;
    sc_signal< sc_lv<16> > tmp_1341_reg_502;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<16> > input_regs_q0;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<16> > grp_fu_277_p2;
    sc_signal< sc_lv<16> > mul_dat_reg_517;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<16> > grp_fu_272_p2;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<16> > output_temp_q0;
    sc_signal< sc_lv<16> > output_temp_load_reg_527;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<16> > tmp_51_reg_532;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<16> > tmp_49_reg_538;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<5> > input_regs_address0;
    sc_signal< sc_logic > input_regs_ce0;
    sc_signal< sc_lv<5> > input_regs_address1;
    sc_signal< sc_logic > input_regs_ce1;
    sc_signal< sc_logic > input_regs_we1;
    sc_signal< sc_lv<2> > output_temp_address0;
    sc_signal< sc_logic > output_temp_ce0;
    sc_signal< sc_lv<2> > output_temp_address1;
    sc_signal< sc_logic > output_temp_ce1;
    sc_signal< sc_logic > output_temp_we1;
    sc_signal< sc_lv<16> > output_temp_d1;
    sc_signal< sc_lv<31> > tm_reg_236;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<16> > mac_dat_reg_248;
    sc_signal< sc_lv<6> > tn_reg_260;
    sc_signal< sc_lv<64> > tmp_47_fu_398_p1;
    sc_signal< sc_lv<64> > tmp_50_fu_408_p1;
    sc_signal< sc_lv<64> > tmp_48_fu_421_p1;
    sc_signal< sc_lv<64> > tmp_52_fu_426_p1;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_lv<1> > tmp_1340_fu_378_p1;
    sc_signal< sc_lv<16> > grp_fu_272_p0;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<1> > tmp_1336_fu_290_p3;
    sc_signal< sc_lv<32> > tmp_36_fu_298_p2;
    sc_signal< sc_lv<32> > tmp_37_fu_312_p2;
    sc_signal< sc_lv<1> > tmp_38_fu_317_p2;
    sc_signal< sc_lv<32> > tmp_40_fu_336_p2;
    sc_signal< sc_lv<23> > tmp_1337_fu_341_p4;
    sc_signal< sc_lv<32> > tm_cast_fu_357_p1;
    sc_signal< sc_lv<32> > tn_cast_fu_383_p1;
    sc_signal< sc_lv<26> > ap_NS_fsm;
    sc_signal< bool > ap_block_state1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<26> ap_ST_fsm_state1;
    static const sc_lv<26> ap_ST_fsm_state2;
    static const sc_lv<26> ap_ST_fsm_state3;
    static const sc_lv<26> ap_ST_fsm_state4;
    static const sc_lv<26> ap_ST_fsm_state5;
    static const sc_lv<26> ap_ST_fsm_state6;
    static const sc_lv<26> ap_ST_fsm_state7;
    static const sc_lv<26> ap_ST_fsm_state8;
    static const sc_lv<26> ap_ST_fsm_state9;
    static const sc_lv<26> ap_ST_fsm_state10;
    static const sc_lv<26> ap_ST_fsm_state11;
    static const sc_lv<26> ap_ST_fsm_state12;
    static const sc_lv<26> ap_ST_fsm_state13;
    static const sc_lv<26> ap_ST_fsm_state14;
    static const sc_lv<26> ap_ST_fsm_state15;
    static const sc_lv<26> ap_ST_fsm_state16;
    static const sc_lv<26> ap_ST_fsm_state17;
    static const sc_lv<26> ap_ST_fsm_state18;
    static const sc_lv<26> ap_ST_fsm_state19;
    static const sc_lv<26> ap_ST_fsm_state20;
    static const sc_lv<26> ap_ST_fsm_state21;
    static const sc_lv<26> ap_ST_fsm_state22;
    static const sc_lv<26> ap_ST_fsm_state23;
    static const sc_lv<26> ap_ST_fsm_state24;
    static const sc_lv<26> ap_ST_fsm_state25;
    static const sc_lv<26> ap_ST_fsm_state26;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_200;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<6> ap_const_lv6_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_beta_buffer_V_read();
    void thread_data_buffer_V_read();
    void thread_data_m_V_read();
    void thread_data_n_V_read();
    void thread_grp_fu_272_p0();
    void thread_icmp_fu_351_p2();
    void thread_input_buffer_V_read();
    void thread_input_regs_address0();
    void thread_input_regs_address1();
    void thread_input_regs_ce0();
    void thread_input_regs_ce1();
    void thread_input_regs_we1();
    void thread_mLoops_fu_304_p3();
    void thread_nLoops_fu_323_p3();
    void thread_output_buffer_V_din();
    void thread_output_buffer_V_write();
    void thread_output_temp_address0();
    void thread_output_temp_address1();
    void thread_output_temp_ce0();
    void thread_output_temp_ce1();
    void thread_output_temp_d1();
    void thread_output_temp_we1();
    void thread_result_buffer_V_din();
    void thread_result_buffer_V_write();
    void thread_result_m_V_din();
    void thread_result_m_V_write();
    void thread_result_n_V_din();
    void thread_result_n_V_write();
    void thread_tm_2_fu_366_p2();
    void thread_tm_cast_fu_357_p1();
    void thread_tmp_1336_fu_290_p3();
    void thread_tmp_1337_fu_341_p4();
    void thread_tmp_1340_fu_378_p1();
    void thread_tmp_35_nbwritereq_fu_118_p3();
    void thread_tmp_36_fu_298_p2();
    void thread_tmp_37_fu_312_p2();
    void thread_tmp_38_fu_317_p2();
    void thread_tmp_39_fu_331_p2();
    void thread_tmp_40_fu_336_p2();
    void thread_tmp_42_fu_361_p2();
    void thread_tmp_44_fu_372_p2();
    void thread_tmp_45_fu_387_p2();
    void thread_tmp_47_fu_398_p1();
    void thread_tmp_48_fu_421_p1();
    void thread_tmp_50_fu_408_p1();
    void thread_tmp_52_fu_426_p1();
    void thread_tmp_nbreadreq_fu_110_p3();
    void thread_tn_2_fu_392_p2();
    void thread_tn_cast_fu_383_p1();
    void thread_weight_buffer_V_read();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
