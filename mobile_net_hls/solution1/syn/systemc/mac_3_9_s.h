// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _mac_3_9_s_HH_
#define _mac_3_9_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "moblie_net_hadd_1bkb.h"
#include "moblie_net_hmul_1cud.h"

namespace ap_rtl {

struct mac_3_9_s : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<16> > input_regs_0_read;
    sc_in< sc_lv<16> > input_regs_1_read;
    sc_in< sc_lv<16> > input_regs_2_read;
    sc_in< sc_lv<16> > input_regs_3_read;
    sc_in< sc_lv<16> > input_regs_4_read;
    sc_in< sc_lv<16> > input_regs_5_read;
    sc_in< sc_lv<16> > input_regs_6_read;
    sc_in< sc_lv<16> > input_regs_7_read;
    sc_in< sc_lv<16> > input_regs_8_read;
    sc_in< sc_lv<16> > p_read;
    sc_in< sc_lv<16> > p_read1;
    sc_in< sc_lv<16> > p_read2;
    sc_in< sc_lv<16> > p_read3;
    sc_in< sc_lv<16> > p_read4;
    sc_in< sc_lv<16> > p_read5;
    sc_in< sc_lv<16> > p_read6;
    sc_in< sc_lv<16> > p_read7;
    sc_in< sc_lv<16> > p_read8;
    sc_out< sc_lv<16> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    mac_3_9_s(sc_module_name name);
    SC_HAS_PROCESS(mac_3_9_s);

    ~mac_3_9_s();

    sc_trace_file* mVcdFile;

    moblie_net_hadd_1bkb<1,4,16,16,16>* moblie_net_hadd_1bkb_U105;
    moblie_net_hadd_1bkb<1,4,16,16,16>* moblie_net_hadd_1bkb_U106;
    moblie_net_hadd_1bkb<1,4,16,16,16>* moblie_net_hadd_1bkb_U107;
    moblie_net_hadd_1bkb<1,4,16,16,16>* moblie_net_hadd_1bkb_U108;
    moblie_net_hadd_1bkb<1,4,16,16,16>* moblie_net_hadd_1bkb_U109;
    moblie_net_hadd_1bkb<1,4,16,16,16>* moblie_net_hadd_1bkb_U110;
    moblie_net_hadd_1bkb<1,4,16,16,16>* moblie_net_hadd_1bkb_U111;
    moblie_net_hadd_1bkb<1,4,16,16,16>* moblie_net_hadd_1bkb_U112;
    moblie_net_hmul_1cud<1,4,16,16,16>* moblie_net_hmul_1cud_U113;
    moblie_net_hmul_1cud<1,4,16,16,16>* moblie_net_hmul_1cud_U114;
    moblie_net_hmul_1cud<1,4,16,16,16>* moblie_net_hmul_1cud_U115;
    moblie_net_hmul_1cud<1,4,16,16,16>* moblie_net_hmul_1cud_U116;
    moblie_net_hmul_1cud<1,4,16,16,16>* moblie_net_hmul_1cud_U117;
    moblie_net_hmul_1cud<1,4,16,16,16>* moblie_net_hmul_1cud_U118;
    moblie_net_hmul_1cud<1,4,16,16,16>* moblie_net_hmul_1cud_U119;
    moblie_net_hmul_1cud<1,4,16,16,16>* moblie_net_hmul_1cud_U120;
    moblie_net_hmul_1cud<1,4,16,16,16>* moblie_net_hmul_1cud_U121;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter14;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter15;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter16;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter17;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter18;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter19;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<16> > grp_fu_178_p2;
    sc_signal< sc_lv<16> > tmp_5_reg_322;
    sc_signal< sc_lv<16> > grp_fu_184_p2;
    sc_signal< sc_lv<16> > tmp_5_0_1_reg_327;
    sc_signal< sc_lv<16> > grp_fu_190_p2;
    sc_signal< sc_lv<16> > tmp_5_0_2_reg_332;
    sc_signal< sc_lv<16> > grp_fu_196_p2;
    sc_signal< sc_lv<16> > tmp_5_1_reg_337;
    sc_signal< sc_lv<16> > grp_fu_202_p2;
    sc_signal< sc_lv<16> > tmp_5_1_1_reg_342;
    sc_signal< sc_lv<16> > grp_fu_208_p2;
    sc_signal< sc_lv<16> > tmp_5_1_2_reg_347;
    sc_signal< sc_lv<16> > grp_fu_214_p2;
    sc_signal< sc_lv<16> > tmp_5_2_reg_352;
    sc_signal< sc_lv<16> > grp_fu_220_p2;
    sc_signal< sc_lv<16> > tmp_5_2_1_reg_357;
    sc_signal< sc_lv<16> > grp_fu_226_p2;
    sc_signal< sc_lv<16> > tmp_5_2_2_reg_362;
    sc_signal< sc_lv<16> > tmp_5_2_2_reg_362_pp0_iter4_reg;
    sc_signal< sc_lv<16> > tmp_5_2_2_reg_362_pp0_iter5_reg;
    sc_signal< sc_lv<16> > tmp_5_2_2_reg_362_pp0_iter6_reg;
    sc_signal< sc_lv<16> > tmp_5_2_2_reg_362_pp0_iter7_reg;
    sc_signal< sc_lv<16> > grp_fu_146_p2;
    sc_signal< sc_lv<16> > tmp9_reg_367;
    sc_signal< sc_lv<16> > grp_fu_150_p2;
    sc_signal< sc_lv<16> > tmp10_reg_372;
    sc_signal< sc_lv<16> > grp_fu_154_p2;
    sc_signal< sc_lv<16> > tmp12_reg_377;
    sc_signal< sc_lv<16> > tmp12_reg_377_pp0_iter8_reg;
    sc_signal< sc_lv<16> > tmp12_reg_377_pp0_iter9_reg;
    sc_signal< sc_lv<16> > tmp12_reg_377_pp0_iter10_reg;
    sc_signal< sc_lv<16> > tmp12_reg_377_pp0_iter11_reg;
    sc_signal< sc_lv<16> > grp_fu_158_p2;
    sc_signal< sc_lv<16> > tmp14_reg_382;
    sc_signal< sc_lv<16> > grp_fu_162_p2;
    sc_signal< sc_lv<16> > tmp_reg_387;
    sc_signal< sc_lv<16> > tmp_reg_387_pp0_iter12_reg;
    sc_signal< sc_lv<16> > tmp_reg_387_pp0_iter13_reg;
    sc_signal< sc_lv<16> > tmp_reg_387_pp0_iter14_reg;
    sc_signal< sc_lv<16> > tmp_reg_387_pp0_iter15_reg;
    sc_signal< sc_lv<16> > grp_fu_166_p2;
    sc_signal< sc_lv<16> > tmp13_reg_392;
    sc_signal< sc_lv<16> > grp_fu_170_p2;
    sc_signal< sc_lv<16> > tmp11_reg_397;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<16> > grp_fu_174_p2;
    sc_signal< sc_lv<16> > input_regs_0_read_int_reg;
    sc_signal< sc_lv<16> > input_regs_1_read_int_reg;
    sc_signal< sc_lv<16> > input_regs_2_read_int_reg;
    sc_signal< sc_lv<16> > input_regs_3_read_int_reg;
    sc_signal< sc_lv<16> > input_regs_4_read_int_reg;
    sc_signal< sc_lv<16> > input_regs_5_read_int_reg;
    sc_signal< sc_lv<16> > input_regs_6_read_int_reg;
    sc_signal< sc_lv<16> > input_regs_7_read_int_reg;
    sc_signal< sc_lv<16> > input_regs_8_read_int_reg;
    sc_signal< sc_lv<16> > p_read_int_reg;
    sc_signal< sc_lv<16> > p_read1_int_reg;
    sc_signal< sc_lv<16> > p_read2_int_reg;
    sc_signal< sc_lv<16> > p_read3_int_reg;
    sc_signal< sc_lv<16> > p_read4_int_reg;
    sc_signal< sc_lv<16> > p_read5_int_reg;
    sc_signal< sc_lv<16> > p_read6_int_reg;
    sc_signal< sc_lv<16> > p_read7_int_reg;
    sc_signal< sc_lv<16> > p_read8_int_reg;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_state10_pp0_stage0_iter9();
    void thread_ap_block_state11_pp0_stage0_iter10();
    void thread_ap_block_state12_pp0_stage0_iter11();
    void thread_ap_block_state13_pp0_stage0_iter12();
    void thread_ap_block_state14_pp0_stage0_iter13();
    void thread_ap_block_state15_pp0_stage0_iter14();
    void thread_ap_block_state16_pp0_stage0_iter15();
    void thread_ap_block_state17_pp0_stage0_iter16();
    void thread_ap_block_state18_pp0_stage0_iter17();
    void thread_ap_block_state19_pp0_stage0_iter18();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state20_pp0_stage0_iter19();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_block_state5_pp0_stage0_iter4();
    void thread_ap_block_state6_pp0_stage0_iter5();
    void thread_ap_block_state7_pp0_stage0_iter6();
    void thread_ap_block_state8_pp0_stage0_iter7();
    void thread_ap_block_state9_pp0_stage0_iter8();
    void thread_ap_return();
};

}

using namespace ap_rtl;

#endif
