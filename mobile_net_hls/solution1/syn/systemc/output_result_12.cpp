// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "output_result_12.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic output_result_12::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic output_result_12::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> output_result_12::ap_ST_fsm_state1 = "1";
const sc_lv<13> output_result_12::ap_ST_fsm_state2 = "10";
const sc_lv<13> output_result_12::ap_ST_fsm_state3 = "100";
const sc_lv<13> output_result_12::ap_ST_fsm_state4 = "1000";
const sc_lv<13> output_result_12::ap_ST_fsm_state5 = "10000";
const sc_lv<13> output_result_12::ap_ST_fsm_state6 = "100000";
const sc_lv<13> output_result_12::ap_ST_fsm_state7 = "1000000";
const sc_lv<13> output_result_12::ap_ST_fsm_pp0_stage0 = "10000000";
const sc_lv<13> output_result_12::ap_ST_fsm_state10 = "100000000";
const sc_lv<13> output_result_12::ap_ST_fsm_state11 = "1000000000";
const sc_lv<13> output_result_12::ap_ST_fsm_state12 = "10000000000";
const sc_lv<13> output_result_12::ap_ST_fsm_state13 = "100000000000";
const sc_lv<13> output_result_12::ap_ST_fsm_state14 = "1000000000000";
const sc_lv<32> output_result_12::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool output_result_12::ap_const_boolean_1 = true;
const sc_lv<1> output_result_12::ap_const_lv1_0 = "0";
const sc_lv<3> output_result_12::ap_const_lv3_0 = "000";
const sc_lv<2> output_result_12::ap_const_lv2_0 = "00";
const sc_lv<4> output_result_12::ap_const_lv4_0 = "0000";
const sc_lv<32> output_result_12::ap_const_lv32_6 = "110";
const sc_lv<32> output_result_12::ap_const_lv32_7 = "111";
const bool output_result_12::ap_const_boolean_0 = false;
const sc_lv<1> output_result_12::ap_const_lv1_1 = "1";
const sc_lv<32> output_result_12::ap_const_lv32_C = "1100";
const sc_lv<32> output_result_12::ap_const_lv32_4 = "100";
const sc_lv<32> output_result_12::ap_const_lv32_2 = "10";
const sc_lv<32> output_result_12::ap_const_lv32_3 = "11";
const sc_lv<32> output_result_12::ap_const_lv32_5 = "101";
const sc_lv<32> output_result_12::ap_const_lv32_8 = "1000";
const sc_lv<31> output_result_12::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<2> output_result_12::ap_const_lv2_3 = "11";
const sc_lv<32> output_result_12::ap_const_lv32_1F = "11111";
const sc_lv<32> output_result_12::ap_const_lv32_10 = "10000";
const sc_lv<32> output_result_12::ap_const_lv32_100 = "100000000";
const sc_lv<2> output_result_12::ap_const_lv2_1 = "1";
const sc_lv<31> output_result_12::ap_const_lv31_1 = "1";

output_result_12::output_result_12(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state9_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state9_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( outputs_offset_empty_n );
    sensitive << ( inputs_offset_c_empty_n );

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( cntl_V_full_n );
    sensitive << ( ap_predicate_op78_write_state5 );

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state9_io);
    sensitive << ( tmp_665_i_i_i_reg_534 );
    sensitive << ( ap_sig_ioackin_m_axi_outputs_WREADY );

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_259);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_condition_559);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_665_i_i_i_reg_534 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state8);
    sensitive << ( tmp_665_i_i_i_fu_435_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( cntl_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_662_i_i_i_fu_363_p2 );
    sensitive << ( tmp_236_fu_378_p1 );
    sensitive << ( ap_predicate_op78_write_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_tmp_124_load_i_i_reg_243);

    SC_METHOD(thread_ap_predicate_op78_write_state5);
    sensitive << ( tmp_662_i_i_i_fu_363_p2 );
    sensitive << ( tmp_236_fu_378_p1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( cntl_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_662_i_i_i_fu_363_p2 );
    sensitive << ( tmp_236_fu_378_p1 );
    sensitive << ( ap_predicate_op78_write_state5 );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_outputs_AWREADY);
    sensitive << ( m_axi_outputs_AWREADY );
    sensitive << ( ap_reg_ioackin_m_axi_outputs_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_outputs_WREADY);
    sensitive << ( m_axi_outputs_WREADY );
    sensitive << ( ap_reg_ioackin_m_axi_outputs_WREADY );

    SC_METHOD(thread_base_addr_d1_10_fu_425_p2);
    sensitive << ( base_addr_d2_reg_189 );

    SC_METHOD(thread_base_addr_d2_10_fu_454_p2);
    sensitive << ( base_addr_d2_0_i_i_i_reg_210 );

    SC_METHOD(thread_base_addr_fu_353_p2);
    sensitive << ( result_c_V_dout );
    sensitive << ( tmp1_i_i_fu_347_p2 );

    SC_METHOD(thread_cLoops_fu_287_p3);
    sensitive << ( tmp_225_fu_273_p3 );
    sensitive << ( tmp_654_i_i_i_fu_281_p2 );

    SC_METHOD(thread_cntl_V_blk_n);
    sensitive << ( cntl_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_662_i_i_i_fu_363_p2 );
    sensitive << ( tmp_236_fu_378_p1 );

    SC_METHOD(thread_cntl_V_din);
    sensitive << ( cntl_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op78_write_state5 );

    SC_METHOD(thread_cntl_V_write);
    sensitive << ( cntl_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op78_write_state5 );

    SC_METHOD(thread_i_0_i_cast_i_i_i_fu_431_p1);
    sensitive << ( i_0_i_i_i_i_reg_232 );

    SC_METHOD(thread_i_fu_440_p2);
    sensitive << ( i_0_i_i_i_i_reg_232 );

    SC_METHOD(thread_inputs_offset_c_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( inputs_offset_c_empty_n );

    SC_METHOD(thread_inputs_offset_c_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( outputs_offset_empty_n );
    sensitive << ( inputs_offset_c_empty_n );

    SC_METHOD(thread_m_axi_outputs_ARADDR);

    SC_METHOD(thread_m_axi_outputs_ARBURST);

    SC_METHOD(thread_m_axi_outputs_ARCACHE);

    SC_METHOD(thread_m_axi_outputs_ARID);

    SC_METHOD(thread_m_axi_outputs_ARLEN);

    SC_METHOD(thread_m_axi_outputs_ARLOCK);

    SC_METHOD(thread_m_axi_outputs_ARPROT);

    SC_METHOD(thread_m_axi_outputs_ARQOS);

    SC_METHOD(thread_m_axi_outputs_ARREGION);

    SC_METHOD(thread_m_axi_outputs_ARSIZE);

    SC_METHOD(thread_m_axi_outputs_ARUSER);

    SC_METHOD(thread_m_axi_outputs_ARVALID);

    SC_METHOD(thread_m_axi_outputs_AWADDR);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( outputs_addr_reg_523 );
    sensitive << ( ap_reg_ioackin_m_axi_outputs_AWREADY );

    SC_METHOD(thread_m_axi_outputs_AWBURST);

    SC_METHOD(thread_m_axi_outputs_AWCACHE);

    SC_METHOD(thread_m_axi_outputs_AWID);

    SC_METHOD(thread_m_axi_outputs_AWLEN);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( cLoops_reg_479 );
    sensitive << ( ap_reg_ioackin_m_axi_outputs_AWREADY );

    SC_METHOD(thread_m_axi_outputs_AWLOCK);

    SC_METHOD(thread_m_axi_outputs_AWPROT);

    SC_METHOD(thread_m_axi_outputs_AWQOS);

    SC_METHOD(thread_m_axi_outputs_AWREGION);

    SC_METHOD(thread_m_axi_outputs_AWSIZE);

    SC_METHOD(thread_m_axi_outputs_AWUSER);

    SC_METHOD(thread_m_axi_outputs_AWVALID);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_reg_ioackin_m_axi_outputs_AWREADY );

    SC_METHOD(thread_m_axi_outputs_BREADY);
    sensitive << ( m_axi_outputs_BVALID );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_m_axi_outputs_RREADY);

    SC_METHOD(thread_m_axi_outputs_WDATA);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_665_i_i_i_reg_534 );
    sensitive << ( ap_phi_reg_pp0_iter1_tmp_124_load_i_i_reg_243 );
    sensitive << ( ap_reg_ioackin_m_axi_outputs_WREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_outputs_WID);

    SC_METHOD(thread_m_axi_outputs_WLAST);

    SC_METHOD(thread_m_axi_outputs_WSTRB);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_665_i_i_i_reg_534 );
    sensitive << ( ap_reg_ioackin_m_axi_outputs_WREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_outputs_WUSER);

    SC_METHOD(thread_m_axi_outputs_WVALID);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_665_i_i_i_reg_534 );
    sensitive << ( ap_reg_ioackin_m_axi_outputs_WREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_nLoops_fu_328_p3);
    sensitive << ( tmp_657_i_i_i_fu_317_p2 );
    sensitive << ( tmp_658_i_i_i_fu_322_p2 );

    SC_METHOD(thread_output_buffer_0_V_read);
    sensitive << ( output_buffer_0_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_229_reg_508 );
    sensitive << ( tmp_665_i_i_i_fu_435_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_output_buffer_1_V_read);
    sensitive << ( output_buffer_1_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_229_reg_508 );
    sensitive << ( tmp_665_i_i_i_fu_435_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_outputs_blk_n_AW);
    sensitive << ( m_axi_outputs_AWREADY );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_outputs_blk_n_B);
    sensitive << ( m_axi_outputs_BVALID );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_outputs_blk_n_W);
    sensitive << ( m_axi_outputs_WREADY );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_665_i_i_i_reg_534 );

    SC_METHOD(thread_outputs_offset_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( outputs_offset_empty_n );

    SC_METHOD(thread_outputs_offset_cast_s_fu_253_p1);
    sensitive << ( inputs_offset_c_dout );

    SC_METHOD(thread_outputs_offset_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( outputs_offset_empty_n );
    sensitive << ( inputs_offset_c_empty_n );

    SC_METHOD(thread_rLoops_fu_309_p3);
    sensitive << ( tmp_226_fu_295_p3 );
    sensitive << ( tmp_656_i_i_i_fu_303_p2 );

    SC_METHOD(thread_result_buffer_V_read);
    sensitive << ( result_buffer_V_empty_n );
    sensitive << ( cntl_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_662_i_i_i_fu_363_p2 );
    sensitive << ( ap_predicate_op78_write_state5 );

    SC_METHOD(thread_result_c_V_read);
    sensitive << ( result_c_V_empty_n );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_result_n_V_read);
    sensitive << ( result_n_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_nbreadreq_fu_122_p3 );

    SC_METHOD(thread_result_r_V_read);
    sensitive << ( result_r_V_empty_n );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sext_cast_i_i_fu_257_p1);
    sensitive << ( outputs_offset_dout );

    SC_METHOD(thread_sum_cast_i_i_fu_415_p1);
    sensitive << ( sum_i_i_fu_410_p2 );

    SC_METHOD(thread_sum_i_i_fu_410_p2);
    sensitive << ( sext_cast_i_i_reg_465 );
    sensitive << ( tmp_33_cast_i_i_fu_406_p1 );

    SC_METHOD(thread_tmp1_i_i_fu_347_p2);
    sensitive << ( tmp_228_fu_341_p2 );
    sensitive << ( tmp_227_fu_336_p2 );

    SC_METHOD(thread_tmp_225_fu_273_p3);
    sensitive << ( result_c_V_dout );

    SC_METHOD(thread_tmp_226_fu_295_p3);
    sensitive << ( result_r_V_dout );

    SC_METHOD(thread_tmp_227_fu_336_p2);
    sensitive << ( tmp_235_reg_473 );

    SC_METHOD(thread_tmp_228_fu_341_p2);
    sensitive << ( result_r_V_dout );

    SC_METHOD(thread_tmp_229_fu_374_p1);
    sensitive << ( tn_0_i_i_i_i_reg_199 );

    SC_METHOD(thread_tmp_236_fu_378_p1);
    sensitive << ( result_buffer_V_dout );

    SC_METHOD(thread_tmp_33_cast_i_i_fu_406_p1);
    sensitive << ( tmp_33_i_i_fu_401_p2 );

    SC_METHOD(thread_tmp_33_i_i_fu_401_p2);
    sensitive << ( outputs_offset_cast_s_reg_460 );
    sensitive << ( tmp_cast_i_i_fu_397_p1 );

    SC_METHOD(thread_tmp_654_i_i_i_fu_281_p2);
    sensitive << ( result_c_V_dout );

    SC_METHOD(thread_tmp_656_i_i_i_fu_303_p2);
    sensitive << ( result_r_V_dout );

    SC_METHOD(thread_tmp_657_i_i_i_fu_317_p2);
    sensitive << ( tmp_235_reg_473 );

    SC_METHOD(thread_tmp_658_i_i_i_fu_322_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_657_i_i_i_fu_317_p2 );

    SC_METHOD(thread_tmp_662_i_i_i_fu_363_p2);
    sensitive << ( cntl_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( nLoops_reg_490 );
    sensitive << ( ap_predicate_op78_write_state5 );
    sensitive << ( tn_0_i_cast_i_i_i_fu_359_p1 );

    SC_METHOD(thread_tmp_663_i_i_i_fu_386_p2);
    sensitive << ( rLoops_reg_485 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tr_divS_0_i_cast_i_i_fu_382_p1 );

    SC_METHOD(thread_tmp_665_i_i_i_fu_435_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( cLoops_reg_479 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i_0_i_cast_i_i_i_fu_431_p1 );

    SC_METHOD(thread_tmp_cast_i_i_fu_397_p1);
    sensitive << ( base_addr_d2_0_i_i_i_reg_210 );

    SC_METHOD(thread_tmp_nbreadreq_fu_122_p3);
    sensitive << ( result_buffer_V_empty_n );

    SC_METHOD(thread_tn_0_i_cast_i_i_i_fu_359_p1);
    sensitive << ( tn_0_i_i_i_i_reg_199 );

    SC_METHOD(thread_tn_fu_368_p2);
    sensitive << ( tn_0_i_i_i_i_reg_199 );

    SC_METHOD(thread_tr_divS_0_i_cast_i_i_fu_382_p1);
    sensitive << ( tr_divS_0_i_i_i_i_reg_221 );

    SC_METHOD(thread_tr_divS_fu_391_p2);
    sensitive << ( tr_divS_0_i_i_i_i_reg_221 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_outputs_BVALID );
    sensitive << ( outputs_offset_empty_n );
    sensitive << ( inputs_offset_c_empty_n );
    sensitive << ( cntl_V_full_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_662_i_i_i_fu_363_p2 );
    sensitive << ( tmp_236_fu_378_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_nbreadreq_fu_122_p3 );
    sensitive << ( ap_predicate_op78_write_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_663_i_i_i_fu_386_p2 );
    sensitive << ( tmp_665_i_i_i_fu_435_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_sig_ioackin_m_axi_outputs_AWREADY );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_outputs_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_outputs_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "output_result_12_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_outputs_AWVALID, "(port)m_axi_outputs_AWVALID");
    sc_trace(mVcdFile, m_axi_outputs_AWREADY, "(port)m_axi_outputs_AWREADY");
    sc_trace(mVcdFile, m_axi_outputs_AWADDR, "(port)m_axi_outputs_AWADDR");
    sc_trace(mVcdFile, m_axi_outputs_AWID, "(port)m_axi_outputs_AWID");
    sc_trace(mVcdFile, m_axi_outputs_AWLEN, "(port)m_axi_outputs_AWLEN");
    sc_trace(mVcdFile, m_axi_outputs_AWSIZE, "(port)m_axi_outputs_AWSIZE");
    sc_trace(mVcdFile, m_axi_outputs_AWBURST, "(port)m_axi_outputs_AWBURST");
    sc_trace(mVcdFile, m_axi_outputs_AWLOCK, "(port)m_axi_outputs_AWLOCK");
    sc_trace(mVcdFile, m_axi_outputs_AWCACHE, "(port)m_axi_outputs_AWCACHE");
    sc_trace(mVcdFile, m_axi_outputs_AWPROT, "(port)m_axi_outputs_AWPROT");
    sc_trace(mVcdFile, m_axi_outputs_AWQOS, "(port)m_axi_outputs_AWQOS");
    sc_trace(mVcdFile, m_axi_outputs_AWREGION, "(port)m_axi_outputs_AWREGION");
    sc_trace(mVcdFile, m_axi_outputs_AWUSER, "(port)m_axi_outputs_AWUSER");
    sc_trace(mVcdFile, m_axi_outputs_WVALID, "(port)m_axi_outputs_WVALID");
    sc_trace(mVcdFile, m_axi_outputs_WREADY, "(port)m_axi_outputs_WREADY");
    sc_trace(mVcdFile, m_axi_outputs_WDATA, "(port)m_axi_outputs_WDATA");
    sc_trace(mVcdFile, m_axi_outputs_WSTRB, "(port)m_axi_outputs_WSTRB");
    sc_trace(mVcdFile, m_axi_outputs_WLAST, "(port)m_axi_outputs_WLAST");
    sc_trace(mVcdFile, m_axi_outputs_WID, "(port)m_axi_outputs_WID");
    sc_trace(mVcdFile, m_axi_outputs_WUSER, "(port)m_axi_outputs_WUSER");
    sc_trace(mVcdFile, m_axi_outputs_ARVALID, "(port)m_axi_outputs_ARVALID");
    sc_trace(mVcdFile, m_axi_outputs_ARREADY, "(port)m_axi_outputs_ARREADY");
    sc_trace(mVcdFile, m_axi_outputs_ARADDR, "(port)m_axi_outputs_ARADDR");
    sc_trace(mVcdFile, m_axi_outputs_ARID, "(port)m_axi_outputs_ARID");
    sc_trace(mVcdFile, m_axi_outputs_ARLEN, "(port)m_axi_outputs_ARLEN");
    sc_trace(mVcdFile, m_axi_outputs_ARSIZE, "(port)m_axi_outputs_ARSIZE");
    sc_trace(mVcdFile, m_axi_outputs_ARBURST, "(port)m_axi_outputs_ARBURST");
    sc_trace(mVcdFile, m_axi_outputs_ARLOCK, "(port)m_axi_outputs_ARLOCK");
    sc_trace(mVcdFile, m_axi_outputs_ARCACHE, "(port)m_axi_outputs_ARCACHE");
    sc_trace(mVcdFile, m_axi_outputs_ARPROT, "(port)m_axi_outputs_ARPROT");
    sc_trace(mVcdFile, m_axi_outputs_ARQOS, "(port)m_axi_outputs_ARQOS");
    sc_trace(mVcdFile, m_axi_outputs_ARREGION, "(port)m_axi_outputs_ARREGION");
    sc_trace(mVcdFile, m_axi_outputs_ARUSER, "(port)m_axi_outputs_ARUSER");
    sc_trace(mVcdFile, m_axi_outputs_RVALID, "(port)m_axi_outputs_RVALID");
    sc_trace(mVcdFile, m_axi_outputs_RREADY, "(port)m_axi_outputs_RREADY");
    sc_trace(mVcdFile, m_axi_outputs_RDATA, "(port)m_axi_outputs_RDATA");
    sc_trace(mVcdFile, m_axi_outputs_RLAST, "(port)m_axi_outputs_RLAST");
    sc_trace(mVcdFile, m_axi_outputs_RID, "(port)m_axi_outputs_RID");
    sc_trace(mVcdFile, m_axi_outputs_RUSER, "(port)m_axi_outputs_RUSER");
    sc_trace(mVcdFile, m_axi_outputs_RRESP, "(port)m_axi_outputs_RRESP");
    sc_trace(mVcdFile, m_axi_outputs_BVALID, "(port)m_axi_outputs_BVALID");
    sc_trace(mVcdFile, m_axi_outputs_BREADY, "(port)m_axi_outputs_BREADY");
    sc_trace(mVcdFile, m_axi_outputs_BRESP, "(port)m_axi_outputs_BRESP");
    sc_trace(mVcdFile, m_axi_outputs_BID, "(port)m_axi_outputs_BID");
    sc_trace(mVcdFile, m_axi_outputs_BUSER, "(port)m_axi_outputs_BUSER");
    sc_trace(mVcdFile, outputs_offset_dout, "(port)outputs_offset_dout");
    sc_trace(mVcdFile, outputs_offset_empty_n, "(port)outputs_offset_empty_n");
    sc_trace(mVcdFile, outputs_offset_read, "(port)outputs_offset_read");
    sc_trace(mVcdFile, inputs_offset_c_dout, "(port)inputs_offset_c_dout");
    sc_trace(mVcdFile, inputs_offset_c_empty_n, "(port)inputs_offset_c_empty_n");
    sc_trace(mVcdFile, inputs_offset_c_read, "(port)inputs_offset_c_read");
    sc_trace(mVcdFile, output_buffer_0_V_dout, "(port)output_buffer_0_V_dout");
    sc_trace(mVcdFile, output_buffer_0_V_empty_n, "(port)output_buffer_0_V_empty_n");
    sc_trace(mVcdFile, output_buffer_0_V_read, "(port)output_buffer_0_V_read");
    sc_trace(mVcdFile, output_buffer_1_V_dout, "(port)output_buffer_1_V_dout");
    sc_trace(mVcdFile, output_buffer_1_V_empty_n, "(port)output_buffer_1_V_empty_n");
    sc_trace(mVcdFile, output_buffer_1_V_read, "(port)output_buffer_1_V_read");
    sc_trace(mVcdFile, result_buffer_V_dout, "(port)result_buffer_V_dout");
    sc_trace(mVcdFile, result_buffer_V_empty_n, "(port)result_buffer_V_empty_n");
    sc_trace(mVcdFile, result_buffer_V_read, "(port)result_buffer_V_read");
    sc_trace(mVcdFile, result_c_V_dout, "(port)result_c_V_dout");
    sc_trace(mVcdFile, result_c_V_empty_n, "(port)result_c_V_empty_n");
    sc_trace(mVcdFile, result_c_V_read, "(port)result_c_V_read");
    sc_trace(mVcdFile, result_r_V_dout, "(port)result_r_V_dout");
    sc_trace(mVcdFile, result_r_V_empty_n, "(port)result_r_V_empty_n");
    sc_trace(mVcdFile, result_r_V_read, "(port)result_r_V_read");
    sc_trace(mVcdFile, result_n_V_dout, "(port)result_n_V_dout");
    sc_trace(mVcdFile, result_n_V_empty_n, "(port)result_n_V_empty_n");
    sc_trace(mVcdFile, result_n_V_read, "(port)result_n_V_read");
    sc_trace(mVcdFile, cntl_V_din, "(port)cntl_V_din");
    sc_trace(mVcdFile, cntl_V_full_n, "(port)cntl_V_full_n");
    sc_trace(mVcdFile, cntl_V_write, "(port)cntl_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, outputs_blk_n_AW, "outputs_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, outputs_blk_n_W, "outputs_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_665_i_i_i_reg_534, "tmp_665_i_i_i_reg_534");
    sc_trace(mVcdFile, outputs_blk_n_B, "outputs_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, outputs_offset_blk_n, "outputs_offset_blk_n");
    sc_trace(mVcdFile, inputs_offset_c_blk_n, "inputs_offset_c_blk_n");
    sc_trace(mVcdFile, cntl_V_blk_n, "cntl_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_662_i_i_i_fu_363_p2, "tmp_662_i_i_i_fu_363_p2");
    sc_trace(mVcdFile, tmp_236_fu_378_p1, "tmp_236_fu_378_p1");
    sc_trace(mVcdFile, i_0_i_i_i_i_reg_232, "i_0_i_i_i_i_reg_232");
    sc_trace(mVcdFile, outputs_offset_cast_s_fu_253_p1, "outputs_offset_cast_s_fu_253_p1");
    sc_trace(mVcdFile, outputs_offset_cast_s_reg_460, "outputs_offset_cast_s_reg_460");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, sext_cast_i_i_fu_257_p1, "sext_cast_i_i_fu_257_p1");
    sc_trace(mVcdFile, sext_cast_i_i_reg_465, "sext_cast_i_i_reg_465");
    sc_trace(mVcdFile, tmp_235_reg_473, "tmp_235_reg_473");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_122_p3, "tmp_nbreadreq_fu_122_p3");
    sc_trace(mVcdFile, cLoops_fu_287_p3, "cLoops_fu_287_p3");
    sc_trace(mVcdFile, cLoops_reg_479, "cLoops_reg_479");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, rLoops_fu_309_p3, "rLoops_fu_309_p3");
    sc_trace(mVcdFile, rLoops_reg_485, "rLoops_reg_485");
    sc_trace(mVcdFile, nLoops_fu_328_p3, "nLoops_fu_328_p3");
    sc_trace(mVcdFile, nLoops_reg_490, "nLoops_reg_490");
    sc_trace(mVcdFile, base_addr_fu_353_p2, "base_addr_fu_353_p2");
    sc_trace(mVcdFile, tn_fu_368_p2, "tn_fu_368_p2");
    sc_trace(mVcdFile, tn_reg_503, "tn_reg_503");
    sc_trace(mVcdFile, ap_predicate_op78_write_state5, "ap_predicate_op78_write_state5");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, tmp_229_fu_374_p1, "tmp_229_fu_374_p1");
    sc_trace(mVcdFile, tmp_229_reg_508, "tmp_229_reg_508");
    sc_trace(mVcdFile, tr_divS_fu_391_p2, "tr_divS_fu_391_p2");
    sc_trace(mVcdFile, tr_divS_reg_518, "tr_divS_reg_518");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, outputs_addr_reg_523, "outputs_addr_reg_523");
    sc_trace(mVcdFile, tmp_663_i_i_i_fu_386_p2, "tmp_663_i_i_i_fu_386_p2");
    sc_trace(mVcdFile, base_addr_d1_10_fu_425_p2, "base_addr_d1_10_fu_425_p2");
    sc_trace(mVcdFile, tmp_665_i_i_i_fu_435_p2, "tmp_665_i_i_i_fu_435_p2");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter0, "ap_block_state8_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter1, "ap_block_state9_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_outputs_WREADY, "ap_sig_ioackin_m_axi_outputs_WREADY");
    sc_trace(mVcdFile, ap_block_state9_io, "ap_block_state9_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_440_p2, "i_fu_440_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, base_addr_d2_10_fu_454_p2, "base_addr_d2_10_fu_454_p2");
    sc_trace(mVcdFile, base_addr_d2_10_reg_553, "base_addr_d2_10_reg_553");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_outputs_AWREADY, "ap_sig_ioackin_m_axi_outputs_AWREADY");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state8, "ap_condition_pp0_exit_iter0_state8");
    sc_trace(mVcdFile, base_addr_d2_reg_189, "base_addr_d2_reg_189");
    sc_trace(mVcdFile, tn_0_i_i_i_i_reg_199, "tn_0_i_i_i_i_reg_199");
    sc_trace(mVcdFile, base_addr_d2_0_i_i_i_reg_210, "base_addr_d2_0_i_i_i_reg_210");
    sc_trace(mVcdFile, tr_divS_0_i_i_i_i_reg_221, "tr_divS_0_i_i_i_i_reg_221");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_tmp_124_load_i_i_reg_243, "ap_phi_reg_pp0_iter0_tmp_124_load_i_i_reg_243");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_tmp_124_load_i_i_reg_243, "ap_phi_reg_pp0_iter1_tmp_124_load_i_i_reg_243");
    sc_trace(mVcdFile, sum_cast_i_i_fu_415_p1, "sum_cast_i_i_fu_415_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_outputs_AWREADY, "ap_reg_ioackin_m_axi_outputs_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_outputs_WREADY, "ap_reg_ioackin_m_axi_outputs_WREADY");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_225_fu_273_p3, "tmp_225_fu_273_p3");
    sc_trace(mVcdFile, tmp_654_i_i_i_fu_281_p2, "tmp_654_i_i_i_fu_281_p2");
    sc_trace(mVcdFile, tmp_226_fu_295_p3, "tmp_226_fu_295_p3");
    sc_trace(mVcdFile, tmp_656_i_i_i_fu_303_p2, "tmp_656_i_i_i_fu_303_p2");
    sc_trace(mVcdFile, tmp_657_i_i_i_fu_317_p2, "tmp_657_i_i_i_fu_317_p2");
    sc_trace(mVcdFile, tmp_658_i_i_i_fu_322_p2, "tmp_658_i_i_i_fu_322_p2");
    sc_trace(mVcdFile, tmp_228_fu_341_p2, "tmp_228_fu_341_p2");
    sc_trace(mVcdFile, tmp_227_fu_336_p2, "tmp_227_fu_336_p2");
    sc_trace(mVcdFile, tmp1_i_i_fu_347_p2, "tmp1_i_i_fu_347_p2");
    sc_trace(mVcdFile, tn_0_i_cast_i_i_i_fu_359_p1, "tn_0_i_cast_i_i_i_fu_359_p1");
    sc_trace(mVcdFile, tr_divS_0_i_cast_i_i_fu_382_p1, "tr_divS_0_i_cast_i_i_fu_382_p1");
    sc_trace(mVcdFile, tmp_cast_i_i_fu_397_p1, "tmp_cast_i_i_fu_397_p1");
    sc_trace(mVcdFile, tmp_33_i_i_fu_401_p2, "tmp_33_i_i_fu_401_p2");
    sc_trace(mVcdFile, tmp_33_cast_i_i_fu_406_p1, "tmp_33_cast_i_i_fu_406_p1");
    sc_trace(mVcdFile, sum_i_i_fu_410_p2, "sum_i_i_fu_410_p2");
    sc_trace(mVcdFile, i_0_i_cast_i_i_i_fu_431_p1, "i_0_i_cast_i_i_i_fu_431_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_259, "ap_condition_259");
    sc_trace(mVcdFile, ap_condition_559, "ap_condition_559");
#endif

    }
}

output_result_12::~output_result_12() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void output_result_12::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_662_i_i_i_fu_363_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_236_fu_378_p1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, cntl_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state5.read())))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state8.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                    esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_outputs_AWREADY.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state8.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state8.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                    esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_outputs_AWREADY.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_259.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_665_i_i_i_fu_435_p2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, tmp_229_reg_508.read()))) {
            ap_phi_reg_pp0_iter1_tmp_124_load_i_i_reg_243 = output_buffer_0_V_dout.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_665_i_i_i_fu_435_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_229_reg_508.read()))) {
            ap_phi_reg_pp0_iter1_tmp_124_load_i_i_reg_243 = output_buffer_1_V_dout.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_tmp_124_load_i_i_reg_243 = ap_phi_reg_pp0_iter0_tmp_124_load_i_i_reg_243.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_outputs_AWREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_outputs_AWREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_m_axi_outputs_AWREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, m_axi_outputs_AWREADY.read())) {
                ap_reg_ioackin_m_axi_outputs_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_outputs_WREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_559.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_m_axi_outputs_WREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, m_axi_outputs_WREADY.read()) && 
                        esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
                ap_reg_ioackin_m_axi_outputs_WREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(m_axi_outputs_BVALID.read(), ap_const_logic_1))) {
        base_addr_d2_0_i_i_i_reg_210 = base_addr_d2_10_reg_553.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, cntl_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state5.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_662_i_i_i_fu_363_p2.read()))) {
        base_addr_d2_0_i_i_i_reg_210 = base_addr_d2_reg_189.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_663_i_i_i_fu_386_p2.read()))) {
        base_addr_d2_reg_189 = base_addr_d1_10_fu_425_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        base_addr_d2_reg_189 = base_addr_fu_353_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_665_i_i_i_fu_435_p2.read()))) {
        i_0_i_i_i_i_reg_232 = i_fu_440_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_outputs_AWREADY.read(), ap_const_logic_1))) {
        i_0_i_i_i_i_reg_232 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_663_i_i_i_fu_386_p2.read()))) {
        tn_0_i_i_i_i_reg_199 = tn_reg_503.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tn_0_i_i_i_i_reg_199 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(m_axi_outputs_BVALID.read(), ap_const_logic_1))) {
        tr_divS_0_i_i_i_i_reg_221 = tr_divS_reg_518.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, cntl_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state5.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_662_i_i_i_fu_363_p2.read()))) {
        tr_divS_0_i_i_i_i_reg_221 = ap_const_lv31_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        base_addr_d2_10_reg_553 = base_addr_d2_10_fu_454_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cLoops_reg_479 = cLoops_fu_287_p3.read();
        nLoops_reg_490 = nLoops_fu_328_p3.read();
        rLoops_reg_485 = rLoops_fu_309_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_663_i_i_i_fu_386_p2.read()))) {
        outputs_addr_reg_523 =  (sc_lv<32>) (sum_cast_i_i_fu_415_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, outputs_offset_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, inputs_offset_c_empty_n.read())))) {
        outputs_offset_cast_s_reg_460 = outputs_offset_cast_s_fu_253_p1.read();
        sext_cast_i_i_reg_465 = sext_cast_i_i_fu_257_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, cntl_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state5.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_662_i_i_i_fu_363_p2.read()))) {
        tmp_229_reg_508 = tmp_229_fu_374_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_122_p3.read()))) {
        tmp_235_reg_473 = result_n_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_665_i_i_i_reg_534 = tmp_665_i_i_i_fu_435_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, cntl_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state5.read())))) {
        tn_reg_503 = tn_fu_368_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tr_divS_reg_518 = tr_divS_fu_391_p2.read();
    }
}

void output_result_12::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[7];
}

void output_result_12::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void output_result_12::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[8];
}

void output_result_12::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[12];
}

void output_result_12::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void output_result_12::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void output_result_12::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void output_result_12::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void output_result_12::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void output_result_12::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void output_result_12::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void output_result_12::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state9_io.read()));
}

void output_result_12::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state9_io.read()));
}

void output_result_12::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, outputs_offset_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, inputs_offset_c_empty_n.read()));
}

void output_result_12::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(ap_const_logic_0, cntl_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state5.read()));
}

void output_result_12::thread_ap_block_state8_pp0_stage0_iter0() {
    ap_block_state8_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void output_result_12::thread_ap_block_state9_io() {
    ap_block_state9_io = (esl_seteq<1,1,1>(tmp_665_i_i_i_reg_534.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_outputs_WREADY.read()));
}

void output_result_12::thread_ap_block_state9_pp0_stage0_iter1() {
    ap_block_state9_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void output_result_12::thread_ap_condition_259() {
    ap_condition_259 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()));
}

void output_result_12::thread_ap_condition_559() {
    ap_condition_559 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(tmp_665_i_i_i_reg_534.read(), ap_const_lv1_1));
}

void output_result_12::thread_ap_condition_pp0_exit_iter0_state8() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_665_i_i_i_fu_435_p2.read())) {
        ap_condition_pp0_exit_iter0_state8 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state8 = ap_const_logic_0;
    }
}

void output_result_12::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_662_i_i_i_fu_363_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_236_fu_378_p1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, cntl_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state5.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void output_result_12::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void output_result_12::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void output_result_12::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void output_result_12::thread_ap_phi_reg_pp0_iter0_tmp_124_load_i_i_reg_243() {
    ap_phi_reg_pp0_iter0_tmp_124_load_i_i_reg_243 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
}

void output_result_12::thread_ap_predicate_op78_write_state5() {
    ap_predicate_op78_write_state5 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_662_i_i_i_fu_363_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_236_fu_378_p1.read()));
}

void output_result_12::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_662_i_i_i_fu_363_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_236_fu_378_p1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, cntl_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state5.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void output_result_12::thread_ap_sig_ioackin_m_axi_outputs_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_outputs_AWREADY.read())) {
        ap_sig_ioackin_m_axi_outputs_AWREADY = m_axi_outputs_AWREADY.read();
    } else {
        ap_sig_ioackin_m_axi_outputs_AWREADY = ap_const_logic_1;
    }
}

void output_result_12::thread_ap_sig_ioackin_m_axi_outputs_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_outputs_WREADY.read())) {
        ap_sig_ioackin_m_axi_outputs_WREADY = m_axi_outputs_WREADY.read();
    } else {
        ap_sig_ioackin_m_axi_outputs_WREADY = ap_const_logic_1;
    }
}

void output_result_12::thread_base_addr_d1_10_fu_425_p2() {
    base_addr_d1_10_fu_425_p2 = (!base_addr_d2_reg_189.read().is_01() || !ap_const_lv32_100.is_01())? sc_lv<32>(): (sc_biguint<32>(base_addr_d2_reg_189.read()) + sc_biguint<32>(ap_const_lv32_100));
}

void output_result_12::thread_base_addr_d2_10_fu_454_p2() {
    base_addr_d2_10_fu_454_p2 = (!base_addr_d2_0_i_i_i_reg_210.read().is_01() || !ap_const_lv32_10.is_01())? sc_lv<32>(): (sc_bigint<32>(base_addr_d2_0_i_i_i_reg_210.read()) + sc_biguint<32>(ap_const_lv32_10));
}

void output_result_12::thread_base_addr_fu_353_p2() {
    base_addr_fu_353_p2 = (!tmp1_i_i_fu_347_p2.read().is_01() || !result_c_V_dout.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp1_i_i_fu_347_p2.read()) + sc_biguint<32>(result_c_V_dout.read()));
}

void output_result_12::thread_cLoops_fu_287_p3() {
    cLoops_fu_287_p3 = (!tmp_225_fu_273_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_225_fu_273_p3.read()[0].to_bool())? ap_const_lv32_10: tmp_654_i_i_i_fu_281_p2.read());
}

void output_result_12::thread_cntl_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_662_i_i_i_fu_363_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_236_fu_378_p1.read()))) {
        cntl_V_blk_n = cntl_V_full_n.read();
    } else {
        cntl_V_blk_n = ap_const_logic_1;
    }
}

void output_result_12::thread_cntl_V_din() {
    cntl_V_din =  (sc_logic) (ap_const_lv1_0[0]);
}

void output_result_12::thread_cntl_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state5.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, cntl_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state5.read())))) {
        cntl_V_write = ap_const_logic_1;
    } else {
        cntl_V_write = ap_const_logic_0;
    }
}

void output_result_12::thread_i_0_i_cast_i_i_i_fu_431_p1() {
    i_0_i_cast_i_i_i_fu_431_p1 = esl_zext<32,31>(i_0_i_i_i_i_reg_232.read());
}

void output_result_12::thread_i_fu_440_p2() {
    i_fu_440_p2 = (!i_0_i_i_i_i_reg_232.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_0_i_i_i_i_reg_232.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void output_result_12::thread_inputs_offset_c_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        inputs_offset_c_blk_n = inputs_offset_c_empty_n.read();
    } else {
        inputs_offset_c_blk_n = ap_const_logic_1;
    }
}

void output_result_12::thread_inputs_offset_c_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, outputs_offset_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, inputs_offset_c_empty_n.read())))) {
        inputs_offset_c_read = ap_const_logic_1;
    } else {
        inputs_offset_c_read = ap_const_logic_0;
    }
}

void output_result_12::thread_m_axi_outputs_ARADDR() {
    m_axi_outputs_ARADDR = ap_const_lv32_0;
}

void output_result_12::thread_m_axi_outputs_ARBURST() {
    m_axi_outputs_ARBURST = ap_const_lv2_0;
}

void output_result_12::thread_m_axi_outputs_ARCACHE() {
    m_axi_outputs_ARCACHE = ap_const_lv4_0;
}

void output_result_12::thread_m_axi_outputs_ARID() {
    m_axi_outputs_ARID = ap_const_lv1_0;
}

void output_result_12::thread_m_axi_outputs_ARLEN() {
    m_axi_outputs_ARLEN = ap_const_lv32_0;
}

void output_result_12::thread_m_axi_outputs_ARLOCK() {
    m_axi_outputs_ARLOCK = ap_const_lv2_0;
}

void output_result_12::thread_m_axi_outputs_ARPROT() {
    m_axi_outputs_ARPROT = ap_const_lv3_0;
}

void output_result_12::thread_m_axi_outputs_ARQOS() {
    m_axi_outputs_ARQOS = ap_const_lv4_0;
}

void output_result_12::thread_m_axi_outputs_ARREGION() {
    m_axi_outputs_ARREGION = ap_const_lv4_0;
}

void output_result_12::thread_m_axi_outputs_ARSIZE() {
    m_axi_outputs_ARSIZE = ap_const_lv3_0;
}

void output_result_12::thread_m_axi_outputs_ARUSER() {
    m_axi_outputs_ARUSER = ap_const_lv1_0;
}

void output_result_12::thread_m_axi_outputs_ARVALID() {
    m_axi_outputs_ARVALID = ap_const_logic_0;
}

void output_result_12::thread_m_axi_outputs_AWADDR() {
    m_axi_outputs_AWADDR = outputs_addr_reg_523.read();
}

void output_result_12::thread_m_axi_outputs_AWBURST() {
    m_axi_outputs_AWBURST = ap_const_lv2_0;
}

void output_result_12::thread_m_axi_outputs_AWCACHE() {
    m_axi_outputs_AWCACHE = ap_const_lv4_0;
}

void output_result_12::thread_m_axi_outputs_AWID() {
    m_axi_outputs_AWID = ap_const_lv1_0;
}

void output_result_12::thread_m_axi_outputs_AWLEN() {
    m_axi_outputs_AWLEN = cLoops_reg_479.read();
}

void output_result_12::thread_m_axi_outputs_AWLOCK() {
    m_axi_outputs_AWLOCK = ap_const_lv2_0;
}

void output_result_12::thread_m_axi_outputs_AWPROT() {
    m_axi_outputs_AWPROT = ap_const_lv3_0;
}

void output_result_12::thread_m_axi_outputs_AWQOS() {
    m_axi_outputs_AWQOS = ap_const_lv4_0;
}

void output_result_12::thread_m_axi_outputs_AWREGION() {
    m_axi_outputs_AWREGION = ap_const_lv4_0;
}

void output_result_12::thread_m_axi_outputs_AWSIZE() {
    m_axi_outputs_AWSIZE = ap_const_lv3_0;
}

void output_result_12::thread_m_axi_outputs_AWUSER() {
    m_axi_outputs_AWUSER = ap_const_lv1_0;
}

void output_result_12::thread_m_axi_outputs_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_outputs_AWREADY.read()))) {
        m_axi_outputs_AWVALID = ap_const_logic_1;
    } else {
        m_axi_outputs_AWVALID = ap_const_logic_0;
    }
}

void output_result_12::thread_m_axi_outputs_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(m_axi_outputs_BVALID.read(), ap_const_logic_1))) {
        m_axi_outputs_BREADY = ap_const_logic_1;
    } else {
        m_axi_outputs_BREADY = ap_const_logic_0;
    }
}

void output_result_12::thread_m_axi_outputs_RREADY() {
    m_axi_outputs_RREADY = ap_const_logic_0;
}

void output_result_12::thread_m_axi_outputs_WDATA() {
    m_axi_outputs_WDATA = ap_phi_reg_pp0_iter1_tmp_124_load_i_i_reg_243.read();
}

void output_result_12::thread_m_axi_outputs_WID() {
    m_axi_outputs_WID = ap_const_lv1_0;
}

void output_result_12::thread_m_axi_outputs_WLAST() {
    m_axi_outputs_WLAST = ap_const_logic_0;
}

void output_result_12::thread_m_axi_outputs_WSTRB() {
    m_axi_outputs_WSTRB = ap_const_lv2_3;
}

void output_result_12::thread_m_axi_outputs_WUSER() {
    m_axi_outputs_WUSER = ap_const_lv1_0;
}

void output_result_12::thread_m_axi_outputs_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_665_i_i_i_reg_534.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_outputs_WREADY.read()))) {
        m_axi_outputs_WVALID = ap_const_logic_1;
    } else {
        m_axi_outputs_WVALID = ap_const_logic_0;
    }
}

void output_result_12::thread_nLoops_fu_328_p3() {
    nLoops_fu_328_p3 = (!tmp_658_i_i_i_fu_322_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_658_i_i_i_fu_322_p2.read()[0].to_bool())? ap_const_lv32_2: tmp_657_i_i_i_fu_317_p2.read());
}

void output_result_12::thread_output_buffer_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_665_i_i_i_fu_435_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_229_reg_508.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, output_buffer_0_V_empty_n.read()))) {
        output_buffer_0_V_read = ap_const_logic_1;
    } else {
        output_buffer_0_V_read = ap_const_logic_0;
    }
}

void output_result_12::thread_output_buffer_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_665_i_i_i_fu_435_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_229_reg_508.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, output_buffer_1_V_empty_n.read()))) {
        output_buffer_1_V_read = ap_const_logic_1;
    } else {
        output_buffer_1_V_read = ap_const_logic_0;
    }
}

void output_result_12::thread_outputs_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        outputs_blk_n_AW = m_axi_outputs_AWREADY.read();
    } else {
        outputs_blk_n_AW = ap_const_logic_1;
    }
}

void output_result_12::thread_outputs_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        outputs_blk_n_B = m_axi_outputs_BVALID.read();
    } else {
        outputs_blk_n_B = ap_const_logic_1;
    }
}

void output_result_12::thread_outputs_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_665_i_i_i_reg_534.read(), ap_const_lv1_1))) {
        outputs_blk_n_W = m_axi_outputs_WREADY.read();
    } else {
        outputs_blk_n_W = ap_const_logic_1;
    }
}

void output_result_12::thread_outputs_offset_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        outputs_offset_blk_n = outputs_offset_empty_n.read();
    } else {
        outputs_offset_blk_n = ap_const_logic_1;
    }
}

void output_result_12::thread_outputs_offset_cast_s_fu_253_p1() {
    outputs_offset_cast_s_fu_253_p1 = esl_zext<33,17>(inputs_offset_c_dout.read());
}

void output_result_12::thread_outputs_offset_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, outputs_offset_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, inputs_offset_c_empty_n.read())))) {
        outputs_offset_read = ap_const_logic_1;
    } else {
        outputs_offset_read = ap_const_logic_0;
    }
}

void output_result_12::thread_rLoops_fu_309_p3() {
    rLoops_fu_309_p3 = (!tmp_226_fu_295_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_226_fu_295_p3.read()[0].to_bool())? ap_const_lv32_10: tmp_656_i_i_i_fu_303_p2.read());
}

void output_result_12::thread_result_buffer_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_662_i_i_i_fu_363_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, cntl_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state5.read())) && 
         esl_seteq<1,1,1>(ap_const_logic_1, result_buffer_V_empty_n.read()))) {
        result_buffer_V_read = ap_const_logic_1;
    } else {
        result_buffer_V_read = ap_const_logic_0;
    }
}

void output_result_12::thread_result_c_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, result_c_V_empty_n.read()))) {
        result_c_V_read = ap_const_logic_1;
    } else {
        result_c_V_read = ap_const_logic_0;
    }
}

void output_result_12::thread_result_n_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_122_p3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, result_n_V_empty_n.read()))) {
        result_n_V_read = ap_const_logic_1;
    } else {
        result_n_V_read = ap_const_logic_0;
    }
}

void output_result_12::thread_result_r_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, result_r_V_empty_n.read()))) {
        result_r_V_read = ap_const_logic_1;
    } else {
        result_r_V_read = ap_const_logic_0;
    }
}

void output_result_12::thread_sext_cast_i_i_fu_257_p1() {
    sext_cast_i_i_fu_257_p1 = esl_zext<34,31>(outputs_offset_dout.read());
}

void output_result_12::thread_sum_cast_i_i_fu_415_p1() {
    sum_cast_i_i_fu_415_p1 = esl_sext<64,34>(sum_i_i_fu_410_p2.read());
}

void output_result_12::thread_sum_i_i_fu_410_p2() {
    sum_i_i_fu_410_p2 = (!sext_cast_i_i_reg_465.read().is_01() || !tmp_33_cast_i_i_fu_406_p1.read().is_01())? sc_lv<34>(): (sc_biguint<34>(sext_cast_i_i_reg_465.read()) + sc_bigint<34>(tmp_33_cast_i_i_fu_406_p1.read()));
}

void output_result_12::thread_tmp1_i_i_fu_347_p2() {
    tmp1_i_i_fu_347_p2 = (!tmp_228_fu_341_p2.read().is_01() || !tmp_227_fu_336_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_228_fu_341_p2.read()) + sc_biguint<32>(tmp_227_fu_336_p2.read()));
}

void output_result_12::thread_tmp_225_fu_273_p3() {
    tmp_225_fu_273_p3 = result_c_V_dout.read().range(31, 31);
}

void output_result_12::thread_tmp_226_fu_295_p3() {
    tmp_226_fu_295_p3 = result_r_V_dout.read().range(31, 31);
}

void output_result_12::thread_tmp_227_fu_336_p2() {
    tmp_227_fu_336_p2 = (!ap_const_lv32_8.is_01())? sc_lv<32>(): tmp_235_reg_473.read() << (unsigned short)ap_const_lv32_8.to_uint();
}

void output_result_12::thread_tmp_228_fu_341_p2() {
    tmp_228_fu_341_p2 = (!ap_const_lv32_4.is_01())? sc_lv<32>(): result_r_V_dout.read() << (unsigned short)ap_const_lv32_4.to_uint();
}

void output_result_12::thread_tmp_229_fu_374_p1() {
    tmp_229_fu_374_p1 = tn_0_i_i_i_i_reg_199.read().range(1-1, 0);
}

void output_result_12::thread_tmp_236_fu_378_p1() {
    tmp_236_fu_378_p1 =  (sc_lv<1>) (result_buffer_V_dout.read());
}

void output_result_12::thread_tmp_33_cast_i_i_fu_406_p1() {
    tmp_33_cast_i_i_fu_406_p1 = esl_sext<34,33>(tmp_33_i_i_fu_401_p2.read());
}

void output_result_12::thread_tmp_33_i_i_fu_401_p2() {
    tmp_33_i_i_fu_401_p2 = (!outputs_offset_cast_s_reg_460.read().is_01() || !tmp_cast_i_i_fu_397_p1.read().is_01())? sc_lv<33>(): (sc_biguint<33>(outputs_offset_cast_s_reg_460.read()) + sc_bigint<33>(tmp_cast_i_i_fu_397_p1.read()));
}

void output_result_12::thread_tmp_654_i_i_i_fu_281_p2() {
    tmp_654_i_i_i_fu_281_p2 = (!ap_const_lv32_10.is_01() || !result_c_V_dout.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_10) - sc_biguint<32>(result_c_V_dout.read()));
}

void output_result_12::thread_tmp_656_i_i_i_fu_303_p2() {
    tmp_656_i_i_i_fu_303_p2 = (!ap_const_lv32_10.is_01() || !result_r_V_dout.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_10) - sc_biguint<32>(result_r_V_dout.read()));
}

void output_result_12::thread_tmp_657_i_i_i_fu_317_p2() {
    tmp_657_i_i_i_fu_317_p2 = (!ap_const_lv32_100.is_01() || !tmp_235_reg_473.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_100) - sc_biguint<32>(tmp_235_reg_473.read()));
}

void output_result_12::thread_tmp_658_i_i_i_fu_322_p2() {
    tmp_658_i_i_i_fu_322_p2 = (!tmp_657_i_i_i_fu_317_p2.read().is_01() || !ap_const_lv32_2.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_657_i_i_i_fu_317_p2.read()) > sc_bigint<32>(ap_const_lv32_2));
}

void output_result_12::thread_tmp_662_i_i_i_fu_363_p2() {
    tmp_662_i_i_i_fu_363_p2 = (!tn_0_i_cast_i_i_i_fu_359_p1.read().is_01() || !nLoops_reg_490.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tn_0_i_cast_i_i_i_fu_359_p1.read()) < sc_bigint<32>(nLoops_reg_490.read()));
}

void output_result_12::thread_tmp_663_i_i_i_fu_386_p2() {
    tmp_663_i_i_i_fu_386_p2 = (!tr_divS_0_i_cast_i_i_fu_382_p1.read().is_01() || !rLoops_reg_485.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tr_divS_0_i_cast_i_i_fu_382_p1.read()) < sc_bigint<32>(rLoops_reg_485.read()));
}

void output_result_12::thread_tmp_665_i_i_i_fu_435_p2() {
    tmp_665_i_i_i_fu_435_p2 = (!i_0_i_cast_i_i_i_fu_431_p1.read().is_01() || !cLoops_reg_479.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_0_i_cast_i_i_i_fu_431_p1.read()) < sc_bigint<32>(cLoops_reg_479.read()));
}

void output_result_12::thread_tmp_cast_i_i_fu_397_p1() {
    tmp_cast_i_i_fu_397_p1 = esl_sext<33,32>(base_addr_d2_0_i_i_i_reg_210.read());
}

void output_result_12::thread_tmp_nbreadreq_fu_122_p3() {
    tmp_nbreadreq_fu_122_p3 =  (sc_lv<1>) (result_buffer_V_empty_n.read());
}

void output_result_12::thread_tn_0_i_cast_i_i_i_fu_359_p1() {
    tn_0_i_cast_i_i_i_fu_359_p1 = esl_zext<32,2>(tn_0_i_i_i_i_reg_199.read());
}

void output_result_12::thread_tn_fu_368_p2() {
    tn_fu_368_p2 = (!tn_0_i_i_i_i_reg_199.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(tn_0_i_i_i_i_reg_199.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void output_result_12::thread_tr_divS_0_i_cast_i_i_fu_382_p1() {
    tr_divS_0_i_cast_i_i_fu_382_p1 = esl_zext<32,31>(tr_divS_0_i_i_i_i_reg_221.read());
}

void output_result_12::thread_tr_divS_fu_391_p2() {
    tr_divS_fu_391_p2 = (!tr_divS_0_i_i_i_i_reg_221.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(tr_divS_0_i_i_i_i_reg_221.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void output_result_12::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, outputs_offset_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, inputs_offset_c_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_122_p3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_662_i_i_i_fu_363_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_236_fu_378_p1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, cntl_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state5.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_662_i_i_i_fu_363_p2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, cntl_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state5.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_236_fu_378_p1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, cntl_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state5.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_662_i_i_i_fu_363_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_663_i_i_i_fu_386_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_outputs_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_665_i_i_i_fu_435_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_665_i_i_i_fu_435_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(m_axi_outputs_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXX";
            break;
    }
}

}

