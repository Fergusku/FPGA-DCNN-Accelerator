// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _load_data131_HH_
#define _load_data131_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "copy_input_fmem2buff_2.h"
#include "copy_weight_fmem2buf_3.h"
#include "copy_beta_fmem2buffe_1.h"
#include "fifo_w1_d1_A.h"

namespace ap_rtl {

struct load_data131 : public sc_module {
    // Port declarations 266
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_out< sc_logic > m_axi_inputs_AWVALID;
    sc_in< sc_logic > m_axi_inputs_AWREADY;
    sc_out< sc_lv<32> > m_axi_inputs_AWADDR;
    sc_out< sc_lv<1> > m_axi_inputs_AWID;
    sc_out< sc_lv<32> > m_axi_inputs_AWLEN;
    sc_out< sc_lv<3> > m_axi_inputs_AWSIZE;
    sc_out< sc_lv<2> > m_axi_inputs_AWBURST;
    sc_out< sc_lv<2> > m_axi_inputs_AWLOCK;
    sc_out< sc_lv<4> > m_axi_inputs_AWCACHE;
    sc_out< sc_lv<3> > m_axi_inputs_AWPROT;
    sc_out< sc_lv<4> > m_axi_inputs_AWQOS;
    sc_out< sc_lv<4> > m_axi_inputs_AWREGION;
    sc_out< sc_lv<1> > m_axi_inputs_AWUSER;
    sc_out< sc_logic > m_axi_inputs_WVALID;
    sc_in< sc_logic > m_axi_inputs_WREADY;
    sc_out< sc_lv<16> > m_axi_inputs_WDATA;
    sc_out< sc_lv<2> > m_axi_inputs_WSTRB;
    sc_out< sc_logic > m_axi_inputs_WLAST;
    sc_out< sc_lv<1> > m_axi_inputs_WID;
    sc_out< sc_lv<1> > m_axi_inputs_WUSER;
    sc_out< sc_logic > m_axi_inputs_ARVALID;
    sc_in< sc_logic > m_axi_inputs_ARREADY;
    sc_out< sc_lv<32> > m_axi_inputs_ARADDR;
    sc_out< sc_lv<1> > m_axi_inputs_ARID;
    sc_out< sc_lv<32> > m_axi_inputs_ARLEN;
    sc_out< sc_lv<3> > m_axi_inputs_ARSIZE;
    sc_out< sc_lv<2> > m_axi_inputs_ARBURST;
    sc_out< sc_lv<2> > m_axi_inputs_ARLOCK;
    sc_out< sc_lv<4> > m_axi_inputs_ARCACHE;
    sc_out< sc_lv<3> > m_axi_inputs_ARPROT;
    sc_out< sc_lv<4> > m_axi_inputs_ARQOS;
    sc_out< sc_lv<4> > m_axi_inputs_ARREGION;
    sc_out< sc_lv<1> > m_axi_inputs_ARUSER;
    sc_in< sc_logic > m_axi_inputs_RVALID;
    sc_out< sc_logic > m_axi_inputs_RREADY;
    sc_in< sc_lv<16> > m_axi_inputs_RDATA;
    sc_in< sc_logic > m_axi_inputs_RLAST;
    sc_in< sc_lv<1> > m_axi_inputs_RID;
    sc_in< sc_lv<1> > m_axi_inputs_RUSER;
    sc_in< sc_lv<2> > m_axi_inputs_RRESP;
    sc_in< sc_logic > m_axi_inputs_BVALID;
    sc_out< sc_logic > m_axi_inputs_BREADY;
    sc_in< sc_lv<2> > m_axi_inputs_BRESP;
    sc_in< sc_lv<1> > m_axi_inputs_BID;
    sc_in< sc_lv<1> > m_axi_inputs_BUSER;
    sc_in< sc_lv<31> > inputs_offset;
    sc_out< sc_logic > m_axi_weights_AWVALID;
    sc_in< sc_logic > m_axi_weights_AWREADY;
    sc_out< sc_lv<32> > m_axi_weights_AWADDR;
    sc_out< sc_lv<1> > m_axi_weights_AWID;
    sc_out< sc_lv<32> > m_axi_weights_AWLEN;
    sc_out< sc_lv<3> > m_axi_weights_AWSIZE;
    sc_out< sc_lv<2> > m_axi_weights_AWBURST;
    sc_out< sc_lv<2> > m_axi_weights_AWLOCK;
    sc_out< sc_lv<4> > m_axi_weights_AWCACHE;
    sc_out< sc_lv<3> > m_axi_weights_AWPROT;
    sc_out< sc_lv<4> > m_axi_weights_AWQOS;
    sc_out< sc_lv<4> > m_axi_weights_AWREGION;
    sc_out< sc_lv<1> > m_axi_weights_AWUSER;
    sc_out< sc_logic > m_axi_weights_WVALID;
    sc_in< sc_logic > m_axi_weights_WREADY;
    sc_out< sc_lv<16> > m_axi_weights_WDATA;
    sc_out< sc_lv<2> > m_axi_weights_WSTRB;
    sc_out< sc_logic > m_axi_weights_WLAST;
    sc_out< sc_lv<1> > m_axi_weights_WID;
    sc_out< sc_lv<1> > m_axi_weights_WUSER;
    sc_out< sc_logic > m_axi_weights_ARVALID;
    sc_in< sc_logic > m_axi_weights_ARREADY;
    sc_out< sc_lv<32> > m_axi_weights_ARADDR;
    sc_out< sc_lv<1> > m_axi_weights_ARID;
    sc_out< sc_lv<32> > m_axi_weights_ARLEN;
    sc_out< sc_lv<3> > m_axi_weights_ARSIZE;
    sc_out< sc_lv<2> > m_axi_weights_ARBURST;
    sc_out< sc_lv<2> > m_axi_weights_ARLOCK;
    sc_out< sc_lv<4> > m_axi_weights_ARCACHE;
    sc_out< sc_lv<3> > m_axi_weights_ARPROT;
    sc_out< sc_lv<4> > m_axi_weights_ARQOS;
    sc_out< sc_lv<4> > m_axi_weights_ARREGION;
    sc_out< sc_lv<1> > m_axi_weights_ARUSER;
    sc_in< sc_logic > m_axi_weights_RVALID;
    sc_out< sc_logic > m_axi_weights_RREADY;
    sc_in< sc_lv<16> > m_axi_weights_RDATA;
    sc_in< sc_logic > m_axi_weights_RLAST;
    sc_in< sc_lv<1> > m_axi_weights_RID;
    sc_in< sc_lv<1> > m_axi_weights_RUSER;
    sc_in< sc_lv<2> > m_axi_weights_RRESP;
    sc_in< sc_logic > m_axi_weights_BVALID;
    sc_out< sc_logic > m_axi_weights_BREADY;
    sc_in< sc_lv<2> > m_axi_weights_BRESP;
    sc_in< sc_lv<1> > m_axi_weights_BID;
    sc_in< sc_lv<1> > m_axi_weights_BUSER;
    sc_in< sc_lv<31> > weights_offset;
    sc_out< sc_logic > m_axi_betas_AWVALID;
    sc_in< sc_logic > m_axi_betas_AWREADY;
    sc_out< sc_lv<32> > m_axi_betas_AWADDR;
    sc_out< sc_lv<1> > m_axi_betas_AWID;
    sc_out< sc_lv<32> > m_axi_betas_AWLEN;
    sc_out< sc_lv<3> > m_axi_betas_AWSIZE;
    sc_out< sc_lv<2> > m_axi_betas_AWBURST;
    sc_out< sc_lv<2> > m_axi_betas_AWLOCK;
    sc_out< sc_lv<4> > m_axi_betas_AWCACHE;
    sc_out< sc_lv<3> > m_axi_betas_AWPROT;
    sc_out< sc_lv<4> > m_axi_betas_AWQOS;
    sc_out< sc_lv<4> > m_axi_betas_AWREGION;
    sc_out< sc_lv<1> > m_axi_betas_AWUSER;
    sc_out< sc_logic > m_axi_betas_WVALID;
    sc_in< sc_logic > m_axi_betas_WREADY;
    sc_out< sc_lv<16> > m_axi_betas_WDATA;
    sc_out< sc_lv<2> > m_axi_betas_WSTRB;
    sc_out< sc_logic > m_axi_betas_WLAST;
    sc_out< sc_lv<1> > m_axi_betas_WID;
    sc_out< sc_lv<1> > m_axi_betas_WUSER;
    sc_out< sc_logic > m_axi_betas_ARVALID;
    sc_in< sc_logic > m_axi_betas_ARREADY;
    sc_out< sc_lv<32> > m_axi_betas_ARADDR;
    sc_out< sc_lv<1> > m_axi_betas_ARID;
    sc_out< sc_lv<32> > m_axi_betas_ARLEN;
    sc_out< sc_lv<3> > m_axi_betas_ARSIZE;
    sc_out< sc_lv<2> > m_axi_betas_ARBURST;
    sc_out< sc_lv<2> > m_axi_betas_ARLOCK;
    sc_out< sc_lv<4> > m_axi_betas_ARCACHE;
    sc_out< sc_lv<3> > m_axi_betas_ARPROT;
    sc_out< sc_lv<4> > m_axi_betas_ARQOS;
    sc_out< sc_lv<4> > m_axi_betas_ARREGION;
    sc_out< sc_lv<1> > m_axi_betas_ARUSER;
    sc_in< sc_logic > m_axi_betas_RVALID;
    sc_out< sc_logic > m_axi_betas_RREADY;
    sc_in< sc_lv<16> > m_axi_betas_RDATA;
    sc_in< sc_logic > m_axi_betas_RLAST;
    sc_in< sc_lv<1> > m_axi_betas_RID;
    sc_in< sc_lv<1> > m_axi_betas_RUSER;
    sc_in< sc_lv<2> > m_axi_betas_RRESP;
    sc_in< sc_logic > m_axi_betas_BVALID;
    sc_out< sc_logic > m_axi_betas_BREADY;
    sc_in< sc_lv<2> > m_axi_betas_BRESP;
    sc_in< sc_lv<1> > m_axi_betas_BID;
    sc_in< sc_lv<1> > m_axi_betas_BUSER;
    sc_in< sc_lv<31> > betas_offset;
    sc_out< sc_lv<16> > input_buffer_V_din;
    sc_in< sc_logic > input_buffer_V_full_n;
    sc_out< sc_logic > input_buffer_V_write;
    sc_out< sc_lv<16> > weight_buffer_0_din;
    sc_in< sc_logic > weight_buffer_0_full_n;
    sc_out< sc_logic > weight_buffer_0_write;
    sc_out< sc_lv<16> > weight_buffer_1_din;
    sc_in< sc_logic > weight_buffer_1_full_n;
    sc_out< sc_logic > weight_buffer_1_write;
    sc_out< sc_lv<16> > weight_buffer_2_din;
    sc_in< sc_logic > weight_buffer_2_full_n;
    sc_out< sc_logic > weight_buffer_2_write;
    sc_out< sc_lv<16> > weight_buffer_3_din;
    sc_in< sc_logic > weight_buffer_3_full_n;
    sc_out< sc_logic > weight_buffer_3_write;
    sc_out< sc_lv<16> > weight_buffer_4_din;
    sc_in< sc_logic > weight_buffer_4_full_n;
    sc_out< sc_logic > weight_buffer_4_write;
    sc_out< sc_lv<16> > weight_buffer_5_din;
    sc_in< sc_logic > weight_buffer_5_full_n;
    sc_out< sc_logic > weight_buffer_5_write;
    sc_out< sc_lv<16> > weight_buffer_6_din;
    sc_in< sc_logic > weight_buffer_6_full_n;
    sc_out< sc_logic > weight_buffer_6_write;
    sc_out< sc_lv<16> > weight_buffer_7_din;
    sc_in< sc_logic > weight_buffer_7_full_n;
    sc_out< sc_logic > weight_buffer_7_write;
    sc_out< sc_lv<16> > weight_buffer_8_din;
    sc_in< sc_logic > weight_buffer_8_full_n;
    sc_out< sc_logic > weight_buffer_8_write;
    sc_out< sc_lv<16> > weight_buffer_9_din;
    sc_in< sc_logic > weight_buffer_9_full_n;
    sc_out< sc_logic > weight_buffer_9_write;
    sc_out< sc_lv<16> > weight_buffer_10_din;
    sc_in< sc_logic > weight_buffer_10_full_n;
    sc_out< sc_logic > weight_buffer_10_write;
    sc_out< sc_lv<16> > weight_buffer_11_din;
    sc_in< sc_logic > weight_buffer_11_full_n;
    sc_out< sc_logic > weight_buffer_11_write;
    sc_out< sc_lv<16> > weight_buffer_12_din;
    sc_in< sc_logic > weight_buffer_12_full_n;
    sc_out< sc_logic > weight_buffer_12_write;
    sc_out< sc_lv<16> > weight_buffer_13_din;
    sc_in< sc_logic > weight_buffer_13_full_n;
    sc_out< sc_logic > weight_buffer_13_write;
    sc_out< sc_lv<16> > weight_buffer_14_din;
    sc_in< sc_logic > weight_buffer_14_full_n;
    sc_out< sc_logic > weight_buffer_14_write;
    sc_out< sc_lv<16> > weight_buffer_15_din;
    sc_in< sc_logic > weight_buffer_15_full_n;
    sc_out< sc_logic > weight_buffer_15_write;
    sc_out< sc_lv<16> > beta_buffer_0_din;
    sc_in< sc_logic > beta_buffer_0_full_n;
    sc_out< sc_logic > beta_buffer_0_write;
    sc_out< sc_lv<16> > beta_buffer_1_din;
    sc_in< sc_logic > beta_buffer_1_full_n;
    sc_out< sc_logic > beta_buffer_1_write;
    sc_out< sc_lv<16> > beta_buffer_2_din;
    sc_in< sc_logic > beta_buffer_2_full_n;
    sc_out< sc_logic > beta_buffer_2_write;
    sc_out< sc_lv<16> > beta_buffer_3_din;
    sc_in< sc_logic > beta_buffer_3_full_n;
    sc_out< sc_logic > beta_buffer_3_write;
    sc_out< sc_lv<16> > beta_buffer_4_din;
    sc_in< sc_logic > beta_buffer_4_full_n;
    sc_out< sc_logic > beta_buffer_4_write;
    sc_out< sc_lv<16> > beta_buffer_5_din;
    sc_in< sc_logic > beta_buffer_5_full_n;
    sc_out< sc_logic > beta_buffer_5_write;
    sc_out< sc_lv<16> > beta_buffer_6_din;
    sc_in< sc_logic > beta_buffer_6_full_n;
    sc_out< sc_logic > beta_buffer_6_write;
    sc_out< sc_lv<16> > beta_buffer_7_din;
    sc_in< sc_logic > beta_buffer_7_full_n;
    sc_out< sc_logic > beta_buffer_7_write;
    sc_out< sc_lv<16> > beta_buffer_8_din;
    sc_in< sc_logic > beta_buffer_8_full_n;
    sc_out< sc_logic > beta_buffer_8_write;
    sc_out< sc_lv<16> > beta_buffer_9_din;
    sc_in< sc_logic > beta_buffer_9_full_n;
    sc_out< sc_logic > beta_buffer_9_write;
    sc_out< sc_lv<16> > beta_buffer_10_din;
    sc_in< sc_logic > beta_buffer_10_full_n;
    sc_out< sc_logic > beta_buffer_10_write;
    sc_out< sc_lv<16> > beta_buffer_11_din;
    sc_in< sc_logic > beta_buffer_11_full_n;
    sc_out< sc_logic > beta_buffer_11_write;
    sc_out< sc_lv<16> > beta_buffer_12_din;
    sc_in< sc_logic > beta_buffer_12_full_n;
    sc_out< sc_logic > beta_buffer_12_write;
    sc_out< sc_lv<16> > beta_buffer_13_din;
    sc_in< sc_logic > beta_buffer_13_full_n;
    sc_out< sc_logic > beta_buffer_13_write;
    sc_out< sc_lv<16> > beta_buffer_14_din;
    sc_in< sc_logic > beta_buffer_14_full_n;
    sc_out< sc_logic > beta_buffer_14_write;
    sc_out< sc_lv<16> > beta_buffer_15_din;
    sc_in< sc_logic > beta_buffer_15_full_n;
    sc_out< sc_logic > beta_buffer_15_write;
    sc_out< sc_logic > data_buffer_V_din;
    sc_in< sc_logic > data_buffer_V_full_n;
    sc_out< sc_logic > data_buffer_V_write;
    sc_out< sc_lv<32> > data_c_V_din;
    sc_in< sc_logic > data_c_V_full_n;
    sc_out< sc_logic > data_c_V_write;
    sc_out< sc_lv<32> > data_r_V_din;
    sc_in< sc_logic > data_r_V_full_n;
    sc_out< sc_logic > data_r_V_write;
    sc_out< sc_lv<32> > data_m_V_din;
    sc_in< sc_logic > data_m_V_full_n;
    sc_out< sc_logic > data_m_V_write;
    sc_out< sc_lv<32> > data_n_V_din;
    sc_in< sc_logic > data_n_V_full_n;
    sc_out< sc_logic > data_n_V_write;
    sc_in< sc_lv<31> > outputs_offset;
    sc_out< sc_lv<31> > outputs_offset_out_din;
    sc_in< sc_logic > outputs_offset_out_full_n;
    sc_out< sc_logic > outputs_offset_out_write;
    sc_signal< sc_logic > ap_var_for_const3;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<1> > ap_var_for_const2;
    sc_signal< sc_lv<2> > ap_var_for_const1;


    // Module declarations
    load_data131(sc_module_name name);
    SC_HAS_PROCESS(load_data131);

    ~load_data131();

    sc_trace_file* mVcdFile;

    copy_input_fmem2buff_2* grp_copy_input_fmem2buff_2_fu_369;
    copy_weight_fmem2buf_3* grp_copy_weight_fmem2buf_3_fu_388;
    copy_beta_fmem2buffe_1* grp_copy_beta_fmem2buffe_1_fu_434;
    fifo_w1_d1_A* input_cntl_V_fifo_U;
    fifo_w1_d1_A* weight_cntl_V_fifo_U;
    fifo_w1_d1_A* beta_cntl_V_fifo_U;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > outputs_offset_out_blk_n;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > tmp_226_cast5_i_i_i_fu_477_p1;
    sc_signal< sc_lv<32> > tmp_226_cast5_i_i_i_reg_726;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > rLoops_fu_501_p3;
    sc_signal< sc_lv<10> > rLoops_reg_734;
    sc_signal< sc_lv<1> > tmp_fu_481_p3;
    sc_signal< sc_lv<10> > r_fu_509_p2;
    sc_signal< sc_lv<10> > r_reg_739;
    sc_signal< sc_lv<32> > tmp_92_cast4_i_i_i_fu_515_p1;
    sc_signal< sc_lv<32> > tmp_92_cast4_i_i_i_reg_745;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<10> > cLoops_fu_539_p3;
    sc_signal< sc_lv<10> > cLoops_reg_753;
    sc_signal< sc_lv<1> > tmp_443_fu_519_p3;
    sc_signal< sc_lv<10> > c_fu_547_p2;
    sc_signal< sc_lv<10> > c_reg_758;
    sc_signal< sc_lv<1> > tmp_445_reg_763;
    sc_signal< sc_lv<32> > tmp_96_cast3_i_i_i_fu_566_p1;
    sc_signal< sc_lv<32> > tmp_96_cast3_i_i_i_reg_768;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > mLoops_fu_590_p3;
    sc_signal< sc_lv<6> > mLoops_reg_776;
    sc_signal< sc_lv<1> > tmp_446_fu_570_p3;
    sc_signal< sc_lv<6> > m_fu_598_p2;
    sc_signal< sc_lv<6> > m_reg_782;
    sc_signal< sc_lv<1> > tmp_447_reg_787;
    sc_signal< sc_lv<32> > tmp_457_fu_612_p1;
    sc_signal< sc_lv<32> > tmp_457_reg_792;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<2> > nLoops_fu_638_p3;
    sc_signal< sc_lv<2> > nLoops_reg_803;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > tmp_448_nbwritereq_fu_242_p3;
    sc_signal< sc_lv<10> > tmp_324_cast1_cast4_s_fu_648_p1;
    sc_signal< sc_lv<10> > tmp_324_cast1_cast4_s_reg_809;
    sc_signal< sc_lv<10> > tmp_96_cast3_cast1_i_fu_653_p1;
    sc_signal< sc_lv<10> > tmp_96_cast3_cast1_i_reg_814;
    sc_signal< sc_lv<10> > mLoops_cast_cast2_i_s_fu_658_p1;
    sc_signal< sc_lv<10> > mLoops_cast_cast2_i_s_reg_819;
    sc_signal< sc_lv<1> > tmp_458_fu_678_p2;
    sc_signal< sc_lv<1> > tmp_458_reg_824;
    sc_signal< sc_lv<3> > n_fu_684_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > grp_copy_input_fmem2buff_2_fu_369_ap_start;
    sc_signal< sc_logic > grp_copy_input_fmem2buff_2_fu_369_ap_done;
    sc_signal< sc_logic > grp_copy_input_fmem2buff_2_fu_369_ap_idle;
    sc_signal< sc_logic > grp_copy_input_fmem2buff_2_fu_369_ap_ready;
    sc_signal< sc_logic > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_AWVALID;
    sc_signal< sc_lv<32> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_AWADDR;
    sc_signal< sc_lv<1> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_AWID;
    sc_signal< sc_lv<32> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_AWLEN;
    sc_signal< sc_lv<3> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_AWSIZE;
    sc_signal< sc_lv<2> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_AWBURST;
    sc_signal< sc_lv<2> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_AWLOCK;
    sc_signal< sc_lv<4> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_AWCACHE;
    sc_signal< sc_lv<3> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_AWPROT;
    sc_signal< sc_lv<4> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_AWQOS;
    sc_signal< sc_lv<4> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_AWREGION;
    sc_signal< sc_lv<1> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_AWUSER;
    sc_signal< sc_logic > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_WVALID;
    sc_signal< sc_lv<16> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_WDATA;
    sc_signal< sc_lv<2> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_WSTRB;
    sc_signal< sc_logic > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_WLAST;
    sc_signal< sc_lv<1> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_WID;
    sc_signal< sc_lv<1> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_WUSER;
    sc_signal< sc_logic > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_ARVALID;
    sc_signal< sc_lv<32> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_ARADDR;
    sc_signal< sc_lv<1> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_ARID;
    sc_signal< sc_lv<32> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_ARLEN;
    sc_signal< sc_lv<3> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_ARSIZE;
    sc_signal< sc_lv<2> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_ARBURST;
    sc_signal< sc_lv<2> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_ARLOCK;
    sc_signal< sc_lv<4> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_ARCACHE;
    sc_signal< sc_lv<3> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_ARPROT;
    sc_signal< sc_lv<4> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_ARQOS;
    sc_signal< sc_lv<4> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_ARREGION;
    sc_signal< sc_lv<1> > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_ARUSER;
    sc_signal< sc_logic > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_RREADY;
    sc_signal< sc_logic > grp_copy_input_fmem2buff_2_fu_369_m_axi_inputs_BREADY;
    sc_signal< sc_lv<16> > grp_copy_input_fmem2buff_2_fu_369_input_buffer_V_din;
    sc_signal< sc_logic > grp_copy_input_fmem2buff_2_fu_369_input_buffer_V_write;
    sc_signal< sc_logic > grp_copy_input_fmem2buff_2_fu_369_input_cntl_V_din;
    sc_signal< sc_logic > grp_copy_input_fmem2buff_2_fu_369_input_cntl_V_write;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_ap_start;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_ap_done;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_ap_idle;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_ap_ready;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_AWVALID;
    sc_signal< sc_lv<32> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_AWADDR;
    sc_signal< sc_lv<1> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_AWID;
    sc_signal< sc_lv<32> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_AWLEN;
    sc_signal< sc_lv<3> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_AWSIZE;
    sc_signal< sc_lv<2> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_AWBURST;
    sc_signal< sc_lv<2> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_AWLOCK;
    sc_signal< sc_lv<4> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_AWCACHE;
    sc_signal< sc_lv<3> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_AWPROT;
    sc_signal< sc_lv<4> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_AWQOS;
    sc_signal< sc_lv<4> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_AWREGION;
    sc_signal< sc_lv<1> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_AWUSER;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_WVALID;
    sc_signal< sc_lv<16> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_WDATA;
    sc_signal< sc_lv<2> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_WSTRB;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_WLAST;
    sc_signal< sc_lv<1> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_WID;
    sc_signal< sc_lv<1> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_WUSER;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_ARVALID;
    sc_signal< sc_lv<32> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_ARADDR;
    sc_signal< sc_lv<1> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_ARID;
    sc_signal< sc_lv<32> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_ARLEN;
    sc_signal< sc_lv<3> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_ARSIZE;
    sc_signal< sc_lv<2> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_ARBURST;
    sc_signal< sc_lv<2> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_ARLOCK;
    sc_signal< sc_lv<4> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_ARCACHE;
    sc_signal< sc_lv<3> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_ARPROT;
    sc_signal< sc_lv<4> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_ARQOS;
    sc_signal< sc_lv<4> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_ARREGION;
    sc_signal< sc_lv<1> > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_ARUSER;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_RREADY;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_m_axi_weights_BREADY;
    sc_signal< sc_lv<16> > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_0_V_din;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_0_V_write;
    sc_signal< sc_lv<16> > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_1_V_din;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_1_V_write;
    sc_signal< sc_lv<16> > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_2_V_din;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_2_V_write;
    sc_signal< sc_lv<16> > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_3_V_din;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_3_V_write;
    sc_signal< sc_lv<16> > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_4_V_din;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_4_V_write;
    sc_signal< sc_lv<16> > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_5_V_din;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_5_V_write;
    sc_signal< sc_lv<16> > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_6_V_din;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_6_V_write;
    sc_signal< sc_lv<16> > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_7_V_din;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_7_V_write;
    sc_signal< sc_lv<16> > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_8_V_din;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_8_V_write;
    sc_signal< sc_lv<16> > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_9_V_din;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_9_V_write;
    sc_signal< sc_lv<16> > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_10_V_din;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_10_V_write;
    sc_signal< sc_lv<16> > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_11_V_din;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_11_V_write;
    sc_signal< sc_lv<16> > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_12_V_din;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_12_V_write;
    sc_signal< sc_lv<16> > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_13_V_din;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_13_V_write;
    sc_signal< sc_lv<16> > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_14_V_din;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_14_V_write;
    sc_signal< sc_lv<16> > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_15_V_din;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_buffer_15_V_write;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_cntl_V_din;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_weight_cntl_V_write;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_ap_start;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_ap_done;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_ap_idle;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_ap_ready;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_AWVALID;
    sc_signal< sc_lv<32> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_AWADDR;
    sc_signal< sc_lv<1> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_AWID;
    sc_signal< sc_lv<32> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_AWLEN;
    sc_signal< sc_lv<3> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_AWSIZE;
    sc_signal< sc_lv<2> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_AWBURST;
    sc_signal< sc_lv<2> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_AWLOCK;
    sc_signal< sc_lv<4> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_AWCACHE;
    sc_signal< sc_lv<3> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_AWPROT;
    sc_signal< sc_lv<4> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_AWQOS;
    sc_signal< sc_lv<4> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_AWREGION;
    sc_signal< sc_lv<1> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_AWUSER;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_WVALID;
    sc_signal< sc_lv<16> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_WDATA;
    sc_signal< sc_lv<2> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_WSTRB;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_WLAST;
    sc_signal< sc_lv<1> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_WID;
    sc_signal< sc_lv<1> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_WUSER;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_ARVALID;
    sc_signal< sc_lv<32> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_ARADDR;
    sc_signal< sc_lv<1> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_ARID;
    sc_signal< sc_lv<32> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_ARLEN;
    sc_signal< sc_lv<3> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_ARSIZE;
    sc_signal< sc_lv<2> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_ARBURST;
    sc_signal< sc_lv<2> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_ARLOCK;
    sc_signal< sc_lv<4> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_ARCACHE;
    sc_signal< sc_lv<3> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_ARPROT;
    sc_signal< sc_lv<4> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_ARQOS;
    sc_signal< sc_lv<4> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_ARREGION;
    sc_signal< sc_lv<1> > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_ARUSER;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_RREADY;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_m_axi_betas_BREADY;
    sc_signal< sc_lv<16> > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_0_V_din;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_0_V_write;
    sc_signal< sc_lv<16> > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_1_V_din;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_1_V_write;
    sc_signal< sc_lv<16> > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_2_V_din;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_2_V_write;
    sc_signal< sc_lv<16> > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_3_V_din;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_3_V_write;
    sc_signal< sc_lv<16> > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_4_V_din;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_4_V_write;
    sc_signal< sc_lv<16> > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_5_V_din;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_5_V_write;
    sc_signal< sc_lv<16> > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_6_V_din;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_6_V_write;
    sc_signal< sc_lv<16> > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_7_V_din;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_7_V_write;
    sc_signal< sc_lv<16> > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_8_V_din;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_8_V_write;
    sc_signal< sc_lv<16> > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_9_V_din;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_9_V_write;
    sc_signal< sc_lv<16> > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_10_V_din;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_10_V_write;
    sc_signal< sc_lv<16> > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_11_V_din;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_11_V_write;
    sc_signal< sc_lv<16> > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_12_V_din;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_12_V_write;
    sc_signal< sc_lv<16> > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_13_V_din;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_13_V_write;
    sc_signal< sc_lv<16> > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_14_V_din;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_14_V_write;
    sc_signal< sc_lv<16> > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_15_V_din;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_buffer_15_V_write;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_cntl_V_din;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_beta_cntl_V_write;
    sc_signal< sc_lv<10> > tmp_454_reg_321;
    sc_signal< sc_lv<10> > tmp_453_reg_333;
    sc_signal< sc_lv<6> > tmp_455_reg_345;
    sc_signal< sc_lv<1> > tmp_103_i_i_i_fu_616_p2;
    sc_signal< sc_lv<3> > tmp_456_reg_357;
    sc_signal< sc_logic > grp_copy_input_fmem2buff_2_fu_369_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > input_cntl_V_din;
    sc_signal< sc_logic > input_cntl_V_full_n;
    sc_signal< sc_logic > input_cntl_V_write;
    sc_signal< sc_logic > grp_copy_weight_fmem2buf_3_fu_388_ap_start_reg;
    sc_signal< sc_lv<1> > weight_cntl_V_din;
    sc_signal< sc_logic > weight_cntl_V_full_n;
    sc_signal< sc_logic > weight_cntl_V_write;
    sc_signal< sc_logic > grp_copy_beta_fmem2buffe_1_fu_434_ap_start_reg;
    sc_signal< sc_lv<1> > beta_cntl_V_din;
    sc_signal< sc_logic > beta_cntl_V_full_n;
    sc_signal< sc_logic > beta_cntl_V_write;
    sc_signal< sc_lv<1> > tmp_450_nbreadreq_fu_250_p3;
    sc_signal< sc_lv<1> > input_cntl_V_dout;
    sc_signal< sc_logic > input_cntl_V_empty_n;
    sc_signal< sc_logic > input_cntl_V_read;
    sc_signal< sc_lv<1> > tmp_451_nbreadreq_fu_257_p3;
    sc_signal< sc_lv<1> > weight_cntl_V_dout;
    sc_signal< sc_logic > weight_cntl_V_empty_n;
    sc_signal< sc_logic > weight_cntl_V_read;
    sc_signal< sc_lv<1> > tmp_452_nbreadreq_fu_264_p3;
    sc_signal< sc_lv<1> > beta_cntl_V_dout;
    sc_signal< sc_logic > beta_cntl_V_empty_n;
    sc_signal< sc_logic > beta_cntl_V_read;
    sc_signal< sc_lv<10> > tmp_90_i_i_i_fu_489_p2;
    sc_signal< sc_lv<1> > tmp_91_i_i_i_fu_495_p2;
    sc_signal< sc_lv<10> > tmp_94_i_i_i_fu_527_p2;
    sc_signal< sc_lv<1> > tmp_95_i_i_i_fu_533_p2;
    sc_signal< sc_lv<10> > tmp_444_fu_553_p2;
    sc_signal< sc_lv<6> > tmp_98_i_i_i_fu_578_p2;
    sc_signal< sc_lv<1> > tmp_99_i_i_i_fu_584_p2;
    sc_signal< sc_lv<2> > tmp_449_fu_622_p1;
    sc_signal< sc_lv<1> > tmp_106_i_i_i_fu_632_p2;
    sc_signal< sc_lv<2> > tmp_327_cast_i_i_i_fu_626_p2;
    sc_signal< sc_lv<1> > tmp_107_i_i_i_fu_662_p2;
    sc_signal< sc_lv<1> > tmp4_i_i_i_fu_668_p2;
    sc_signal< sc_lv<1> > sel_tmp1_i_i_i_fu_673_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< bool > ap_block_state7_on_subcall_done;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<10> ap_const_lv10_10;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_10;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<3> ap_const_lv3_2;
    static const bool ap_const_boolean_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_state1();
    void thread_ap_block_state7_on_subcall_done();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_beta_buffer_0_din();
    void thread_beta_buffer_0_write();
    void thread_beta_buffer_10_din();
    void thread_beta_buffer_10_write();
    void thread_beta_buffer_11_din();
    void thread_beta_buffer_11_write();
    void thread_beta_buffer_12_din();
    void thread_beta_buffer_12_write();
    void thread_beta_buffer_13_din();
    void thread_beta_buffer_13_write();
    void thread_beta_buffer_14_din();
    void thread_beta_buffer_14_write();
    void thread_beta_buffer_15_din();
    void thread_beta_buffer_15_write();
    void thread_beta_buffer_1_din();
    void thread_beta_buffer_1_write();
    void thread_beta_buffer_2_din();
    void thread_beta_buffer_2_write();
    void thread_beta_buffer_3_din();
    void thread_beta_buffer_3_write();
    void thread_beta_buffer_4_din();
    void thread_beta_buffer_4_write();
    void thread_beta_buffer_5_din();
    void thread_beta_buffer_5_write();
    void thread_beta_buffer_6_din();
    void thread_beta_buffer_6_write();
    void thread_beta_buffer_7_din();
    void thread_beta_buffer_7_write();
    void thread_beta_buffer_8_din();
    void thread_beta_buffer_8_write();
    void thread_beta_buffer_9_din();
    void thread_beta_buffer_9_write();
    void thread_beta_cntl_V_din();
    void thread_beta_cntl_V_read();
    void thread_beta_cntl_V_write();
    void thread_cLoops_fu_539_p3();
    void thread_c_fu_547_p2();
    void thread_data_buffer_V_din();
    void thread_data_buffer_V_write();
    void thread_data_c_V_din();
    void thread_data_c_V_write();
    void thread_data_m_V_din();
    void thread_data_m_V_write();
    void thread_data_n_V_din();
    void thread_data_n_V_write();
    void thread_data_r_V_din();
    void thread_data_r_V_write();
    void thread_grp_copy_beta_fmem2buffe_1_fu_434_ap_start();
    void thread_grp_copy_input_fmem2buff_2_fu_369_ap_start();
    void thread_grp_copy_weight_fmem2buf_3_fu_388_ap_start();
    void thread_input_buffer_V_din();
    void thread_input_buffer_V_write();
    void thread_input_cntl_V_din();
    void thread_input_cntl_V_read();
    void thread_input_cntl_V_write();
    void thread_internal_ap_ready();
    void thread_mLoops_cast_cast2_i_s_fu_658_p1();
    void thread_mLoops_fu_590_p3();
    void thread_m_axi_betas_ARADDR();
    void thread_m_axi_betas_ARBURST();
    void thread_m_axi_betas_ARCACHE();
    void thread_m_axi_betas_ARID();
    void thread_m_axi_betas_ARLEN();
    void thread_m_axi_betas_ARLOCK();
    void thread_m_axi_betas_ARPROT();
    void thread_m_axi_betas_ARQOS();
    void thread_m_axi_betas_ARREGION();
    void thread_m_axi_betas_ARSIZE();
    void thread_m_axi_betas_ARUSER();
    void thread_m_axi_betas_ARVALID();
    void thread_m_axi_betas_AWADDR();
    void thread_m_axi_betas_AWBURST();
    void thread_m_axi_betas_AWCACHE();
    void thread_m_axi_betas_AWID();
    void thread_m_axi_betas_AWLEN();
    void thread_m_axi_betas_AWLOCK();
    void thread_m_axi_betas_AWPROT();
    void thread_m_axi_betas_AWQOS();
    void thread_m_axi_betas_AWREGION();
    void thread_m_axi_betas_AWSIZE();
    void thread_m_axi_betas_AWUSER();
    void thread_m_axi_betas_AWVALID();
    void thread_m_axi_betas_BREADY();
    void thread_m_axi_betas_RREADY();
    void thread_m_axi_betas_WDATA();
    void thread_m_axi_betas_WID();
    void thread_m_axi_betas_WLAST();
    void thread_m_axi_betas_WSTRB();
    void thread_m_axi_betas_WUSER();
    void thread_m_axi_betas_WVALID();
    void thread_m_axi_inputs_ARADDR();
    void thread_m_axi_inputs_ARBURST();
    void thread_m_axi_inputs_ARCACHE();
    void thread_m_axi_inputs_ARID();
    void thread_m_axi_inputs_ARLEN();
    void thread_m_axi_inputs_ARLOCK();
    void thread_m_axi_inputs_ARPROT();
    void thread_m_axi_inputs_ARQOS();
    void thread_m_axi_inputs_ARREGION();
    void thread_m_axi_inputs_ARSIZE();
    void thread_m_axi_inputs_ARUSER();
    void thread_m_axi_inputs_ARVALID();
    void thread_m_axi_inputs_AWADDR();
    void thread_m_axi_inputs_AWBURST();
    void thread_m_axi_inputs_AWCACHE();
    void thread_m_axi_inputs_AWID();
    void thread_m_axi_inputs_AWLEN();
    void thread_m_axi_inputs_AWLOCK();
    void thread_m_axi_inputs_AWPROT();
    void thread_m_axi_inputs_AWQOS();
    void thread_m_axi_inputs_AWREGION();
    void thread_m_axi_inputs_AWSIZE();
    void thread_m_axi_inputs_AWUSER();
    void thread_m_axi_inputs_AWVALID();
    void thread_m_axi_inputs_BREADY();
    void thread_m_axi_inputs_RREADY();
    void thread_m_axi_inputs_WDATA();
    void thread_m_axi_inputs_WID();
    void thread_m_axi_inputs_WLAST();
    void thread_m_axi_inputs_WSTRB();
    void thread_m_axi_inputs_WUSER();
    void thread_m_axi_inputs_WVALID();
    void thread_m_axi_weights_ARADDR();
    void thread_m_axi_weights_ARBURST();
    void thread_m_axi_weights_ARCACHE();
    void thread_m_axi_weights_ARID();
    void thread_m_axi_weights_ARLEN();
    void thread_m_axi_weights_ARLOCK();
    void thread_m_axi_weights_ARPROT();
    void thread_m_axi_weights_ARQOS();
    void thread_m_axi_weights_ARREGION();
    void thread_m_axi_weights_ARSIZE();
    void thread_m_axi_weights_ARUSER();
    void thread_m_axi_weights_ARVALID();
    void thread_m_axi_weights_AWADDR();
    void thread_m_axi_weights_AWBURST();
    void thread_m_axi_weights_AWCACHE();
    void thread_m_axi_weights_AWID();
    void thread_m_axi_weights_AWLEN();
    void thread_m_axi_weights_AWLOCK();
    void thread_m_axi_weights_AWPROT();
    void thread_m_axi_weights_AWQOS();
    void thread_m_axi_weights_AWREGION();
    void thread_m_axi_weights_AWSIZE();
    void thread_m_axi_weights_AWUSER();
    void thread_m_axi_weights_AWVALID();
    void thread_m_axi_weights_BREADY();
    void thread_m_axi_weights_RREADY();
    void thread_m_axi_weights_WDATA();
    void thread_m_axi_weights_WID();
    void thread_m_axi_weights_WLAST();
    void thread_m_axi_weights_WSTRB();
    void thread_m_axi_weights_WUSER();
    void thread_m_axi_weights_WVALID();
    void thread_m_fu_598_p2();
    void thread_nLoops_fu_638_p3();
    void thread_n_fu_684_p2();
    void thread_outputs_offset_out_blk_n();
    void thread_outputs_offset_out_din();
    void thread_outputs_offset_out_write();
    void thread_rLoops_fu_501_p3();
    void thread_r_fu_509_p2();
    void thread_real_start();
    void thread_sel_tmp1_i_i_i_fu_673_p2();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp4_i_i_i_fu_668_p2();
    void thread_tmp_103_i_i_i_fu_616_p2();
    void thread_tmp_106_i_i_i_fu_632_p2();
    void thread_tmp_107_i_i_i_fu_662_p2();
    void thread_tmp_226_cast5_i_i_i_fu_477_p1();
    void thread_tmp_324_cast1_cast4_s_fu_648_p1();
    void thread_tmp_327_cast_i_i_i_fu_626_p2();
    void thread_tmp_443_fu_519_p3();
    void thread_tmp_444_fu_553_p2();
    void thread_tmp_446_fu_570_p3();
    void thread_tmp_448_nbwritereq_fu_242_p3();
    void thread_tmp_449_fu_622_p1();
    void thread_tmp_450_nbreadreq_fu_250_p3();
    void thread_tmp_451_nbreadreq_fu_257_p3();
    void thread_tmp_452_nbreadreq_fu_264_p3();
    void thread_tmp_457_fu_612_p1();
    void thread_tmp_458_fu_678_p2();
    void thread_tmp_90_i_i_i_fu_489_p2();
    void thread_tmp_91_i_i_i_fu_495_p2();
    void thread_tmp_92_cast4_i_i_i_fu_515_p1();
    void thread_tmp_94_i_i_i_fu_527_p2();
    void thread_tmp_95_i_i_i_fu_533_p2();
    void thread_tmp_96_cast3_cast1_i_fu_653_p1();
    void thread_tmp_96_cast3_i_i_i_fu_566_p1();
    void thread_tmp_98_i_i_i_fu_578_p2();
    void thread_tmp_99_i_i_i_fu_584_p2();
    void thread_tmp_fu_481_p3();
    void thread_weight_buffer_0_din();
    void thread_weight_buffer_0_write();
    void thread_weight_buffer_10_din();
    void thread_weight_buffer_10_write();
    void thread_weight_buffer_11_din();
    void thread_weight_buffer_11_write();
    void thread_weight_buffer_12_din();
    void thread_weight_buffer_12_write();
    void thread_weight_buffer_13_din();
    void thread_weight_buffer_13_write();
    void thread_weight_buffer_14_din();
    void thread_weight_buffer_14_write();
    void thread_weight_buffer_15_din();
    void thread_weight_buffer_15_write();
    void thread_weight_buffer_1_din();
    void thread_weight_buffer_1_write();
    void thread_weight_buffer_2_din();
    void thread_weight_buffer_2_write();
    void thread_weight_buffer_3_din();
    void thread_weight_buffer_3_write();
    void thread_weight_buffer_4_din();
    void thread_weight_buffer_4_write();
    void thread_weight_buffer_5_din();
    void thread_weight_buffer_5_write();
    void thread_weight_buffer_6_din();
    void thread_weight_buffer_6_write();
    void thread_weight_buffer_7_din();
    void thread_weight_buffer_7_write();
    void thread_weight_buffer_8_din();
    void thread_weight_buffer_8_write();
    void thread_weight_buffer_9_din();
    void thread_weight_buffer_9_write();
    void thread_weight_cntl_V_din();
    void thread_weight_cntl_V_read();
    void thread_weight_cntl_V_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
