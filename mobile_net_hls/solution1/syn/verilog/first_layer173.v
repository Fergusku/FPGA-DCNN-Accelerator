// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module first_layer173 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m_axi_inputs_AWVALID,
        m_axi_inputs_AWREADY,
        m_axi_inputs_AWADDR,
        m_axi_inputs_AWID,
        m_axi_inputs_AWLEN,
        m_axi_inputs_AWSIZE,
        m_axi_inputs_AWBURST,
        m_axi_inputs_AWLOCK,
        m_axi_inputs_AWCACHE,
        m_axi_inputs_AWPROT,
        m_axi_inputs_AWQOS,
        m_axi_inputs_AWREGION,
        m_axi_inputs_AWUSER,
        m_axi_inputs_WVALID,
        m_axi_inputs_WREADY,
        m_axi_inputs_WDATA,
        m_axi_inputs_WSTRB,
        m_axi_inputs_WLAST,
        m_axi_inputs_WID,
        m_axi_inputs_WUSER,
        m_axi_inputs_ARVALID,
        m_axi_inputs_ARREADY,
        m_axi_inputs_ARADDR,
        m_axi_inputs_ARID,
        m_axi_inputs_ARLEN,
        m_axi_inputs_ARSIZE,
        m_axi_inputs_ARBURST,
        m_axi_inputs_ARLOCK,
        m_axi_inputs_ARCACHE,
        m_axi_inputs_ARPROT,
        m_axi_inputs_ARQOS,
        m_axi_inputs_ARREGION,
        m_axi_inputs_ARUSER,
        m_axi_inputs_RVALID,
        m_axi_inputs_RREADY,
        m_axi_inputs_RDATA,
        m_axi_inputs_RLAST,
        m_axi_inputs_RID,
        m_axi_inputs_RUSER,
        m_axi_inputs_RRESP,
        m_axi_inputs_BVALID,
        m_axi_inputs_BREADY,
        m_axi_inputs_BRESP,
        m_axi_inputs_BID,
        m_axi_inputs_BUSER,
        inputs_offset,
        m_axi_weights_AWVALID,
        m_axi_weights_AWREADY,
        m_axi_weights_AWADDR,
        m_axi_weights_AWID,
        m_axi_weights_AWLEN,
        m_axi_weights_AWSIZE,
        m_axi_weights_AWBURST,
        m_axi_weights_AWLOCK,
        m_axi_weights_AWCACHE,
        m_axi_weights_AWPROT,
        m_axi_weights_AWQOS,
        m_axi_weights_AWREGION,
        m_axi_weights_AWUSER,
        m_axi_weights_WVALID,
        m_axi_weights_WREADY,
        m_axi_weights_WDATA,
        m_axi_weights_WSTRB,
        m_axi_weights_WLAST,
        m_axi_weights_WID,
        m_axi_weights_WUSER,
        m_axi_weights_ARVALID,
        m_axi_weights_ARREADY,
        m_axi_weights_ARADDR,
        m_axi_weights_ARID,
        m_axi_weights_ARLEN,
        m_axi_weights_ARSIZE,
        m_axi_weights_ARBURST,
        m_axi_weights_ARLOCK,
        m_axi_weights_ARCACHE,
        m_axi_weights_ARPROT,
        m_axi_weights_ARQOS,
        m_axi_weights_ARREGION,
        m_axi_weights_ARUSER,
        m_axi_weights_RVALID,
        m_axi_weights_RREADY,
        m_axi_weights_RDATA,
        m_axi_weights_RLAST,
        m_axi_weights_RID,
        m_axi_weights_RUSER,
        m_axi_weights_RRESP,
        m_axi_weights_BVALID,
        m_axi_weights_BREADY,
        m_axi_weights_BRESP,
        m_axi_weights_BID,
        m_axi_weights_BUSER,
        weights_offset,
        m_axi_betas_AWVALID,
        m_axi_betas_AWREADY,
        m_axi_betas_AWADDR,
        m_axi_betas_AWID,
        m_axi_betas_AWLEN,
        m_axi_betas_AWSIZE,
        m_axi_betas_AWBURST,
        m_axi_betas_AWLOCK,
        m_axi_betas_AWCACHE,
        m_axi_betas_AWPROT,
        m_axi_betas_AWQOS,
        m_axi_betas_AWREGION,
        m_axi_betas_AWUSER,
        m_axi_betas_WVALID,
        m_axi_betas_WREADY,
        m_axi_betas_WDATA,
        m_axi_betas_WSTRB,
        m_axi_betas_WLAST,
        m_axi_betas_WID,
        m_axi_betas_WUSER,
        m_axi_betas_ARVALID,
        m_axi_betas_ARREADY,
        m_axi_betas_ARADDR,
        m_axi_betas_ARID,
        m_axi_betas_ARLEN,
        m_axi_betas_ARSIZE,
        m_axi_betas_ARBURST,
        m_axi_betas_ARLOCK,
        m_axi_betas_ARCACHE,
        m_axi_betas_ARPROT,
        m_axi_betas_ARQOS,
        m_axi_betas_ARREGION,
        m_axi_betas_ARUSER,
        m_axi_betas_RVALID,
        m_axi_betas_RREADY,
        m_axi_betas_RDATA,
        m_axi_betas_RLAST,
        m_axi_betas_RID,
        m_axi_betas_RUSER,
        m_axi_betas_RRESP,
        m_axi_betas_BVALID,
        m_axi_betas_BREADY,
        m_axi_betas_BRESP,
        m_axi_betas_BID,
        m_axi_betas_BUSER,
        betas_offset,
        m_axi_outputs_AWVALID,
        m_axi_outputs_AWREADY,
        m_axi_outputs_AWADDR,
        m_axi_outputs_AWID,
        m_axi_outputs_AWLEN,
        m_axi_outputs_AWSIZE,
        m_axi_outputs_AWBURST,
        m_axi_outputs_AWLOCK,
        m_axi_outputs_AWCACHE,
        m_axi_outputs_AWPROT,
        m_axi_outputs_AWQOS,
        m_axi_outputs_AWREGION,
        m_axi_outputs_AWUSER,
        m_axi_outputs_WVALID,
        m_axi_outputs_WREADY,
        m_axi_outputs_WDATA,
        m_axi_outputs_WSTRB,
        m_axi_outputs_WLAST,
        m_axi_outputs_WID,
        m_axi_outputs_WUSER,
        m_axi_outputs_ARVALID,
        m_axi_outputs_ARREADY,
        m_axi_outputs_ARADDR,
        m_axi_outputs_ARID,
        m_axi_outputs_ARLEN,
        m_axi_outputs_ARSIZE,
        m_axi_outputs_ARBURST,
        m_axi_outputs_ARLOCK,
        m_axi_outputs_ARCACHE,
        m_axi_outputs_ARPROT,
        m_axi_outputs_ARQOS,
        m_axi_outputs_ARREGION,
        m_axi_outputs_ARUSER,
        m_axi_outputs_RVALID,
        m_axi_outputs_RREADY,
        m_axi_outputs_RDATA,
        m_axi_outputs_RLAST,
        m_axi_outputs_RID,
        m_axi_outputs_RUSER,
        m_axi_outputs_RRESP,
        m_axi_outputs_BVALID,
        m_axi_outputs_BREADY,
        m_axi_outputs_BRESP,
        m_axi_outputs_BID,
        m_axi_outputs_BUSER,
        outputs_offset,
        nxt_ready_V_din,
        nxt_ready_V_full_n,
        nxt_ready_V_write,
        inputs2,
        weights2,
        betas2,
        outputs2,
        inputs3,
        weights3,
        betas3,
        outputs3,
        inputs4,
        weights4,
        betas4,
        outputs4,
        inputs5,
        weights5,
        betas5,
        outputs5,
        inputs6,
        weights6,
        betas6,
        outputs6,
        inputs7,
        weights7,
        betas7,
        outputs7,
        inputs8,
        weights8,
        betas8,
        outputs8,
        inputs9,
        weights9,
        betas9,
        outputs9,
        inputs10,
        weights10,
        betas10,
        outputs10,
        inputs11,
        weights11,
        betas11,
        outputs11,
        inputs12,
        weights12,
        betas12,
        outputs12,
        inputs13,
        weights13,
        betas13,
        outputs13,
        inputs14,
        outputs14,
        inputs15,
        weights15,
        betas15,
        outputs15,
        inputs2_out_din,
        inputs2_out_full_n,
        inputs2_out_write,
        weights2_out_din,
        weights2_out_full_n,
        weights2_out_write,
        betas2_out_din,
        betas2_out_full_n,
        betas2_out_write,
        outputs2_out_din,
        outputs2_out_full_n,
        outputs2_out_write,
        inputs3_out_din,
        inputs3_out_full_n,
        inputs3_out_write,
        weights3_out_din,
        weights3_out_full_n,
        weights3_out_write,
        betas3_out_din,
        betas3_out_full_n,
        betas3_out_write,
        outputs3_out_din,
        outputs3_out_full_n,
        outputs3_out_write,
        inputs4_out_din,
        inputs4_out_full_n,
        inputs4_out_write,
        weights4_out_din,
        weights4_out_full_n,
        weights4_out_write,
        betas4_out_din,
        betas4_out_full_n,
        betas4_out_write,
        outputs4_out_din,
        outputs4_out_full_n,
        outputs4_out_write,
        inputs5_out_din,
        inputs5_out_full_n,
        inputs5_out_write,
        weights5_out_din,
        weights5_out_full_n,
        weights5_out_write,
        betas5_out_din,
        betas5_out_full_n,
        betas5_out_write,
        outputs5_out_din,
        outputs5_out_full_n,
        outputs5_out_write,
        inputs6_out_din,
        inputs6_out_full_n,
        inputs6_out_write,
        weights6_out_din,
        weights6_out_full_n,
        weights6_out_write,
        betas6_out_din,
        betas6_out_full_n,
        betas6_out_write,
        outputs6_out_din,
        outputs6_out_full_n,
        outputs6_out_write,
        inputs7_out_din,
        inputs7_out_full_n,
        inputs7_out_write,
        weights7_out_din,
        weights7_out_full_n,
        weights7_out_write,
        betas7_out_din,
        betas7_out_full_n,
        betas7_out_write,
        outputs7_out_din,
        outputs7_out_full_n,
        outputs7_out_write,
        inputs8_out_din,
        inputs8_out_full_n,
        inputs8_out_write,
        weights8_out_din,
        weights8_out_full_n,
        weights8_out_write,
        betas8_out_din,
        betas8_out_full_n,
        betas8_out_write,
        outputs8_out_din,
        outputs8_out_full_n,
        outputs8_out_write,
        inputs9_out_din,
        inputs9_out_full_n,
        inputs9_out_write,
        weights9_out_din,
        weights9_out_full_n,
        weights9_out_write,
        betas9_out_din,
        betas9_out_full_n,
        betas9_out_write,
        outputs9_out_din,
        outputs9_out_full_n,
        outputs9_out_write,
        inputs10_out_din,
        inputs10_out_full_n,
        inputs10_out_write,
        weights10_out_din,
        weights10_out_full_n,
        weights10_out_write,
        betas10_out_din,
        betas10_out_full_n,
        betas10_out_write,
        outputs10_out_din,
        outputs10_out_full_n,
        outputs10_out_write,
        inputs11_out_din,
        inputs11_out_full_n,
        inputs11_out_write,
        weights11_out_din,
        weights11_out_full_n,
        weights11_out_write,
        betas11_out_din,
        betas11_out_full_n,
        betas11_out_write,
        outputs11_out_din,
        outputs11_out_full_n,
        outputs11_out_write,
        inputs12_out_din,
        inputs12_out_full_n,
        inputs12_out_write,
        weights12_out_din,
        weights12_out_full_n,
        weights12_out_write,
        betas12_out_din,
        betas12_out_full_n,
        betas12_out_write,
        outputs12_out_din,
        outputs12_out_full_n,
        outputs12_out_write,
        inputs13_out_din,
        inputs13_out_full_n,
        inputs13_out_write,
        weights13_out_din,
        weights13_out_full_n,
        weights13_out_write,
        betas13_out_din,
        betas13_out_full_n,
        betas13_out_write,
        outputs13_out_din,
        outputs13_out_full_n,
        outputs13_out_write,
        inputs14_out_din,
        inputs14_out_full_n,
        inputs14_out_write,
        outputs14_out_din,
        outputs14_out_full_n,
        outputs14_out_write,
        inputs15_out_din,
        inputs15_out_full_n,
        inputs15_out_write,
        weights15_out_din,
        weights15_out_full_n,
        weights15_out_write,
        betas15_out_din,
        betas15_out_full_n,
        betas15_out_write,
        outputs15_out_din,
        outputs15_out_full_n,
        outputs15_out_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   m_axi_inputs_AWVALID;
input   m_axi_inputs_AWREADY;
output  [31:0] m_axi_inputs_AWADDR;
output  [0:0] m_axi_inputs_AWID;
output  [31:0] m_axi_inputs_AWLEN;
output  [2:0] m_axi_inputs_AWSIZE;
output  [1:0] m_axi_inputs_AWBURST;
output  [1:0] m_axi_inputs_AWLOCK;
output  [3:0] m_axi_inputs_AWCACHE;
output  [2:0] m_axi_inputs_AWPROT;
output  [3:0] m_axi_inputs_AWQOS;
output  [3:0] m_axi_inputs_AWREGION;
output  [0:0] m_axi_inputs_AWUSER;
output   m_axi_inputs_WVALID;
input   m_axi_inputs_WREADY;
output  [15:0] m_axi_inputs_WDATA;
output  [1:0] m_axi_inputs_WSTRB;
output   m_axi_inputs_WLAST;
output  [0:0] m_axi_inputs_WID;
output  [0:0] m_axi_inputs_WUSER;
output   m_axi_inputs_ARVALID;
input   m_axi_inputs_ARREADY;
output  [31:0] m_axi_inputs_ARADDR;
output  [0:0] m_axi_inputs_ARID;
output  [31:0] m_axi_inputs_ARLEN;
output  [2:0] m_axi_inputs_ARSIZE;
output  [1:0] m_axi_inputs_ARBURST;
output  [1:0] m_axi_inputs_ARLOCK;
output  [3:0] m_axi_inputs_ARCACHE;
output  [2:0] m_axi_inputs_ARPROT;
output  [3:0] m_axi_inputs_ARQOS;
output  [3:0] m_axi_inputs_ARREGION;
output  [0:0] m_axi_inputs_ARUSER;
input   m_axi_inputs_RVALID;
output   m_axi_inputs_RREADY;
input  [15:0] m_axi_inputs_RDATA;
input   m_axi_inputs_RLAST;
input  [0:0] m_axi_inputs_RID;
input  [0:0] m_axi_inputs_RUSER;
input  [1:0] m_axi_inputs_RRESP;
input   m_axi_inputs_BVALID;
output   m_axi_inputs_BREADY;
input  [1:0] m_axi_inputs_BRESP;
input  [0:0] m_axi_inputs_BID;
input  [0:0] m_axi_inputs_BUSER;
input  [31:0] inputs_offset;
output   m_axi_weights_AWVALID;
input   m_axi_weights_AWREADY;
output  [31:0] m_axi_weights_AWADDR;
output  [0:0] m_axi_weights_AWID;
output  [31:0] m_axi_weights_AWLEN;
output  [2:0] m_axi_weights_AWSIZE;
output  [1:0] m_axi_weights_AWBURST;
output  [1:0] m_axi_weights_AWLOCK;
output  [3:0] m_axi_weights_AWCACHE;
output  [2:0] m_axi_weights_AWPROT;
output  [3:0] m_axi_weights_AWQOS;
output  [3:0] m_axi_weights_AWREGION;
output  [0:0] m_axi_weights_AWUSER;
output   m_axi_weights_WVALID;
input   m_axi_weights_WREADY;
output  [15:0] m_axi_weights_WDATA;
output  [1:0] m_axi_weights_WSTRB;
output   m_axi_weights_WLAST;
output  [0:0] m_axi_weights_WID;
output  [0:0] m_axi_weights_WUSER;
output   m_axi_weights_ARVALID;
input   m_axi_weights_ARREADY;
output  [31:0] m_axi_weights_ARADDR;
output  [0:0] m_axi_weights_ARID;
output  [31:0] m_axi_weights_ARLEN;
output  [2:0] m_axi_weights_ARSIZE;
output  [1:0] m_axi_weights_ARBURST;
output  [1:0] m_axi_weights_ARLOCK;
output  [3:0] m_axi_weights_ARCACHE;
output  [2:0] m_axi_weights_ARPROT;
output  [3:0] m_axi_weights_ARQOS;
output  [3:0] m_axi_weights_ARREGION;
output  [0:0] m_axi_weights_ARUSER;
input   m_axi_weights_RVALID;
output   m_axi_weights_RREADY;
input  [15:0] m_axi_weights_RDATA;
input   m_axi_weights_RLAST;
input  [0:0] m_axi_weights_RID;
input  [0:0] m_axi_weights_RUSER;
input  [1:0] m_axi_weights_RRESP;
input   m_axi_weights_BVALID;
output   m_axi_weights_BREADY;
input  [1:0] m_axi_weights_BRESP;
input  [0:0] m_axi_weights_BID;
input  [0:0] m_axi_weights_BUSER;
input  [31:0] weights_offset;
output   m_axi_betas_AWVALID;
input   m_axi_betas_AWREADY;
output  [31:0] m_axi_betas_AWADDR;
output  [0:0] m_axi_betas_AWID;
output  [31:0] m_axi_betas_AWLEN;
output  [2:0] m_axi_betas_AWSIZE;
output  [1:0] m_axi_betas_AWBURST;
output  [1:0] m_axi_betas_AWLOCK;
output  [3:0] m_axi_betas_AWCACHE;
output  [2:0] m_axi_betas_AWPROT;
output  [3:0] m_axi_betas_AWQOS;
output  [3:0] m_axi_betas_AWREGION;
output  [0:0] m_axi_betas_AWUSER;
output   m_axi_betas_WVALID;
input   m_axi_betas_WREADY;
output  [15:0] m_axi_betas_WDATA;
output  [1:0] m_axi_betas_WSTRB;
output   m_axi_betas_WLAST;
output  [0:0] m_axi_betas_WID;
output  [0:0] m_axi_betas_WUSER;
output   m_axi_betas_ARVALID;
input   m_axi_betas_ARREADY;
output  [31:0] m_axi_betas_ARADDR;
output  [0:0] m_axi_betas_ARID;
output  [31:0] m_axi_betas_ARLEN;
output  [2:0] m_axi_betas_ARSIZE;
output  [1:0] m_axi_betas_ARBURST;
output  [1:0] m_axi_betas_ARLOCK;
output  [3:0] m_axi_betas_ARCACHE;
output  [2:0] m_axi_betas_ARPROT;
output  [3:0] m_axi_betas_ARQOS;
output  [3:0] m_axi_betas_ARREGION;
output  [0:0] m_axi_betas_ARUSER;
input   m_axi_betas_RVALID;
output   m_axi_betas_RREADY;
input  [15:0] m_axi_betas_RDATA;
input   m_axi_betas_RLAST;
input  [0:0] m_axi_betas_RID;
input  [0:0] m_axi_betas_RUSER;
input  [1:0] m_axi_betas_RRESP;
input   m_axi_betas_BVALID;
output   m_axi_betas_BREADY;
input  [1:0] m_axi_betas_BRESP;
input  [0:0] m_axi_betas_BID;
input  [0:0] m_axi_betas_BUSER;
input  [31:0] betas_offset;
output   m_axi_outputs_AWVALID;
input   m_axi_outputs_AWREADY;
output  [31:0] m_axi_outputs_AWADDR;
output  [0:0] m_axi_outputs_AWID;
output  [31:0] m_axi_outputs_AWLEN;
output  [2:0] m_axi_outputs_AWSIZE;
output  [1:0] m_axi_outputs_AWBURST;
output  [1:0] m_axi_outputs_AWLOCK;
output  [3:0] m_axi_outputs_AWCACHE;
output  [2:0] m_axi_outputs_AWPROT;
output  [3:0] m_axi_outputs_AWQOS;
output  [3:0] m_axi_outputs_AWREGION;
output  [0:0] m_axi_outputs_AWUSER;
output   m_axi_outputs_WVALID;
input   m_axi_outputs_WREADY;
output  [15:0] m_axi_outputs_WDATA;
output  [1:0] m_axi_outputs_WSTRB;
output   m_axi_outputs_WLAST;
output  [0:0] m_axi_outputs_WID;
output  [0:0] m_axi_outputs_WUSER;
output   m_axi_outputs_ARVALID;
input   m_axi_outputs_ARREADY;
output  [31:0] m_axi_outputs_ARADDR;
output  [0:0] m_axi_outputs_ARID;
output  [31:0] m_axi_outputs_ARLEN;
output  [2:0] m_axi_outputs_ARSIZE;
output  [1:0] m_axi_outputs_ARBURST;
output  [1:0] m_axi_outputs_ARLOCK;
output  [3:0] m_axi_outputs_ARCACHE;
output  [2:0] m_axi_outputs_ARPROT;
output  [3:0] m_axi_outputs_ARQOS;
output  [3:0] m_axi_outputs_ARREGION;
output  [0:0] m_axi_outputs_ARUSER;
input   m_axi_outputs_RVALID;
output   m_axi_outputs_RREADY;
input  [15:0] m_axi_outputs_RDATA;
input   m_axi_outputs_RLAST;
input  [0:0] m_axi_outputs_RID;
input  [0:0] m_axi_outputs_RUSER;
input  [1:0] m_axi_outputs_RRESP;
input   m_axi_outputs_BVALID;
output   m_axi_outputs_BREADY;
input  [1:0] m_axi_outputs_BRESP;
input  [0:0] m_axi_outputs_BID;
input  [0:0] m_axi_outputs_BUSER;
input  [31:0] outputs_offset;
output   nxt_ready_V_din;
input   nxt_ready_V_full_n;
output   nxt_ready_V_write;
input  [31:0] inputs2;
input  [31:0] weights2;
input  [31:0] betas2;
input  [31:0] outputs2;
input  [31:0] inputs3;
input  [31:0] weights3;
input  [31:0] betas3;
input  [31:0] outputs3;
input  [31:0] inputs4;
input  [31:0] weights4;
input  [31:0] betas4;
input  [31:0] outputs4;
input  [31:0] inputs5;
input  [31:0] weights5;
input  [31:0] betas5;
input  [31:0] outputs5;
input  [31:0] inputs6;
input  [31:0] weights6;
input  [31:0] betas6;
input  [31:0] outputs6;
input  [31:0] inputs7;
input  [31:0] weights7;
input  [31:0] betas7;
input  [31:0] outputs7;
input  [31:0] inputs8;
input  [31:0] weights8;
input  [31:0] betas8;
input  [31:0] outputs8;
input  [31:0] inputs9;
input  [31:0] weights9;
input  [31:0] betas9;
input  [31:0] outputs9;
input  [31:0] inputs10;
input  [31:0] weights10;
input  [31:0] betas10;
input  [31:0] outputs10;
input  [31:0] inputs11;
input  [31:0] weights11;
input  [31:0] betas11;
input  [31:0] outputs11;
input  [31:0] inputs12;
input  [31:0] weights12;
input  [31:0] betas12;
input  [31:0] outputs12;
input  [31:0] inputs13;
input  [31:0] weights13;
input  [31:0] betas13;
input  [31:0] outputs13;
input  [31:0] inputs14;
input  [31:0] outputs14;
input  [31:0] inputs15;
input  [31:0] weights15;
input  [31:0] betas15;
input  [31:0] outputs15;
output  [31:0] inputs2_out_din;
input   inputs2_out_full_n;
output   inputs2_out_write;
output  [31:0] weights2_out_din;
input   weights2_out_full_n;
output   weights2_out_write;
output  [31:0] betas2_out_din;
input   betas2_out_full_n;
output   betas2_out_write;
output  [31:0] outputs2_out_din;
input   outputs2_out_full_n;
output   outputs2_out_write;
output  [31:0] inputs3_out_din;
input   inputs3_out_full_n;
output   inputs3_out_write;
output  [31:0] weights3_out_din;
input   weights3_out_full_n;
output   weights3_out_write;
output  [31:0] betas3_out_din;
input   betas3_out_full_n;
output   betas3_out_write;
output  [31:0] outputs3_out_din;
input   outputs3_out_full_n;
output   outputs3_out_write;
output  [31:0] inputs4_out_din;
input   inputs4_out_full_n;
output   inputs4_out_write;
output  [31:0] weights4_out_din;
input   weights4_out_full_n;
output   weights4_out_write;
output  [31:0] betas4_out_din;
input   betas4_out_full_n;
output   betas4_out_write;
output  [31:0] outputs4_out_din;
input   outputs4_out_full_n;
output   outputs4_out_write;
output  [31:0] inputs5_out_din;
input   inputs5_out_full_n;
output   inputs5_out_write;
output  [31:0] weights5_out_din;
input   weights5_out_full_n;
output   weights5_out_write;
output  [31:0] betas5_out_din;
input   betas5_out_full_n;
output   betas5_out_write;
output  [31:0] outputs5_out_din;
input   outputs5_out_full_n;
output   outputs5_out_write;
output  [31:0] inputs6_out_din;
input   inputs6_out_full_n;
output   inputs6_out_write;
output  [31:0] weights6_out_din;
input   weights6_out_full_n;
output   weights6_out_write;
output  [31:0] betas6_out_din;
input   betas6_out_full_n;
output   betas6_out_write;
output  [31:0] outputs6_out_din;
input   outputs6_out_full_n;
output   outputs6_out_write;
output  [31:0] inputs7_out_din;
input   inputs7_out_full_n;
output   inputs7_out_write;
output  [31:0] weights7_out_din;
input   weights7_out_full_n;
output   weights7_out_write;
output  [31:0] betas7_out_din;
input   betas7_out_full_n;
output   betas7_out_write;
output  [31:0] outputs7_out_din;
input   outputs7_out_full_n;
output   outputs7_out_write;
output  [31:0] inputs8_out_din;
input   inputs8_out_full_n;
output   inputs8_out_write;
output  [31:0] weights8_out_din;
input   weights8_out_full_n;
output   weights8_out_write;
output  [31:0] betas8_out_din;
input   betas8_out_full_n;
output   betas8_out_write;
output  [31:0] outputs8_out_din;
input   outputs8_out_full_n;
output   outputs8_out_write;
output  [31:0] inputs9_out_din;
input   inputs9_out_full_n;
output   inputs9_out_write;
output  [31:0] weights9_out_din;
input   weights9_out_full_n;
output   weights9_out_write;
output  [31:0] betas9_out_din;
input   betas9_out_full_n;
output   betas9_out_write;
output  [31:0] outputs9_out_din;
input   outputs9_out_full_n;
output   outputs9_out_write;
output  [31:0] inputs10_out_din;
input   inputs10_out_full_n;
output   inputs10_out_write;
output  [31:0] weights10_out_din;
input   weights10_out_full_n;
output   weights10_out_write;
output  [31:0] betas10_out_din;
input   betas10_out_full_n;
output   betas10_out_write;
output  [31:0] outputs10_out_din;
input   outputs10_out_full_n;
output   outputs10_out_write;
output  [31:0] inputs11_out_din;
input   inputs11_out_full_n;
output   inputs11_out_write;
output  [31:0] weights11_out_din;
input   weights11_out_full_n;
output   weights11_out_write;
output  [31:0] betas11_out_din;
input   betas11_out_full_n;
output   betas11_out_write;
output  [31:0] outputs11_out_din;
input   outputs11_out_full_n;
output   outputs11_out_write;
output  [31:0] inputs12_out_din;
input   inputs12_out_full_n;
output   inputs12_out_write;
output  [31:0] weights12_out_din;
input   weights12_out_full_n;
output   weights12_out_write;
output  [31:0] betas12_out_din;
input   betas12_out_full_n;
output   betas12_out_write;
output  [31:0] outputs12_out_din;
input   outputs12_out_full_n;
output   outputs12_out_write;
output  [31:0] inputs13_out_din;
input   inputs13_out_full_n;
output   inputs13_out_write;
output  [31:0] weights13_out_din;
input   weights13_out_full_n;
output   weights13_out_write;
output  [31:0] betas13_out_din;
input   betas13_out_full_n;
output   betas13_out_write;
output  [31:0] outputs13_out_din;
input   outputs13_out_full_n;
output   outputs13_out_write;
output  [31:0] inputs14_out_din;
input   inputs14_out_full_n;
output   inputs14_out_write;
output  [31:0] outputs14_out_din;
input   outputs14_out_full_n;
output   outputs14_out_write;
output  [31:0] inputs15_out_din;
input   inputs15_out_full_n;
output   inputs15_out_write;
output  [31:0] weights15_out_din;
input   weights15_out_full_n;
output   weights15_out_write;
output  [31:0] betas15_out_din;
input   betas15_out_full_n;
output   betas15_out_write;
output  [31:0] outputs15_out_din;
input   outputs15_out_full_n;
output   outputs15_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_inputs_ARVALID;
reg m_axi_inputs_RREADY;
reg m_axi_weights_ARVALID;
reg m_axi_weights_RREADY;
reg m_axi_betas_ARVALID;
reg m_axi_betas_RREADY;
reg m_axi_outputs_AWVALID;
reg m_axi_outputs_WVALID;
reg m_axi_outputs_BREADY;
reg nxt_ready_V_write;
reg inputs2_out_write;
reg weights2_out_write;
reg betas2_out_write;
reg outputs2_out_write;
reg inputs3_out_write;
reg weights3_out_write;
reg betas3_out_write;
reg outputs3_out_write;
reg inputs4_out_write;
reg weights4_out_write;
reg betas4_out_write;
reg outputs4_out_write;
reg inputs5_out_write;
reg weights5_out_write;
reg betas5_out_write;
reg outputs5_out_write;
reg inputs6_out_write;
reg weights6_out_write;
reg betas6_out_write;
reg outputs6_out_write;
reg inputs7_out_write;
reg weights7_out_write;
reg betas7_out_write;
reg outputs7_out_write;
reg inputs8_out_write;
reg weights8_out_write;
reg betas8_out_write;
reg outputs8_out_write;
reg inputs9_out_write;
reg weights9_out_write;
reg betas9_out_write;
reg outputs9_out_write;
reg inputs10_out_write;
reg weights10_out_write;
reg betas10_out_write;
reg outputs10_out_write;
reg inputs11_out_write;
reg weights11_out_write;
reg betas11_out_write;
reg outputs11_out_write;
reg inputs12_out_write;
reg weights12_out_write;
reg betas12_out_write;
reg outputs12_out_write;
reg inputs13_out_write;
reg weights13_out_write;
reg betas13_out_write;
reg outputs13_out_write;
reg inputs14_out_write;
reg outputs14_out_write;
reg inputs15_out_write;
reg weights15_out_write;
reg betas15_out_write;
reg outputs15_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    inputs2_out_blk_n;
reg    weights2_out_blk_n;
reg    betas2_out_blk_n;
reg    outputs2_out_blk_n;
reg    inputs3_out_blk_n;
reg    weights3_out_blk_n;
reg    betas3_out_blk_n;
reg    outputs3_out_blk_n;
reg    inputs4_out_blk_n;
reg    weights4_out_blk_n;
reg    betas4_out_blk_n;
reg    outputs4_out_blk_n;
reg    inputs5_out_blk_n;
reg    weights5_out_blk_n;
reg    betas5_out_blk_n;
reg    outputs5_out_blk_n;
reg    inputs6_out_blk_n;
reg    weights6_out_blk_n;
reg    betas6_out_blk_n;
reg    outputs6_out_blk_n;
reg    inputs7_out_blk_n;
reg    weights7_out_blk_n;
reg    betas7_out_blk_n;
reg    outputs7_out_blk_n;
reg    inputs8_out_blk_n;
reg    weights8_out_blk_n;
reg    betas8_out_blk_n;
reg    outputs8_out_blk_n;
reg    inputs9_out_blk_n;
reg    weights9_out_blk_n;
reg    betas9_out_blk_n;
reg    outputs9_out_blk_n;
reg    inputs10_out_blk_n;
reg    weights10_out_blk_n;
reg    betas10_out_blk_n;
reg    outputs10_out_blk_n;
reg    inputs11_out_blk_n;
reg    weights11_out_blk_n;
reg    betas11_out_blk_n;
reg    outputs11_out_blk_n;
reg    inputs12_out_blk_n;
reg    weights12_out_blk_n;
reg    betas12_out_blk_n;
reg    outputs12_out_blk_n;
reg    inputs13_out_blk_n;
reg    weights13_out_blk_n;
reg    betas13_out_blk_n;
reg    outputs13_out_blk_n;
reg    inputs14_out_blk_n;
reg    outputs14_out_blk_n;
reg    inputs15_out_blk_n;
reg    weights15_out_blk_n;
reg    betas15_out_blk_n;
reg    outputs15_out_blk_n;
reg   [30:0] outputs_offset6_i_i_reg_1172;
reg    ap_block_state1;
reg   [30:0] betas_offset4_i_i_reg_1177;
reg   [30:0] weights_offset2_i_i_reg_1182;
reg   [30:0] inputs_offset1_i_i_reg_1187;
wire    grp_conv_3_fu_1108_ap_start;
wire    grp_conv_3_fu_1108_ap_done;
wire    grp_conv_3_fu_1108_ap_idle;
wire    grp_conv_3_fu_1108_ap_ready;
wire    grp_conv_3_fu_1108_m_axi_inputs_AWVALID;
wire   [31:0] grp_conv_3_fu_1108_m_axi_inputs_AWADDR;
wire   [0:0] grp_conv_3_fu_1108_m_axi_inputs_AWID;
wire   [31:0] grp_conv_3_fu_1108_m_axi_inputs_AWLEN;
wire   [2:0] grp_conv_3_fu_1108_m_axi_inputs_AWSIZE;
wire   [1:0] grp_conv_3_fu_1108_m_axi_inputs_AWBURST;
wire   [1:0] grp_conv_3_fu_1108_m_axi_inputs_AWLOCK;
wire   [3:0] grp_conv_3_fu_1108_m_axi_inputs_AWCACHE;
wire   [2:0] grp_conv_3_fu_1108_m_axi_inputs_AWPROT;
wire   [3:0] grp_conv_3_fu_1108_m_axi_inputs_AWQOS;
wire   [3:0] grp_conv_3_fu_1108_m_axi_inputs_AWREGION;
wire   [0:0] grp_conv_3_fu_1108_m_axi_inputs_AWUSER;
wire    grp_conv_3_fu_1108_m_axi_inputs_WVALID;
wire   [15:0] grp_conv_3_fu_1108_m_axi_inputs_WDATA;
wire   [1:0] grp_conv_3_fu_1108_m_axi_inputs_WSTRB;
wire    grp_conv_3_fu_1108_m_axi_inputs_WLAST;
wire   [0:0] grp_conv_3_fu_1108_m_axi_inputs_WID;
wire   [0:0] grp_conv_3_fu_1108_m_axi_inputs_WUSER;
wire    grp_conv_3_fu_1108_m_axi_inputs_ARVALID;
wire   [31:0] grp_conv_3_fu_1108_m_axi_inputs_ARADDR;
wire   [0:0] grp_conv_3_fu_1108_m_axi_inputs_ARID;
wire   [31:0] grp_conv_3_fu_1108_m_axi_inputs_ARLEN;
wire   [2:0] grp_conv_3_fu_1108_m_axi_inputs_ARSIZE;
wire   [1:0] grp_conv_3_fu_1108_m_axi_inputs_ARBURST;
wire   [1:0] grp_conv_3_fu_1108_m_axi_inputs_ARLOCK;
wire   [3:0] grp_conv_3_fu_1108_m_axi_inputs_ARCACHE;
wire   [2:0] grp_conv_3_fu_1108_m_axi_inputs_ARPROT;
wire   [3:0] grp_conv_3_fu_1108_m_axi_inputs_ARQOS;
wire   [3:0] grp_conv_3_fu_1108_m_axi_inputs_ARREGION;
wire   [0:0] grp_conv_3_fu_1108_m_axi_inputs_ARUSER;
wire    grp_conv_3_fu_1108_m_axi_inputs_RREADY;
wire    grp_conv_3_fu_1108_m_axi_inputs_BREADY;
wire    grp_conv_3_fu_1108_m_axi_weights_AWVALID;
wire   [31:0] grp_conv_3_fu_1108_m_axi_weights_AWADDR;
wire   [0:0] grp_conv_3_fu_1108_m_axi_weights_AWID;
wire   [31:0] grp_conv_3_fu_1108_m_axi_weights_AWLEN;
wire   [2:0] grp_conv_3_fu_1108_m_axi_weights_AWSIZE;
wire   [1:0] grp_conv_3_fu_1108_m_axi_weights_AWBURST;
wire   [1:0] grp_conv_3_fu_1108_m_axi_weights_AWLOCK;
wire   [3:0] grp_conv_3_fu_1108_m_axi_weights_AWCACHE;
wire   [2:0] grp_conv_3_fu_1108_m_axi_weights_AWPROT;
wire   [3:0] grp_conv_3_fu_1108_m_axi_weights_AWQOS;
wire   [3:0] grp_conv_3_fu_1108_m_axi_weights_AWREGION;
wire   [0:0] grp_conv_3_fu_1108_m_axi_weights_AWUSER;
wire    grp_conv_3_fu_1108_m_axi_weights_WVALID;
wire   [15:0] grp_conv_3_fu_1108_m_axi_weights_WDATA;
wire   [1:0] grp_conv_3_fu_1108_m_axi_weights_WSTRB;
wire    grp_conv_3_fu_1108_m_axi_weights_WLAST;
wire   [0:0] grp_conv_3_fu_1108_m_axi_weights_WID;
wire   [0:0] grp_conv_3_fu_1108_m_axi_weights_WUSER;
wire    grp_conv_3_fu_1108_m_axi_weights_ARVALID;
wire   [31:0] grp_conv_3_fu_1108_m_axi_weights_ARADDR;
wire   [0:0] grp_conv_3_fu_1108_m_axi_weights_ARID;
wire   [31:0] grp_conv_3_fu_1108_m_axi_weights_ARLEN;
wire   [2:0] grp_conv_3_fu_1108_m_axi_weights_ARSIZE;
wire   [1:0] grp_conv_3_fu_1108_m_axi_weights_ARBURST;
wire   [1:0] grp_conv_3_fu_1108_m_axi_weights_ARLOCK;
wire   [3:0] grp_conv_3_fu_1108_m_axi_weights_ARCACHE;
wire   [2:0] grp_conv_3_fu_1108_m_axi_weights_ARPROT;
wire   [3:0] grp_conv_3_fu_1108_m_axi_weights_ARQOS;
wire   [3:0] grp_conv_3_fu_1108_m_axi_weights_ARREGION;
wire   [0:0] grp_conv_3_fu_1108_m_axi_weights_ARUSER;
wire    grp_conv_3_fu_1108_m_axi_weights_RREADY;
wire    grp_conv_3_fu_1108_m_axi_weights_BREADY;
wire    grp_conv_3_fu_1108_m_axi_betas_AWVALID;
wire   [31:0] grp_conv_3_fu_1108_m_axi_betas_AWADDR;
wire   [0:0] grp_conv_3_fu_1108_m_axi_betas_AWID;
wire   [31:0] grp_conv_3_fu_1108_m_axi_betas_AWLEN;
wire   [2:0] grp_conv_3_fu_1108_m_axi_betas_AWSIZE;
wire   [1:0] grp_conv_3_fu_1108_m_axi_betas_AWBURST;
wire   [1:0] grp_conv_3_fu_1108_m_axi_betas_AWLOCK;
wire   [3:0] grp_conv_3_fu_1108_m_axi_betas_AWCACHE;
wire   [2:0] grp_conv_3_fu_1108_m_axi_betas_AWPROT;
wire   [3:0] grp_conv_3_fu_1108_m_axi_betas_AWQOS;
wire   [3:0] grp_conv_3_fu_1108_m_axi_betas_AWREGION;
wire   [0:0] grp_conv_3_fu_1108_m_axi_betas_AWUSER;
wire    grp_conv_3_fu_1108_m_axi_betas_WVALID;
wire   [15:0] grp_conv_3_fu_1108_m_axi_betas_WDATA;
wire   [1:0] grp_conv_3_fu_1108_m_axi_betas_WSTRB;
wire    grp_conv_3_fu_1108_m_axi_betas_WLAST;
wire   [0:0] grp_conv_3_fu_1108_m_axi_betas_WID;
wire   [0:0] grp_conv_3_fu_1108_m_axi_betas_WUSER;
wire    grp_conv_3_fu_1108_m_axi_betas_ARVALID;
wire   [31:0] grp_conv_3_fu_1108_m_axi_betas_ARADDR;
wire   [0:0] grp_conv_3_fu_1108_m_axi_betas_ARID;
wire   [31:0] grp_conv_3_fu_1108_m_axi_betas_ARLEN;
wire   [2:0] grp_conv_3_fu_1108_m_axi_betas_ARSIZE;
wire   [1:0] grp_conv_3_fu_1108_m_axi_betas_ARBURST;
wire   [1:0] grp_conv_3_fu_1108_m_axi_betas_ARLOCK;
wire   [3:0] grp_conv_3_fu_1108_m_axi_betas_ARCACHE;
wire   [2:0] grp_conv_3_fu_1108_m_axi_betas_ARPROT;
wire   [3:0] grp_conv_3_fu_1108_m_axi_betas_ARQOS;
wire   [3:0] grp_conv_3_fu_1108_m_axi_betas_ARREGION;
wire   [0:0] grp_conv_3_fu_1108_m_axi_betas_ARUSER;
wire    grp_conv_3_fu_1108_m_axi_betas_RREADY;
wire    grp_conv_3_fu_1108_m_axi_betas_BREADY;
wire    grp_conv_3_fu_1108_m_axi_outputs_AWVALID;
wire   [31:0] grp_conv_3_fu_1108_m_axi_outputs_AWADDR;
wire   [0:0] grp_conv_3_fu_1108_m_axi_outputs_AWID;
wire   [31:0] grp_conv_3_fu_1108_m_axi_outputs_AWLEN;
wire   [2:0] grp_conv_3_fu_1108_m_axi_outputs_AWSIZE;
wire   [1:0] grp_conv_3_fu_1108_m_axi_outputs_AWBURST;
wire   [1:0] grp_conv_3_fu_1108_m_axi_outputs_AWLOCK;
wire   [3:0] grp_conv_3_fu_1108_m_axi_outputs_AWCACHE;
wire   [2:0] grp_conv_3_fu_1108_m_axi_outputs_AWPROT;
wire   [3:0] grp_conv_3_fu_1108_m_axi_outputs_AWQOS;
wire   [3:0] grp_conv_3_fu_1108_m_axi_outputs_AWREGION;
wire   [0:0] grp_conv_3_fu_1108_m_axi_outputs_AWUSER;
wire    grp_conv_3_fu_1108_m_axi_outputs_WVALID;
wire   [15:0] grp_conv_3_fu_1108_m_axi_outputs_WDATA;
wire   [1:0] grp_conv_3_fu_1108_m_axi_outputs_WSTRB;
wire    grp_conv_3_fu_1108_m_axi_outputs_WLAST;
wire   [0:0] grp_conv_3_fu_1108_m_axi_outputs_WID;
wire   [0:0] grp_conv_3_fu_1108_m_axi_outputs_WUSER;
wire    grp_conv_3_fu_1108_m_axi_outputs_ARVALID;
wire   [31:0] grp_conv_3_fu_1108_m_axi_outputs_ARADDR;
wire   [0:0] grp_conv_3_fu_1108_m_axi_outputs_ARID;
wire   [31:0] grp_conv_3_fu_1108_m_axi_outputs_ARLEN;
wire   [2:0] grp_conv_3_fu_1108_m_axi_outputs_ARSIZE;
wire   [1:0] grp_conv_3_fu_1108_m_axi_outputs_ARBURST;
wire   [1:0] grp_conv_3_fu_1108_m_axi_outputs_ARLOCK;
wire   [3:0] grp_conv_3_fu_1108_m_axi_outputs_ARCACHE;
wire   [2:0] grp_conv_3_fu_1108_m_axi_outputs_ARPROT;
wire   [3:0] grp_conv_3_fu_1108_m_axi_outputs_ARQOS;
wire   [3:0] grp_conv_3_fu_1108_m_axi_outputs_ARREGION;
wire   [0:0] grp_conv_3_fu_1108_m_axi_outputs_ARUSER;
wire    grp_conv_3_fu_1108_m_axi_outputs_RREADY;
wire    grp_conv_3_fu_1108_m_axi_outputs_BREADY;
wire    grp_conv_3_fu_1108_cntl_V_din;
wire    grp_conv_3_fu_1108_cntl_V_write;
reg    grp_conv_3_fu_1108_ap_start_reg;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_i_i_142_nbwritereq_fu_1080_p3;
wire    ap_CS_fsm_state3;
wire   [0:0] cntl_V_din;
wire    cntl_V_full_n;
reg    cntl_V_write;
wire   [0:0] tmp_i_i_nbreadreq_fu_1088_p3;
wire   [0:0] cntl_V_dout;
wire    cntl_V_empty_n;
reg    cntl_V_read;
wire    ap_CS_fsm_state4;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 grp_conv_3_fu_1108_ap_start_reg = 1'b0;
end

conv_3 grp_conv_3_fu_1108(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv_3_fu_1108_ap_start),
    .ap_done(grp_conv_3_fu_1108_ap_done),
    .ap_idle(grp_conv_3_fu_1108_ap_idle),
    .ap_ready(grp_conv_3_fu_1108_ap_ready),
    .m_axi_inputs_AWVALID(grp_conv_3_fu_1108_m_axi_inputs_AWVALID),
    .m_axi_inputs_AWREADY(1'b0),
    .m_axi_inputs_AWADDR(grp_conv_3_fu_1108_m_axi_inputs_AWADDR),
    .m_axi_inputs_AWID(grp_conv_3_fu_1108_m_axi_inputs_AWID),
    .m_axi_inputs_AWLEN(grp_conv_3_fu_1108_m_axi_inputs_AWLEN),
    .m_axi_inputs_AWSIZE(grp_conv_3_fu_1108_m_axi_inputs_AWSIZE),
    .m_axi_inputs_AWBURST(grp_conv_3_fu_1108_m_axi_inputs_AWBURST),
    .m_axi_inputs_AWLOCK(grp_conv_3_fu_1108_m_axi_inputs_AWLOCK),
    .m_axi_inputs_AWCACHE(grp_conv_3_fu_1108_m_axi_inputs_AWCACHE),
    .m_axi_inputs_AWPROT(grp_conv_3_fu_1108_m_axi_inputs_AWPROT),
    .m_axi_inputs_AWQOS(grp_conv_3_fu_1108_m_axi_inputs_AWQOS),
    .m_axi_inputs_AWREGION(grp_conv_3_fu_1108_m_axi_inputs_AWREGION),
    .m_axi_inputs_AWUSER(grp_conv_3_fu_1108_m_axi_inputs_AWUSER),
    .m_axi_inputs_WVALID(grp_conv_3_fu_1108_m_axi_inputs_WVALID),
    .m_axi_inputs_WREADY(1'b0),
    .m_axi_inputs_WDATA(grp_conv_3_fu_1108_m_axi_inputs_WDATA),
    .m_axi_inputs_WSTRB(grp_conv_3_fu_1108_m_axi_inputs_WSTRB),
    .m_axi_inputs_WLAST(grp_conv_3_fu_1108_m_axi_inputs_WLAST),
    .m_axi_inputs_WID(grp_conv_3_fu_1108_m_axi_inputs_WID),
    .m_axi_inputs_WUSER(grp_conv_3_fu_1108_m_axi_inputs_WUSER),
    .m_axi_inputs_ARVALID(grp_conv_3_fu_1108_m_axi_inputs_ARVALID),
    .m_axi_inputs_ARREADY(m_axi_inputs_ARREADY),
    .m_axi_inputs_ARADDR(grp_conv_3_fu_1108_m_axi_inputs_ARADDR),
    .m_axi_inputs_ARID(grp_conv_3_fu_1108_m_axi_inputs_ARID),
    .m_axi_inputs_ARLEN(grp_conv_3_fu_1108_m_axi_inputs_ARLEN),
    .m_axi_inputs_ARSIZE(grp_conv_3_fu_1108_m_axi_inputs_ARSIZE),
    .m_axi_inputs_ARBURST(grp_conv_3_fu_1108_m_axi_inputs_ARBURST),
    .m_axi_inputs_ARLOCK(grp_conv_3_fu_1108_m_axi_inputs_ARLOCK),
    .m_axi_inputs_ARCACHE(grp_conv_3_fu_1108_m_axi_inputs_ARCACHE),
    .m_axi_inputs_ARPROT(grp_conv_3_fu_1108_m_axi_inputs_ARPROT),
    .m_axi_inputs_ARQOS(grp_conv_3_fu_1108_m_axi_inputs_ARQOS),
    .m_axi_inputs_ARREGION(grp_conv_3_fu_1108_m_axi_inputs_ARREGION),
    .m_axi_inputs_ARUSER(grp_conv_3_fu_1108_m_axi_inputs_ARUSER),
    .m_axi_inputs_RVALID(m_axi_inputs_RVALID),
    .m_axi_inputs_RREADY(grp_conv_3_fu_1108_m_axi_inputs_RREADY),
    .m_axi_inputs_RDATA(m_axi_inputs_RDATA),
    .m_axi_inputs_RLAST(m_axi_inputs_RLAST),
    .m_axi_inputs_RID(m_axi_inputs_RID),
    .m_axi_inputs_RUSER(m_axi_inputs_RUSER),
    .m_axi_inputs_RRESP(m_axi_inputs_RRESP),
    .m_axi_inputs_BVALID(1'b0),
    .m_axi_inputs_BREADY(grp_conv_3_fu_1108_m_axi_inputs_BREADY),
    .m_axi_inputs_BRESP(2'd0),
    .m_axi_inputs_BID(1'd0),
    .m_axi_inputs_BUSER(1'd0),
    .inputs_offset(inputs_offset1_i_i_reg_1187),
    .m_axi_weights_AWVALID(grp_conv_3_fu_1108_m_axi_weights_AWVALID),
    .m_axi_weights_AWREADY(1'b0),
    .m_axi_weights_AWADDR(grp_conv_3_fu_1108_m_axi_weights_AWADDR),
    .m_axi_weights_AWID(grp_conv_3_fu_1108_m_axi_weights_AWID),
    .m_axi_weights_AWLEN(grp_conv_3_fu_1108_m_axi_weights_AWLEN),
    .m_axi_weights_AWSIZE(grp_conv_3_fu_1108_m_axi_weights_AWSIZE),
    .m_axi_weights_AWBURST(grp_conv_3_fu_1108_m_axi_weights_AWBURST),
    .m_axi_weights_AWLOCK(grp_conv_3_fu_1108_m_axi_weights_AWLOCK),
    .m_axi_weights_AWCACHE(grp_conv_3_fu_1108_m_axi_weights_AWCACHE),
    .m_axi_weights_AWPROT(grp_conv_3_fu_1108_m_axi_weights_AWPROT),
    .m_axi_weights_AWQOS(grp_conv_3_fu_1108_m_axi_weights_AWQOS),
    .m_axi_weights_AWREGION(grp_conv_3_fu_1108_m_axi_weights_AWREGION),
    .m_axi_weights_AWUSER(grp_conv_3_fu_1108_m_axi_weights_AWUSER),
    .m_axi_weights_WVALID(grp_conv_3_fu_1108_m_axi_weights_WVALID),
    .m_axi_weights_WREADY(1'b0),
    .m_axi_weights_WDATA(grp_conv_3_fu_1108_m_axi_weights_WDATA),
    .m_axi_weights_WSTRB(grp_conv_3_fu_1108_m_axi_weights_WSTRB),
    .m_axi_weights_WLAST(grp_conv_3_fu_1108_m_axi_weights_WLAST),
    .m_axi_weights_WID(grp_conv_3_fu_1108_m_axi_weights_WID),
    .m_axi_weights_WUSER(grp_conv_3_fu_1108_m_axi_weights_WUSER),
    .m_axi_weights_ARVALID(grp_conv_3_fu_1108_m_axi_weights_ARVALID),
    .m_axi_weights_ARREADY(m_axi_weights_ARREADY),
    .m_axi_weights_ARADDR(grp_conv_3_fu_1108_m_axi_weights_ARADDR),
    .m_axi_weights_ARID(grp_conv_3_fu_1108_m_axi_weights_ARID),
    .m_axi_weights_ARLEN(grp_conv_3_fu_1108_m_axi_weights_ARLEN),
    .m_axi_weights_ARSIZE(grp_conv_3_fu_1108_m_axi_weights_ARSIZE),
    .m_axi_weights_ARBURST(grp_conv_3_fu_1108_m_axi_weights_ARBURST),
    .m_axi_weights_ARLOCK(grp_conv_3_fu_1108_m_axi_weights_ARLOCK),
    .m_axi_weights_ARCACHE(grp_conv_3_fu_1108_m_axi_weights_ARCACHE),
    .m_axi_weights_ARPROT(grp_conv_3_fu_1108_m_axi_weights_ARPROT),
    .m_axi_weights_ARQOS(grp_conv_3_fu_1108_m_axi_weights_ARQOS),
    .m_axi_weights_ARREGION(grp_conv_3_fu_1108_m_axi_weights_ARREGION),
    .m_axi_weights_ARUSER(grp_conv_3_fu_1108_m_axi_weights_ARUSER),
    .m_axi_weights_RVALID(m_axi_weights_RVALID),
    .m_axi_weights_RREADY(grp_conv_3_fu_1108_m_axi_weights_RREADY),
    .m_axi_weights_RDATA(m_axi_weights_RDATA),
    .m_axi_weights_RLAST(m_axi_weights_RLAST),
    .m_axi_weights_RID(m_axi_weights_RID),
    .m_axi_weights_RUSER(m_axi_weights_RUSER),
    .m_axi_weights_RRESP(m_axi_weights_RRESP),
    .m_axi_weights_BVALID(1'b0),
    .m_axi_weights_BREADY(grp_conv_3_fu_1108_m_axi_weights_BREADY),
    .m_axi_weights_BRESP(2'd0),
    .m_axi_weights_BID(1'd0),
    .m_axi_weights_BUSER(1'd0),
    .weights_offset(weights_offset2_i_i_reg_1182),
    .m_axi_betas_AWVALID(grp_conv_3_fu_1108_m_axi_betas_AWVALID),
    .m_axi_betas_AWREADY(1'b0),
    .m_axi_betas_AWADDR(grp_conv_3_fu_1108_m_axi_betas_AWADDR),
    .m_axi_betas_AWID(grp_conv_3_fu_1108_m_axi_betas_AWID),
    .m_axi_betas_AWLEN(grp_conv_3_fu_1108_m_axi_betas_AWLEN),
    .m_axi_betas_AWSIZE(grp_conv_3_fu_1108_m_axi_betas_AWSIZE),
    .m_axi_betas_AWBURST(grp_conv_3_fu_1108_m_axi_betas_AWBURST),
    .m_axi_betas_AWLOCK(grp_conv_3_fu_1108_m_axi_betas_AWLOCK),
    .m_axi_betas_AWCACHE(grp_conv_3_fu_1108_m_axi_betas_AWCACHE),
    .m_axi_betas_AWPROT(grp_conv_3_fu_1108_m_axi_betas_AWPROT),
    .m_axi_betas_AWQOS(grp_conv_3_fu_1108_m_axi_betas_AWQOS),
    .m_axi_betas_AWREGION(grp_conv_3_fu_1108_m_axi_betas_AWREGION),
    .m_axi_betas_AWUSER(grp_conv_3_fu_1108_m_axi_betas_AWUSER),
    .m_axi_betas_WVALID(grp_conv_3_fu_1108_m_axi_betas_WVALID),
    .m_axi_betas_WREADY(1'b0),
    .m_axi_betas_WDATA(grp_conv_3_fu_1108_m_axi_betas_WDATA),
    .m_axi_betas_WSTRB(grp_conv_3_fu_1108_m_axi_betas_WSTRB),
    .m_axi_betas_WLAST(grp_conv_3_fu_1108_m_axi_betas_WLAST),
    .m_axi_betas_WID(grp_conv_3_fu_1108_m_axi_betas_WID),
    .m_axi_betas_WUSER(grp_conv_3_fu_1108_m_axi_betas_WUSER),
    .m_axi_betas_ARVALID(grp_conv_3_fu_1108_m_axi_betas_ARVALID),
    .m_axi_betas_ARREADY(m_axi_betas_ARREADY),
    .m_axi_betas_ARADDR(grp_conv_3_fu_1108_m_axi_betas_ARADDR),
    .m_axi_betas_ARID(grp_conv_3_fu_1108_m_axi_betas_ARID),
    .m_axi_betas_ARLEN(grp_conv_3_fu_1108_m_axi_betas_ARLEN),
    .m_axi_betas_ARSIZE(grp_conv_3_fu_1108_m_axi_betas_ARSIZE),
    .m_axi_betas_ARBURST(grp_conv_3_fu_1108_m_axi_betas_ARBURST),
    .m_axi_betas_ARLOCK(grp_conv_3_fu_1108_m_axi_betas_ARLOCK),
    .m_axi_betas_ARCACHE(grp_conv_3_fu_1108_m_axi_betas_ARCACHE),
    .m_axi_betas_ARPROT(grp_conv_3_fu_1108_m_axi_betas_ARPROT),
    .m_axi_betas_ARQOS(grp_conv_3_fu_1108_m_axi_betas_ARQOS),
    .m_axi_betas_ARREGION(grp_conv_3_fu_1108_m_axi_betas_ARREGION),
    .m_axi_betas_ARUSER(grp_conv_3_fu_1108_m_axi_betas_ARUSER),
    .m_axi_betas_RVALID(m_axi_betas_RVALID),
    .m_axi_betas_RREADY(grp_conv_3_fu_1108_m_axi_betas_RREADY),
    .m_axi_betas_RDATA(m_axi_betas_RDATA),
    .m_axi_betas_RLAST(m_axi_betas_RLAST),
    .m_axi_betas_RID(m_axi_betas_RID),
    .m_axi_betas_RUSER(m_axi_betas_RUSER),
    .m_axi_betas_RRESP(m_axi_betas_RRESP),
    .m_axi_betas_BVALID(1'b0),
    .m_axi_betas_BREADY(grp_conv_3_fu_1108_m_axi_betas_BREADY),
    .m_axi_betas_BRESP(2'd0),
    .m_axi_betas_BID(1'd0),
    .m_axi_betas_BUSER(1'd0),
    .betas_offset(betas_offset4_i_i_reg_1177),
    .m_axi_outputs_AWVALID(grp_conv_3_fu_1108_m_axi_outputs_AWVALID),
    .m_axi_outputs_AWREADY(m_axi_outputs_AWREADY),
    .m_axi_outputs_AWADDR(grp_conv_3_fu_1108_m_axi_outputs_AWADDR),
    .m_axi_outputs_AWID(grp_conv_3_fu_1108_m_axi_outputs_AWID),
    .m_axi_outputs_AWLEN(grp_conv_3_fu_1108_m_axi_outputs_AWLEN),
    .m_axi_outputs_AWSIZE(grp_conv_3_fu_1108_m_axi_outputs_AWSIZE),
    .m_axi_outputs_AWBURST(grp_conv_3_fu_1108_m_axi_outputs_AWBURST),
    .m_axi_outputs_AWLOCK(grp_conv_3_fu_1108_m_axi_outputs_AWLOCK),
    .m_axi_outputs_AWCACHE(grp_conv_3_fu_1108_m_axi_outputs_AWCACHE),
    .m_axi_outputs_AWPROT(grp_conv_3_fu_1108_m_axi_outputs_AWPROT),
    .m_axi_outputs_AWQOS(grp_conv_3_fu_1108_m_axi_outputs_AWQOS),
    .m_axi_outputs_AWREGION(grp_conv_3_fu_1108_m_axi_outputs_AWREGION),
    .m_axi_outputs_AWUSER(grp_conv_3_fu_1108_m_axi_outputs_AWUSER),
    .m_axi_outputs_WVALID(grp_conv_3_fu_1108_m_axi_outputs_WVALID),
    .m_axi_outputs_WREADY(m_axi_outputs_WREADY),
    .m_axi_outputs_WDATA(grp_conv_3_fu_1108_m_axi_outputs_WDATA),
    .m_axi_outputs_WSTRB(grp_conv_3_fu_1108_m_axi_outputs_WSTRB),
    .m_axi_outputs_WLAST(grp_conv_3_fu_1108_m_axi_outputs_WLAST),
    .m_axi_outputs_WID(grp_conv_3_fu_1108_m_axi_outputs_WID),
    .m_axi_outputs_WUSER(grp_conv_3_fu_1108_m_axi_outputs_WUSER),
    .m_axi_outputs_ARVALID(grp_conv_3_fu_1108_m_axi_outputs_ARVALID),
    .m_axi_outputs_ARREADY(1'b0),
    .m_axi_outputs_ARADDR(grp_conv_3_fu_1108_m_axi_outputs_ARADDR),
    .m_axi_outputs_ARID(grp_conv_3_fu_1108_m_axi_outputs_ARID),
    .m_axi_outputs_ARLEN(grp_conv_3_fu_1108_m_axi_outputs_ARLEN),
    .m_axi_outputs_ARSIZE(grp_conv_3_fu_1108_m_axi_outputs_ARSIZE),
    .m_axi_outputs_ARBURST(grp_conv_3_fu_1108_m_axi_outputs_ARBURST),
    .m_axi_outputs_ARLOCK(grp_conv_3_fu_1108_m_axi_outputs_ARLOCK),
    .m_axi_outputs_ARCACHE(grp_conv_3_fu_1108_m_axi_outputs_ARCACHE),
    .m_axi_outputs_ARPROT(grp_conv_3_fu_1108_m_axi_outputs_ARPROT),
    .m_axi_outputs_ARQOS(grp_conv_3_fu_1108_m_axi_outputs_ARQOS),
    .m_axi_outputs_ARREGION(grp_conv_3_fu_1108_m_axi_outputs_ARREGION),
    .m_axi_outputs_ARUSER(grp_conv_3_fu_1108_m_axi_outputs_ARUSER),
    .m_axi_outputs_RVALID(1'b0),
    .m_axi_outputs_RREADY(grp_conv_3_fu_1108_m_axi_outputs_RREADY),
    .m_axi_outputs_RDATA(16'd0),
    .m_axi_outputs_RLAST(1'b0),
    .m_axi_outputs_RID(1'd0),
    .m_axi_outputs_RUSER(1'd0),
    .m_axi_outputs_RRESP(2'd0),
    .m_axi_outputs_BVALID(m_axi_outputs_BVALID),
    .m_axi_outputs_BREADY(grp_conv_3_fu_1108_m_axi_outputs_BREADY),
    .m_axi_outputs_BRESP(m_axi_outputs_BRESP),
    .m_axi_outputs_BID(m_axi_outputs_BID),
    .m_axi_outputs_BUSER(m_axi_outputs_BUSER),
    .outputs_offset(outputs_offset6_i_i_reg_1172),
    .cntl_V_din(grp_conv_3_fu_1108_cntl_V_din),
    .cntl_V_full_n(cntl_V_full_n),
    .cntl_V_write(grp_conv_3_fu_1108_cntl_V_write)
);

fifo_w1_d1_A_x cntl_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(cntl_V_din),
    .if_full_n(cntl_V_full_n),
    .if_write(cntl_V_write),
    .if_dout(cntl_V_dout),
    .if_empty_n(cntl_V_empty_n),
    .if_read(cntl_V_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_conv_3_fu_1108_ap_start_reg <= 1'b0;
    end else begin
        if (((tmp_i_i_142_nbwritereq_fu_1080_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_conv_3_fu_1108_ap_start_reg <= 1'b1;
        end else if ((grp_conv_3_fu_1108_ap_ready == 1'b1)) begin
            grp_conv_3_fu_1108_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas_offset4_i_i_reg_1177 <= {{betas_offset[31:1]}};
        inputs_offset1_i_i_reg_1187 <= {{inputs_offset[31:1]}};
        outputs_offset6_i_i_reg_1172 <= {{outputs_offset[31:1]}};
        weights_offset2_i_i_reg_1182 <= {{weights_offset[31:1]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas10_out_blk_n = betas10_out_full_n;
    end else begin
        betas10_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas10_out_write = 1'b1;
    end else begin
        betas10_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas11_out_blk_n = betas11_out_full_n;
    end else begin
        betas11_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas11_out_write = 1'b1;
    end else begin
        betas11_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas12_out_blk_n = betas12_out_full_n;
    end else begin
        betas12_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas12_out_write = 1'b1;
    end else begin
        betas12_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas13_out_blk_n = betas13_out_full_n;
    end else begin
        betas13_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas13_out_write = 1'b1;
    end else begin
        betas13_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas15_out_blk_n = betas15_out_full_n;
    end else begin
        betas15_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas15_out_write = 1'b1;
    end else begin
        betas15_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas2_out_blk_n = betas2_out_full_n;
    end else begin
        betas2_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas2_out_write = 1'b1;
    end else begin
        betas2_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas3_out_blk_n = betas3_out_full_n;
    end else begin
        betas3_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas3_out_write = 1'b1;
    end else begin
        betas3_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas4_out_blk_n = betas4_out_full_n;
    end else begin
        betas4_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas4_out_write = 1'b1;
    end else begin
        betas4_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas5_out_blk_n = betas5_out_full_n;
    end else begin
        betas5_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas5_out_write = 1'b1;
    end else begin
        betas5_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas6_out_blk_n = betas6_out_full_n;
    end else begin
        betas6_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas6_out_write = 1'b1;
    end else begin
        betas6_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas7_out_blk_n = betas7_out_full_n;
    end else begin
        betas7_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas7_out_write = 1'b1;
    end else begin
        betas7_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas8_out_blk_n = betas8_out_full_n;
    end else begin
        betas8_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas8_out_write = 1'b1;
    end else begin
        betas8_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas9_out_blk_n = betas9_out_full_n;
    end else begin
        betas9_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        betas9_out_write = 1'b1;
    end else begin
        betas9_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_i_nbreadreq_fu_1088_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (cntl_V_empty_n == 1'b1))) begin
        cntl_V_read = 1'b1;
    end else begin
        cntl_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cntl_V_write = grp_conv_3_fu_1108_cntl_V_write;
    end else begin
        cntl_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs10_out_blk_n = inputs10_out_full_n;
    end else begin
        inputs10_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs10_out_write = 1'b1;
    end else begin
        inputs10_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs11_out_blk_n = inputs11_out_full_n;
    end else begin
        inputs11_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs11_out_write = 1'b1;
    end else begin
        inputs11_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs12_out_blk_n = inputs12_out_full_n;
    end else begin
        inputs12_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs12_out_write = 1'b1;
    end else begin
        inputs12_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs13_out_blk_n = inputs13_out_full_n;
    end else begin
        inputs13_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs13_out_write = 1'b1;
    end else begin
        inputs13_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs14_out_blk_n = inputs14_out_full_n;
    end else begin
        inputs14_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs14_out_write = 1'b1;
    end else begin
        inputs14_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs15_out_blk_n = inputs15_out_full_n;
    end else begin
        inputs15_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs15_out_write = 1'b1;
    end else begin
        inputs15_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs2_out_blk_n = inputs2_out_full_n;
    end else begin
        inputs2_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs2_out_write = 1'b1;
    end else begin
        inputs2_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs3_out_blk_n = inputs3_out_full_n;
    end else begin
        inputs3_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs3_out_write = 1'b1;
    end else begin
        inputs3_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs4_out_blk_n = inputs4_out_full_n;
    end else begin
        inputs4_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs4_out_write = 1'b1;
    end else begin
        inputs4_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs5_out_blk_n = inputs5_out_full_n;
    end else begin
        inputs5_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs5_out_write = 1'b1;
    end else begin
        inputs5_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs6_out_blk_n = inputs6_out_full_n;
    end else begin
        inputs6_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs6_out_write = 1'b1;
    end else begin
        inputs6_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs7_out_blk_n = inputs7_out_full_n;
    end else begin
        inputs7_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs7_out_write = 1'b1;
    end else begin
        inputs7_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs8_out_blk_n = inputs8_out_full_n;
    end else begin
        inputs8_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs8_out_write = 1'b1;
    end else begin
        inputs8_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs9_out_blk_n = inputs9_out_full_n;
    end else begin
        inputs9_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputs9_out_write = 1'b1;
    end else begin
        inputs9_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((tmp_i_i_142_nbwritereq_fu_1080_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_betas_ARVALID = grp_conv_3_fu_1108_m_axi_betas_ARVALID;
    end else begin
        m_axi_betas_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((tmp_i_i_142_nbwritereq_fu_1080_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_betas_RREADY = grp_conv_3_fu_1108_m_axi_betas_RREADY;
    end else begin
        m_axi_betas_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((tmp_i_i_142_nbwritereq_fu_1080_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_inputs_ARVALID = grp_conv_3_fu_1108_m_axi_inputs_ARVALID;
    end else begin
        m_axi_inputs_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((tmp_i_i_142_nbwritereq_fu_1080_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_inputs_RREADY = grp_conv_3_fu_1108_m_axi_inputs_RREADY;
    end else begin
        m_axi_inputs_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((tmp_i_i_142_nbwritereq_fu_1080_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_outputs_AWVALID = grp_conv_3_fu_1108_m_axi_outputs_AWVALID;
    end else begin
        m_axi_outputs_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((tmp_i_i_142_nbwritereq_fu_1080_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_outputs_BREADY = grp_conv_3_fu_1108_m_axi_outputs_BREADY;
    end else begin
        m_axi_outputs_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((tmp_i_i_142_nbwritereq_fu_1080_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_outputs_WVALID = grp_conv_3_fu_1108_m_axi_outputs_WVALID;
    end else begin
        m_axi_outputs_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((tmp_i_i_142_nbwritereq_fu_1080_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_weights_ARVALID = grp_conv_3_fu_1108_m_axi_weights_ARVALID;
    end else begin
        m_axi_weights_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((tmp_i_i_142_nbwritereq_fu_1080_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_weights_RREADY = grp_conv_3_fu_1108_m_axi_weights_RREADY;
    end else begin
        m_axi_weights_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_i_nbreadreq_fu_1088_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (nxt_ready_V_full_n == 1'b1))) begin
        nxt_ready_V_write = 1'b1;
    end else begin
        nxt_ready_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs10_out_blk_n = outputs10_out_full_n;
    end else begin
        outputs10_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs10_out_write = 1'b1;
    end else begin
        outputs10_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs11_out_blk_n = outputs11_out_full_n;
    end else begin
        outputs11_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs11_out_write = 1'b1;
    end else begin
        outputs11_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs12_out_blk_n = outputs12_out_full_n;
    end else begin
        outputs12_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs12_out_write = 1'b1;
    end else begin
        outputs12_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs13_out_blk_n = outputs13_out_full_n;
    end else begin
        outputs13_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs13_out_write = 1'b1;
    end else begin
        outputs13_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs14_out_blk_n = outputs14_out_full_n;
    end else begin
        outputs14_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs14_out_write = 1'b1;
    end else begin
        outputs14_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs15_out_blk_n = outputs15_out_full_n;
    end else begin
        outputs15_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs15_out_write = 1'b1;
    end else begin
        outputs15_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs2_out_blk_n = outputs2_out_full_n;
    end else begin
        outputs2_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs2_out_write = 1'b1;
    end else begin
        outputs2_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs3_out_blk_n = outputs3_out_full_n;
    end else begin
        outputs3_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs3_out_write = 1'b1;
    end else begin
        outputs3_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs4_out_blk_n = outputs4_out_full_n;
    end else begin
        outputs4_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs4_out_write = 1'b1;
    end else begin
        outputs4_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs5_out_blk_n = outputs5_out_full_n;
    end else begin
        outputs5_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs5_out_write = 1'b1;
    end else begin
        outputs5_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs6_out_blk_n = outputs6_out_full_n;
    end else begin
        outputs6_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs6_out_write = 1'b1;
    end else begin
        outputs6_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs7_out_blk_n = outputs7_out_full_n;
    end else begin
        outputs7_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs7_out_write = 1'b1;
    end else begin
        outputs7_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs8_out_blk_n = outputs8_out_full_n;
    end else begin
        outputs8_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs8_out_write = 1'b1;
    end else begin
        outputs8_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs9_out_blk_n = outputs9_out_full_n;
    end else begin
        outputs9_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs9_out_write = 1'b1;
    end else begin
        outputs9_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights10_out_blk_n = weights10_out_full_n;
    end else begin
        weights10_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights10_out_write = 1'b1;
    end else begin
        weights10_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights11_out_blk_n = weights11_out_full_n;
    end else begin
        weights11_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights11_out_write = 1'b1;
    end else begin
        weights11_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights12_out_blk_n = weights12_out_full_n;
    end else begin
        weights12_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights12_out_write = 1'b1;
    end else begin
        weights12_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights13_out_blk_n = weights13_out_full_n;
    end else begin
        weights13_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights13_out_write = 1'b1;
    end else begin
        weights13_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights15_out_blk_n = weights15_out_full_n;
    end else begin
        weights15_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights15_out_write = 1'b1;
    end else begin
        weights15_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights2_out_blk_n = weights2_out_full_n;
    end else begin
        weights2_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights2_out_write = 1'b1;
    end else begin
        weights2_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights3_out_blk_n = weights3_out_full_n;
    end else begin
        weights3_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights3_out_write = 1'b1;
    end else begin
        weights3_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights4_out_blk_n = weights4_out_full_n;
    end else begin
        weights4_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights4_out_write = 1'b1;
    end else begin
        weights4_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights5_out_blk_n = weights5_out_full_n;
    end else begin
        weights5_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights5_out_write = 1'b1;
    end else begin
        weights5_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights6_out_blk_n = weights6_out_full_n;
    end else begin
        weights6_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights6_out_write = 1'b1;
    end else begin
        weights6_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights7_out_blk_n = weights7_out_full_n;
    end else begin
        weights7_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights7_out_write = 1'b1;
    end else begin
        weights7_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights8_out_blk_n = weights8_out_full_n;
    end else begin
        weights8_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights8_out_write = 1'b1;
    end else begin
        weights8_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights9_out_blk_n = weights9_out_full_n;
    end else begin
        weights9_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        weights9_out_write = 1'b1;
    end else begin
        weights9_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_i_i_142_nbwritereq_fu_1080_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_conv_3_fu_1108_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (outputs15_out_full_n == 1'b0) | (betas15_out_full_n == 1'b0) | (weights15_out_full_n == 1'b0) | (inputs15_out_full_n == 1'b0) | (outputs14_out_full_n == 1'b0) | (inputs14_out_full_n == 1'b0) | (outputs13_out_full_n == 1'b0) | (betas13_out_full_n == 1'b0) | (weights13_out_full_n == 1'b0) | (inputs13_out_full_n == 1'b0) | (outputs12_out_full_n == 1'b0) | (betas12_out_full_n == 1'b0) | (weights12_out_full_n == 1'b0) | (inputs12_out_full_n == 1'b0) | (outputs11_out_full_n == 1'b0) | (betas11_out_full_n == 1'b0) | (weights11_out_full_n == 1'b0) | (inputs11_out_full_n == 1'b0) | (outputs10_out_full_n == 1'b0) | (betas10_out_full_n == 1'b0) | (weights10_out_full_n == 1'b0) | (inputs10_out_full_n == 1'b0) | (outputs9_out_full_n == 1'b0) | (betas9_out_full_n == 1'b0) | (weights9_out_full_n == 1'b0) | (inputs9_out_full_n == 1'b0) | (outputs8_out_full_n == 1'b0) | (betas8_out_full_n == 1'b0) | (weights8_out_full_n == 1'b0) | (inputs8_out_full_n == 1'b0) | (outputs7_out_full_n == 1'b0) | (betas7_out_full_n == 1'b0) | (weights7_out_full_n == 1'b0) | (inputs7_out_full_n == 1'b0) | (outputs6_out_full_n == 1'b0) | (betas6_out_full_n == 1'b0) | (weights6_out_full_n == 1'b0) | (inputs6_out_full_n == 1'b0) | (outputs5_out_full_n == 1'b0) | (betas5_out_full_n == 1'b0) | (weights5_out_full_n == 1'b0) | (inputs5_out_full_n == 1'b0) | (outputs4_out_full_n == 1'b0) | (betas4_out_full_n == 1'b0) | (weights4_out_full_n == 1'b0) | (inputs4_out_full_n == 1'b0) | (outputs3_out_full_n == 1'b0) | (betas3_out_full_n == 1'b0) | (weights3_out_full_n == 1'b0) | (inputs3_out_full_n == 1'b0) | (outputs2_out_full_n == 1'b0) | (betas2_out_full_n == 1'b0) | (weights2_out_full_n == 1'b0) | (inputs2_out_full_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign betas10_out_din = betas10;

assign betas11_out_din = betas11;

assign betas12_out_din = betas12;

assign betas13_out_din = betas13;

assign betas15_out_din = betas15;

assign betas2_out_din = betas2;

assign betas3_out_din = betas3;

assign betas4_out_din = betas4;

assign betas5_out_din = betas5;

assign betas6_out_din = betas6;

assign betas7_out_din = betas7;

assign betas8_out_din = betas8;

assign betas9_out_din = betas9;

assign cntl_V_din = grp_conv_3_fu_1108_cntl_V_din;

assign grp_conv_3_fu_1108_ap_start = grp_conv_3_fu_1108_ap_start_reg;

assign inputs10_out_din = inputs10;

assign inputs11_out_din = inputs11;

assign inputs12_out_din = inputs12;

assign inputs13_out_din = inputs13;

assign inputs14_out_din = inputs14;

assign inputs15_out_din = inputs15;

assign inputs2_out_din = inputs2;

assign inputs3_out_din = inputs3;

assign inputs4_out_din = inputs4;

assign inputs5_out_din = inputs5;

assign inputs6_out_din = inputs6;

assign inputs7_out_din = inputs7;

assign inputs8_out_din = inputs8;

assign inputs9_out_din = inputs9;

assign m_axi_betas_ARADDR = grp_conv_3_fu_1108_m_axi_betas_ARADDR;

assign m_axi_betas_ARBURST = grp_conv_3_fu_1108_m_axi_betas_ARBURST;

assign m_axi_betas_ARCACHE = grp_conv_3_fu_1108_m_axi_betas_ARCACHE;

assign m_axi_betas_ARID = grp_conv_3_fu_1108_m_axi_betas_ARID;

assign m_axi_betas_ARLEN = grp_conv_3_fu_1108_m_axi_betas_ARLEN;

assign m_axi_betas_ARLOCK = grp_conv_3_fu_1108_m_axi_betas_ARLOCK;

assign m_axi_betas_ARPROT = grp_conv_3_fu_1108_m_axi_betas_ARPROT;

assign m_axi_betas_ARQOS = grp_conv_3_fu_1108_m_axi_betas_ARQOS;

assign m_axi_betas_ARREGION = grp_conv_3_fu_1108_m_axi_betas_ARREGION;

assign m_axi_betas_ARSIZE = grp_conv_3_fu_1108_m_axi_betas_ARSIZE;

assign m_axi_betas_ARUSER = grp_conv_3_fu_1108_m_axi_betas_ARUSER;

assign m_axi_betas_AWADDR = 32'd0;

assign m_axi_betas_AWBURST = 2'd0;

assign m_axi_betas_AWCACHE = 4'd0;

assign m_axi_betas_AWID = 1'd0;

assign m_axi_betas_AWLEN = 32'd0;

assign m_axi_betas_AWLOCK = 2'd0;

assign m_axi_betas_AWPROT = 3'd0;

assign m_axi_betas_AWQOS = 4'd0;

assign m_axi_betas_AWREGION = 4'd0;

assign m_axi_betas_AWSIZE = 3'd0;

assign m_axi_betas_AWUSER = 1'd0;

assign m_axi_betas_AWVALID = 1'b0;

assign m_axi_betas_BREADY = 1'b0;

assign m_axi_betas_WDATA = 16'd0;

assign m_axi_betas_WID = 1'd0;

assign m_axi_betas_WLAST = 1'b0;

assign m_axi_betas_WSTRB = 2'd0;

assign m_axi_betas_WUSER = 1'd0;

assign m_axi_betas_WVALID = 1'b0;

assign m_axi_inputs_ARADDR = grp_conv_3_fu_1108_m_axi_inputs_ARADDR;

assign m_axi_inputs_ARBURST = grp_conv_3_fu_1108_m_axi_inputs_ARBURST;

assign m_axi_inputs_ARCACHE = grp_conv_3_fu_1108_m_axi_inputs_ARCACHE;

assign m_axi_inputs_ARID = grp_conv_3_fu_1108_m_axi_inputs_ARID;

assign m_axi_inputs_ARLEN = grp_conv_3_fu_1108_m_axi_inputs_ARLEN;

assign m_axi_inputs_ARLOCK = grp_conv_3_fu_1108_m_axi_inputs_ARLOCK;

assign m_axi_inputs_ARPROT = grp_conv_3_fu_1108_m_axi_inputs_ARPROT;

assign m_axi_inputs_ARQOS = grp_conv_3_fu_1108_m_axi_inputs_ARQOS;

assign m_axi_inputs_ARREGION = grp_conv_3_fu_1108_m_axi_inputs_ARREGION;

assign m_axi_inputs_ARSIZE = grp_conv_3_fu_1108_m_axi_inputs_ARSIZE;

assign m_axi_inputs_ARUSER = grp_conv_3_fu_1108_m_axi_inputs_ARUSER;

assign m_axi_inputs_AWADDR = 32'd0;

assign m_axi_inputs_AWBURST = 2'd0;

assign m_axi_inputs_AWCACHE = 4'd0;

assign m_axi_inputs_AWID = 1'd0;

assign m_axi_inputs_AWLEN = 32'd0;

assign m_axi_inputs_AWLOCK = 2'd0;

assign m_axi_inputs_AWPROT = 3'd0;

assign m_axi_inputs_AWQOS = 4'd0;

assign m_axi_inputs_AWREGION = 4'd0;

assign m_axi_inputs_AWSIZE = 3'd0;

assign m_axi_inputs_AWUSER = 1'd0;

assign m_axi_inputs_AWVALID = 1'b0;

assign m_axi_inputs_BREADY = 1'b0;

assign m_axi_inputs_WDATA = 16'd0;

assign m_axi_inputs_WID = 1'd0;

assign m_axi_inputs_WLAST = 1'b0;

assign m_axi_inputs_WSTRB = 2'd0;

assign m_axi_inputs_WUSER = 1'd0;

assign m_axi_inputs_WVALID = 1'b0;

assign m_axi_outputs_ARADDR = 32'd0;

assign m_axi_outputs_ARBURST = 2'd0;

assign m_axi_outputs_ARCACHE = 4'd0;

assign m_axi_outputs_ARID = 1'd0;

assign m_axi_outputs_ARLEN = 32'd0;

assign m_axi_outputs_ARLOCK = 2'd0;

assign m_axi_outputs_ARPROT = 3'd0;

assign m_axi_outputs_ARQOS = 4'd0;

assign m_axi_outputs_ARREGION = 4'd0;

assign m_axi_outputs_ARSIZE = 3'd0;

assign m_axi_outputs_ARUSER = 1'd0;

assign m_axi_outputs_ARVALID = 1'b0;

assign m_axi_outputs_AWADDR = grp_conv_3_fu_1108_m_axi_outputs_AWADDR;

assign m_axi_outputs_AWBURST = grp_conv_3_fu_1108_m_axi_outputs_AWBURST;

assign m_axi_outputs_AWCACHE = grp_conv_3_fu_1108_m_axi_outputs_AWCACHE;

assign m_axi_outputs_AWID = grp_conv_3_fu_1108_m_axi_outputs_AWID;

assign m_axi_outputs_AWLEN = grp_conv_3_fu_1108_m_axi_outputs_AWLEN;

assign m_axi_outputs_AWLOCK = grp_conv_3_fu_1108_m_axi_outputs_AWLOCK;

assign m_axi_outputs_AWPROT = grp_conv_3_fu_1108_m_axi_outputs_AWPROT;

assign m_axi_outputs_AWQOS = grp_conv_3_fu_1108_m_axi_outputs_AWQOS;

assign m_axi_outputs_AWREGION = grp_conv_3_fu_1108_m_axi_outputs_AWREGION;

assign m_axi_outputs_AWSIZE = grp_conv_3_fu_1108_m_axi_outputs_AWSIZE;

assign m_axi_outputs_AWUSER = grp_conv_3_fu_1108_m_axi_outputs_AWUSER;

assign m_axi_outputs_RREADY = 1'b0;

assign m_axi_outputs_WDATA = grp_conv_3_fu_1108_m_axi_outputs_WDATA;

assign m_axi_outputs_WID = grp_conv_3_fu_1108_m_axi_outputs_WID;

assign m_axi_outputs_WLAST = grp_conv_3_fu_1108_m_axi_outputs_WLAST;

assign m_axi_outputs_WSTRB = grp_conv_3_fu_1108_m_axi_outputs_WSTRB;

assign m_axi_outputs_WUSER = grp_conv_3_fu_1108_m_axi_outputs_WUSER;

assign m_axi_weights_ARADDR = grp_conv_3_fu_1108_m_axi_weights_ARADDR;

assign m_axi_weights_ARBURST = grp_conv_3_fu_1108_m_axi_weights_ARBURST;

assign m_axi_weights_ARCACHE = grp_conv_3_fu_1108_m_axi_weights_ARCACHE;

assign m_axi_weights_ARID = grp_conv_3_fu_1108_m_axi_weights_ARID;

assign m_axi_weights_ARLEN = grp_conv_3_fu_1108_m_axi_weights_ARLEN;

assign m_axi_weights_ARLOCK = grp_conv_3_fu_1108_m_axi_weights_ARLOCK;

assign m_axi_weights_ARPROT = grp_conv_3_fu_1108_m_axi_weights_ARPROT;

assign m_axi_weights_ARQOS = grp_conv_3_fu_1108_m_axi_weights_ARQOS;

assign m_axi_weights_ARREGION = grp_conv_3_fu_1108_m_axi_weights_ARREGION;

assign m_axi_weights_ARSIZE = grp_conv_3_fu_1108_m_axi_weights_ARSIZE;

assign m_axi_weights_ARUSER = grp_conv_3_fu_1108_m_axi_weights_ARUSER;

assign m_axi_weights_AWADDR = 32'd0;

assign m_axi_weights_AWBURST = 2'd0;

assign m_axi_weights_AWCACHE = 4'd0;

assign m_axi_weights_AWID = 1'd0;

assign m_axi_weights_AWLEN = 32'd0;

assign m_axi_weights_AWLOCK = 2'd0;

assign m_axi_weights_AWPROT = 3'd0;

assign m_axi_weights_AWQOS = 4'd0;

assign m_axi_weights_AWREGION = 4'd0;

assign m_axi_weights_AWSIZE = 3'd0;

assign m_axi_weights_AWUSER = 1'd0;

assign m_axi_weights_AWVALID = 1'b0;

assign m_axi_weights_BREADY = 1'b0;

assign m_axi_weights_WDATA = 16'd0;

assign m_axi_weights_WID = 1'd0;

assign m_axi_weights_WLAST = 1'b0;

assign m_axi_weights_WSTRB = 2'd0;

assign m_axi_weights_WUSER = 1'd0;

assign m_axi_weights_WVALID = 1'b0;

assign nxt_ready_V_din = 1'd0;

assign outputs10_out_din = outputs10;

assign outputs11_out_din = outputs11;

assign outputs12_out_din = outputs12;

assign outputs13_out_din = outputs13;

assign outputs14_out_din = outputs14;

assign outputs15_out_din = outputs15;

assign outputs2_out_din = outputs2;

assign outputs3_out_din = outputs3;

assign outputs4_out_din = outputs4;

assign outputs5_out_din = outputs5;

assign outputs6_out_din = outputs6;

assign outputs7_out_din = outputs7;

assign outputs8_out_din = outputs8;

assign outputs9_out_din = outputs9;

assign tmp_i_i_142_nbwritereq_fu_1080_p3 = nxt_ready_V_full_n;

assign tmp_i_i_nbreadreq_fu_1088_p3 = cntl_V_empty_n;

assign weights10_out_din = weights10;

assign weights11_out_din = weights11;

assign weights12_out_din = weights12;

assign weights13_out_din = weights13;

assign weights15_out_din = weights15;

assign weights2_out_din = weights2;

assign weights3_out_din = weights3;

assign weights4_out_din = weights4;

assign weights5_out_din = weights5;

assign weights6_out_din = weights6;

assign weights7_out_din = weights7;

assign weights8_out_din = weights8;

assign weights9_out_din = weights9;

endmodule //first_layer173
