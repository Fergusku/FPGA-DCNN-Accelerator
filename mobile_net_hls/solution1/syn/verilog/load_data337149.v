// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module load_data337149 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        m_axi_inputs_AWVALID,
        m_axi_inputs_AWREADY,
        m_axi_inputs_AWADDR,
        m_axi_inputs_AWID,
        m_axi_inputs_AWLEN,
        m_axi_inputs_AWSIZE,
        m_axi_inputs_AWBURST,
        m_axi_inputs_AWLOCK,
        m_axi_inputs_AWCACHE,
        m_axi_inputs_AWPROT,
        m_axi_inputs_AWQOS,
        m_axi_inputs_AWREGION,
        m_axi_inputs_AWUSER,
        m_axi_inputs_WVALID,
        m_axi_inputs_WREADY,
        m_axi_inputs_WDATA,
        m_axi_inputs_WSTRB,
        m_axi_inputs_WLAST,
        m_axi_inputs_WID,
        m_axi_inputs_WUSER,
        m_axi_inputs_ARVALID,
        m_axi_inputs_ARREADY,
        m_axi_inputs_ARADDR,
        m_axi_inputs_ARID,
        m_axi_inputs_ARLEN,
        m_axi_inputs_ARSIZE,
        m_axi_inputs_ARBURST,
        m_axi_inputs_ARLOCK,
        m_axi_inputs_ARCACHE,
        m_axi_inputs_ARPROT,
        m_axi_inputs_ARQOS,
        m_axi_inputs_ARREGION,
        m_axi_inputs_ARUSER,
        m_axi_inputs_RVALID,
        m_axi_inputs_RREADY,
        m_axi_inputs_RDATA,
        m_axi_inputs_RLAST,
        m_axi_inputs_RID,
        m_axi_inputs_RUSER,
        m_axi_inputs_RRESP,
        m_axi_inputs_BVALID,
        m_axi_inputs_BREADY,
        m_axi_inputs_BRESP,
        m_axi_inputs_BID,
        m_axi_inputs_BUSER,
        inputs_offset,
        inputs_offset1,
        m_axi_weights_AWVALID,
        m_axi_weights_AWREADY,
        m_axi_weights_AWADDR,
        m_axi_weights_AWID,
        m_axi_weights_AWLEN,
        m_axi_weights_AWSIZE,
        m_axi_weights_AWBURST,
        m_axi_weights_AWLOCK,
        m_axi_weights_AWCACHE,
        m_axi_weights_AWPROT,
        m_axi_weights_AWQOS,
        m_axi_weights_AWREGION,
        m_axi_weights_AWUSER,
        m_axi_weights_WVALID,
        m_axi_weights_WREADY,
        m_axi_weights_WDATA,
        m_axi_weights_WSTRB,
        m_axi_weights_WLAST,
        m_axi_weights_WID,
        m_axi_weights_WUSER,
        m_axi_weights_ARVALID,
        m_axi_weights_ARREADY,
        m_axi_weights_ARADDR,
        m_axi_weights_ARID,
        m_axi_weights_ARLEN,
        m_axi_weights_ARSIZE,
        m_axi_weights_ARBURST,
        m_axi_weights_ARLOCK,
        m_axi_weights_ARCACHE,
        m_axi_weights_ARPROT,
        m_axi_weights_ARQOS,
        m_axi_weights_ARREGION,
        m_axi_weights_ARUSER,
        m_axi_weights_RVALID,
        m_axi_weights_RREADY,
        m_axi_weights_RDATA,
        m_axi_weights_RLAST,
        m_axi_weights_RID,
        m_axi_weights_RUSER,
        m_axi_weights_RRESP,
        m_axi_weights_BVALID,
        m_axi_weights_BREADY,
        m_axi_weights_BRESP,
        m_axi_weights_BID,
        m_axi_weights_BUSER,
        weights_offset,
        m_axi_betas_AWVALID,
        m_axi_betas_AWREADY,
        m_axi_betas_AWADDR,
        m_axi_betas_AWID,
        m_axi_betas_AWLEN,
        m_axi_betas_AWSIZE,
        m_axi_betas_AWBURST,
        m_axi_betas_AWLOCK,
        m_axi_betas_AWCACHE,
        m_axi_betas_AWPROT,
        m_axi_betas_AWQOS,
        m_axi_betas_AWREGION,
        m_axi_betas_AWUSER,
        m_axi_betas_WVALID,
        m_axi_betas_WREADY,
        m_axi_betas_WDATA,
        m_axi_betas_WSTRB,
        m_axi_betas_WLAST,
        m_axi_betas_WID,
        m_axi_betas_WUSER,
        m_axi_betas_ARVALID,
        m_axi_betas_ARREADY,
        m_axi_betas_ARADDR,
        m_axi_betas_ARID,
        m_axi_betas_ARLEN,
        m_axi_betas_ARSIZE,
        m_axi_betas_ARBURST,
        m_axi_betas_ARLOCK,
        m_axi_betas_ARCACHE,
        m_axi_betas_ARPROT,
        m_axi_betas_ARQOS,
        m_axi_betas_ARREGION,
        m_axi_betas_ARUSER,
        m_axi_betas_RVALID,
        m_axi_betas_RREADY,
        m_axi_betas_RDATA,
        m_axi_betas_RLAST,
        m_axi_betas_RID,
        m_axi_betas_RUSER,
        m_axi_betas_RRESP,
        m_axi_betas_BVALID,
        m_axi_betas_BREADY,
        m_axi_betas_BRESP,
        m_axi_betas_BID,
        m_axi_betas_BUSER,
        betas_offset,
        input_buffer_V_din,
        input_buffer_V_full_n,
        input_buffer_V_write,
        weight_buffer_0_din,
        weight_buffer_0_full_n,
        weight_buffer_0_write,
        weight_buffer_1_din,
        weight_buffer_1_full_n,
        weight_buffer_1_write,
        weight_buffer_2_din,
        weight_buffer_2_full_n,
        weight_buffer_2_write,
        weight_buffer_3_din,
        weight_buffer_3_full_n,
        weight_buffer_3_write,
        weight_buffer_4_din,
        weight_buffer_4_full_n,
        weight_buffer_4_write,
        weight_buffer_5_din,
        weight_buffer_5_full_n,
        weight_buffer_5_write,
        weight_buffer_6_din,
        weight_buffer_6_full_n,
        weight_buffer_6_write,
        weight_buffer_7_din,
        weight_buffer_7_full_n,
        weight_buffer_7_write,
        weight_buffer_8_din,
        weight_buffer_8_full_n,
        weight_buffer_8_write,
        weight_buffer_9_din,
        weight_buffer_9_full_n,
        weight_buffer_9_write,
        weight_buffer_10_din,
        weight_buffer_10_full_n,
        weight_buffer_10_write,
        weight_buffer_11_din,
        weight_buffer_11_full_n,
        weight_buffer_11_write,
        weight_buffer_12_din,
        weight_buffer_12_full_n,
        weight_buffer_12_write,
        weight_buffer_13_din,
        weight_buffer_13_full_n,
        weight_buffer_13_write,
        weight_buffer_14_din,
        weight_buffer_14_full_n,
        weight_buffer_14_write,
        weight_buffer_15_din,
        weight_buffer_15_full_n,
        weight_buffer_15_write,
        beta_buffer_0_din,
        beta_buffer_0_full_n,
        beta_buffer_0_write,
        beta_buffer_1_din,
        beta_buffer_1_full_n,
        beta_buffer_1_write,
        beta_buffer_2_din,
        beta_buffer_2_full_n,
        beta_buffer_2_write,
        beta_buffer_3_din,
        beta_buffer_3_full_n,
        beta_buffer_3_write,
        beta_buffer_4_din,
        beta_buffer_4_full_n,
        beta_buffer_4_write,
        beta_buffer_5_din,
        beta_buffer_5_full_n,
        beta_buffer_5_write,
        beta_buffer_6_din,
        beta_buffer_6_full_n,
        beta_buffer_6_write,
        beta_buffer_7_din,
        beta_buffer_7_full_n,
        beta_buffer_7_write,
        beta_buffer_8_din,
        beta_buffer_8_full_n,
        beta_buffer_8_write,
        beta_buffer_9_din,
        beta_buffer_9_full_n,
        beta_buffer_9_write,
        beta_buffer_10_din,
        beta_buffer_10_full_n,
        beta_buffer_10_write,
        beta_buffer_11_din,
        beta_buffer_11_full_n,
        beta_buffer_11_write,
        beta_buffer_12_din,
        beta_buffer_12_full_n,
        beta_buffer_12_write,
        beta_buffer_13_din,
        beta_buffer_13_full_n,
        beta_buffer_13_write,
        beta_buffer_14_din,
        beta_buffer_14_full_n,
        beta_buffer_14_write,
        beta_buffer_15_din,
        beta_buffer_15_full_n,
        beta_buffer_15_write,
        data_buffer_V_din,
        data_buffer_V_full_n,
        data_buffer_V_write,
        data_c_V_din,
        data_c_V_full_n,
        data_c_V_write,
        data_r_V_din,
        data_r_V_full_n,
        data_r_V_write,
        data_m_V_din,
        data_m_V_full_n,
        data_m_V_write,
        data_n_V_din,
        data_n_V_full_n,
        data_n_V_write,
        outputs_offset2,
        outputs_offset_c_din,
        outputs_offset_c_full_n,
        outputs_offset_c_write,
        outputs_offset,
        outputs_offset_out_din,
        outputs_offset_out_full_n,
        outputs_offset_out_write
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output   m_axi_inputs_AWVALID;
input   m_axi_inputs_AWREADY;
output  [31:0] m_axi_inputs_AWADDR;
output  [0:0] m_axi_inputs_AWID;
output  [31:0] m_axi_inputs_AWLEN;
output  [2:0] m_axi_inputs_AWSIZE;
output  [1:0] m_axi_inputs_AWBURST;
output  [1:0] m_axi_inputs_AWLOCK;
output  [3:0] m_axi_inputs_AWCACHE;
output  [2:0] m_axi_inputs_AWPROT;
output  [3:0] m_axi_inputs_AWQOS;
output  [3:0] m_axi_inputs_AWREGION;
output  [0:0] m_axi_inputs_AWUSER;
output   m_axi_inputs_WVALID;
input   m_axi_inputs_WREADY;
output  [15:0] m_axi_inputs_WDATA;
output  [1:0] m_axi_inputs_WSTRB;
output   m_axi_inputs_WLAST;
output  [0:0] m_axi_inputs_WID;
output  [0:0] m_axi_inputs_WUSER;
output   m_axi_inputs_ARVALID;
input   m_axi_inputs_ARREADY;
output  [31:0] m_axi_inputs_ARADDR;
output  [0:0] m_axi_inputs_ARID;
output  [31:0] m_axi_inputs_ARLEN;
output  [2:0] m_axi_inputs_ARSIZE;
output  [1:0] m_axi_inputs_ARBURST;
output  [1:0] m_axi_inputs_ARLOCK;
output  [3:0] m_axi_inputs_ARCACHE;
output  [2:0] m_axi_inputs_ARPROT;
output  [3:0] m_axi_inputs_ARQOS;
output  [3:0] m_axi_inputs_ARREGION;
output  [0:0] m_axi_inputs_ARUSER;
input   m_axi_inputs_RVALID;
output   m_axi_inputs_RREADY;
input  [15:0] m_axi_inputs_RDATA;
input   m_axi_inputs_RLAST;
input  [0:0] m_axi_inputs_RID;
input  [0:0] m_axi_inputs_RUSER;
input  [1:0] m_axi_inputs_RRESP;
input   m_axi_inputs_BVALID;
output   m_axi_inputs_BREADY;
input  [1:0] m_axi_inputs_BRESP;
input  [0:0] m_axi_inputs_BID;
input  [0:0] m_axi_inputs_BUSER;
input  [30:0] inputs_offset;
input  [17:0] inputs_offset1;
output   m_axi_weights_AWVALID;
input   m_axi_weights_AWREADY;
output  [31:0] m_axi_weights_AWADDR;
output  [0:0] m_axi_weights_AWID;
output  [31:0] m_axi_weights_AWLEN;
output  [2:0] m_axi_weights_AWSIZE;
output  [1:0] m_axi_weights_AWBURST;
output  [1:0] m_axi_weights_AWLOCK;
output  [3:0] m_axi_weights_AWCACHE;
output  [2:0] m_axi_weights_AWPROT;
output  [3:0] m_axi_weights_AWQOS;
output  [3:0] m_axi_weights_AWREGION;
output  [0:0] m_axi_weights_AWUSER;
output   m_axi_weights_WVALID;
input   m_axi_weights_WREADY;
output  [15:0] m_axi_weights_WDATA;
output  [1:0] m_axi_weights_WSTRB;
output   m_axi_weights_WLAST;
output  [0:0] m_axi_weights_WID;
output  [0:0] m_axi_weights_WUSER;
output   m_axi_weights_ARVALID;
input   m_axi_weights_ARREADY;
output  [31:0] m_axi_weights_ARADDR;
output  [0:0] m_axi_weights_ARID;
output  [31:0] m_axi_weights_ARLEN;
output  [2:0] m_axi_weights_ARSIZE;
output  [1:0] m_axi_weights_ARBURST;
output  [1:0] m_axi_weights_ARLOCK;
output  [3:0] m_axi_weights_ARCACHE;
output  [2:0] m_axi_weights_ARPROT;
output  [3:0] m_axi_weights_ARQOS;
output  [3:0] m_axi_weights_ARREGION;
output  [0:0] m_axi_weights_ARUSER;
input   m_axi_weights_RVALID;
output   m_axi_weights_RREADY;
input  [15:0] m_axi_weights_RDATA;
input   m_axi_weights_RLAST;
input  [0:0] m_axi_weights_RID;
input  [0:0] m_axi_weights_RUSER;
input  [1:0] m_axi_weights_RRESP;
input   m_axi_weights_BVALID;
output   m_axi_weights_BREADY;
input  [1:0] m_axi_weights_BRESP;
input  [0:0] m_axi_weights_BID;
input  [0:0] m_axi_weights_BUSER;
input  [30:0] weights_offset;
output   m_axi_betas_AWVALID;
input   m_axi_betas_AWREADY;
output  [31:0] m_axi_betas_AWADDR;
output  [0:0] m_axi_betas_AWID;
output  [31:0] m_axi_betas_AWLEN;
output  [2:0] m_axi_betas_AWSIZE;
output  [1:0] m_axi_betas_AWBURST;
output  [1:0] m_axi_betas_AWLOCK;
output  [3:0] m_axi_betas_AWCACHE;
output  [2:0] m_axi_betas_AWPROT;
output  [3:0] m_axi_betas_AWQOS;
output  [3:0] m_axi_betas_AWREGION;
output  [0:0] m_axi_betas_AWUSER;
output   m_axi_betas_WVALID;
input   m_axi_betas_WREADY;
output  [15:0] m_axi_betas_WDATA;
output  [1:0] m_axi_betas_WSTRB;
output   m_axi_betas_WLAST;
output  [0:0] m_axi_betas_WID;
output  [0:0] m_axi_betas_WUSER;
output   m_axi_betas_ARVALID;
input   m_axi_betas_ARREADY;
output  [31:0] m_axi_betas_ARADDR;
output  [0:0] m_axi_betas_ARID;
output  [31:0] m_axi_betas_ARLEN;
output  [2:0] m_axi_betas_ARSIZE;
output  [1:0] m_axi_betas_ARBURST;
output  [1:0] m_axi_betas_ARLOCK;
output  [3:0] m_axi_betas_ARCACHE;
output  [2:0] m_axi_betas_ARPROT;
output  [3:0] m_axi_betas_ARQOS;
output  [3:0] m_axi_betas_ARREGION;
output  [0:0] m_axi_betas_ARUSER;
input   m_axi_betas_RVALID;
output   m_axi_betas_RREADY;
input  [15:0] m_axi_betas_RDATA;
input   m_axi_betas_RLAST;
input  [0:0] m_axi_betas_RID;
input  [0:0] m_axi_betas_RUSER;
input  [1:0] m_axi_betas_RRESP;
input   m_axi_betas_BVALID;
output   m_axi_betas_BREADY;
input  [1:0] m_axi_betas_BRESP;
input  [0:0] m_axi_betas_BID;
input  [0:0] m_axi_betas_BUSER;
input  [30:0] betas_offset;
output  [15:0] input_buffer_V_din;
input   input_buffer_V_full_n;
output   input_buffer_V_write;
output  [15:0] weight_buffer_0_din;
input   weight_buffer_0_full_n;
output   weight_buffer_0_write;
output  [15:0] weight_buffer_1_din;
input   weight_buffer_1_full_n;
output   weight_buffer_1_write;
output  [15:0] weight_buffer_2_din;
input   weight_buffer_2_full_n;
output   weight_buffer_2_write;
output  [15:0] weight_buffer_3_din;
input   weight_buffer_3_full_n;
output   weight_buffer_3_write;
output  [15:0] weight_buffer_4_din;
input   weight_buffer_4_full_n;
output   weight_buffer_4_write;
output  [15:0] weight_buffer_5_din;
input   weight_buffer_5_full_n;
output   weight_buffer_5_write;
output  [15:0] weight_buffer_6_din;
input   weight_buffer_6_full_n;
output   weight_buffer_6_write;
output  [15:0] weight_buffer_7_din;
input   weight_buffer_7_full_n;
output   weight_buffer_7_write;
output  [15:0] weight_buffer_8_din;
input   weight_buffer_8_full_n;
output   weight_buffer_8_write;
output  [15:0] weight_buffer_9_din;
input   weight_buffer_9_full_n;
output   weight_buffer_9_write;
output  [15:0] weight_buffer_10_din;
input   weight_buffer_10_full_n;
output   weight_buffer_10_write;
output  [15:0] weight_buffer_11_din;
input   weight_buffer_11_full_n;
output   weight_buffer_11_write;
output  [15:0] weight_buffer_12_din;
input   weight_buffer_12_full_n;
output   weight_buffer_12_write;
output  [15:0] weight_buffer_13_din;
input   weight_buffer_13_full_n;
output   weight_buffer_13_write;
output  [15:0] weight_buffer_14_din;
input   weight_buffer_14_full_n;
output   weight_buffer_14_write;
output  [15:0] weight_buffer_15_din;
input   weight_buffer_15_full_n;
output   weight_buffer_15_write;
output  [15:0] beta_buffer_0_din;
input   beta_buffer_0_full_n;
output   beta_buffer_0_write;
output  [15:0] beta_buffer_1_din;
input   beta_buffer_1_full_n;
output   beta_buffer_1_write;
output  [15:0] beta_buffer_2_din;
input   beta_buffer_2_full_n;
output   beta_buffer_2_write;
output  [15:0] beta_buffer_3_din;
input   beta_buffer_3_full_n;
output   beta_buffer_3_write;
output  [15:0] beta_buffer_4_din;
input   beta_buffer_4_full_n;
output   beta_buffer_4_write;
output  [15:0] beta_buffer_5_din;
input   beta_buffer_5_full_n;
output   beta_buffer_5_write;
output  [15:0] beta_buffer_6_din;
input   beta_buffer_6_full_n;
output   beta_buffer_6_write;
output  [15:0] beta_buffer_7_din;
input   beta_buffer_7_full_n;
output   beta_buffer_7_write;
output  [15:0] beta_buffer_8_din;
input   beta_buffer_8_full_n;
output   beta_buffer_8_write;
output  [15:0] beta_buffer_9_din;
input   beta_buffer_9_full_n;
output   beta_buffer_9_write;
output  [15:0] beta_buffer_10_din;
input   beta_buffer_10_full_n;
output   beta_buffer_10_write;
output  [15:0] beta_buffer_11_din;
input   beta_buffer_11_full_n;
output   beta_buffer_11_write;
output  [15:0] beta_buffer_12_din;
input   beta_buffer_12_full_n;
output   beta_buffer_12_write;
output  [15:0] beta_buffer_13_din;
input   beta_buffer_13_full_n;
output   beta_buffer_13_write;
output  [15:0] beta_buffer_14_din;
input   beta_buffer_14_full_n;
output   beta_buffer_14_write;
output  [15:0] beta_buffer_15_din;
input   beta_buffer_15_full_n;
output   beta_buffer_15_write;
output   data_buffer_V_din;
input   data_buffer_V_full_n;
output   data_buffer_V_write;
output  [31:0] data_c_V_din;
input   data_c_V_full_n;
output   data_c_V_write;
output  [31:0] data_r_V_din;
input   data_r_V_full_n;
output   data_r_V_write;
output  [31:0] data_m_V_din;
input   data_m_V_full_n;
output   data_m_V_write;
output  [31:0] data_n_V_din;
input   data_n_V_full_n;
output   data_n_V_write;
input  [18:0] outputs_offset2;
output  [18:0] outputs_offset_c_din;
input   outputs_offset_c_full_n;
output   outputs_offset_c_write;
input  [30:0] outputs_offset;
output  [30:0] outputs_offset_out_din;
input   outputs_offset_out_full_n;
output   outputs_offset_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg m_axi_inputs_ARVALID;
reg m_axi_inputs_RREADY;
reg m_axi_weights_ARVALID;
reg m_axi_weights_RREADY;
reg m_axi_betas_ARVALID;
reg m_axi_betas_RREADY;
reg input_buffer_V_write;
reg weight_buffer_0_write;
reg weight_buffer_1_write;
reg weight_buffer_2_write;
reg weight_buffer_3_write;
reg weight_buffer_4_write;
reg weight_buffer_5_write;
reg weight_buffer_6_write;
reg weight_buffer_7_write;
reg weight_buffer_8_write;
reg weight_buffer_9_write;
reg weight_buffer_10_write;
reg weight_buffer_11_write;
reg weight_buffer_12_write;
reg weight_buffer_13_write;
reg weight_buffer_14_write;
reg weight_buffer_15_write;
reg beta_buffer_0_write;
reg beta_buffer_1_write;
reg beta_buffer_2_write;
reg beta_buffer_3_write;
reg beta_buffer_4_write;
reg beta_buffer_5_write;
reg beta_buffer_6_write;
reg beta_buffer_7_write;
reg beta_buffer_8_write;
reg beta_buffer_9_write;
reg beta_buffer_10_write;
reg beta_buffer_11_write;
reg beta_buffer_12_write;
reg beta_buffer_13_write;
reg beta_buffer_14_write;
reg beta_buffer_15_write;
reg data_buffer_V_write;
reg data_c_V_write;
reg data_r_V_write;
reg data_m_V_write;
reg data_n_V_write;
reg outputs_offset_c_write;
reg outputs_offset_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    outputs_offset_c_blk_n;
reg    outputs_offset_out_blk_n;
reg    ap_block_state1;
wire   [31:0] tmp_182_cast6_i_i_i_fu_513_p1;
reg   [31:0] tmp_182_cast6_i_i_i_reg_769;
wire    ap_CS_fsm_state2;
wire   [5:0] rLoops_fu_537_p3;
reg   [5:0] rLoops_reg_777;
wire   [0:0] tmp_fu_517_p3;
wire   [5:0] r_fu_545_p2;
reg   [5:0] r_reg_782;
wire   [31:0] tmp_54_cast5_i_i_i_fu_551_p1;
reg   [31:0] tmp_54_cast5_i_i_i_reg_788;
wire    ap_CS_fsm_state3;
wire   [5:0] cLoops_fu_575_p3;
reg   [5:0] cLoops_reg_796;
wire   [0:0] tmp_344_fu_555_p3;
wire   [5:0] c_fu_583_p2;
reg   [5:0] c_reg_801;
reg   [0:0] tmp_346_reg_806;
wire   [31:0] tmp_55_cast4_i_i_i_fu_602_p1;
reg   [31:0] tmp_55_cast4_i_i_i_reg_811;
wire    ap_CS_fsm_state4;
wire   [9:0] tmp_55_cast_i_i_i_fu_606_p1;
reg   [9:0] tmp_55_cast_i_i_i_reg_816;
wire   [8:0] mLoops_fu_630_p3;
reg   [8:0] mLoops_reg_824;
wire   [0:0] tmp_347_fu_610_p3;
wire   [8:0] m_fu_638_p2;
reg   [8:0] m_reg_830;
reg   [0:0] tmp_348_reg_835;
wire   [31:0] tmp_360_fu_652_p1;
reg   [31:0] tmp_360_reg_840;
wire    ap_CS_fsm_state5;
wire   [1:0] nLoops_fu_680_p3;
reg   [1:0] nLoops_reg_851;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_350_nbwritereq_fu_278_p3;
wire   [7:0] n_fu_688_p2;
reg   [7:0] n_reg_857;
wire   [0:0] tmp_361_fu_712_p2;
reg   [0:0] tmp_361_reg_862;
wire   [9:0] tmp_344_cast34_cast_s_fu_718_p1;
reg   [9:0] tmp_344_cast34_cast_s_reg_867;
wire    ap_CS_fsm_state7;
wire   [9:0] mLoops_cast_cast2_i_s_fu_724_p1;
reg   [9:0] mLoops_cast_cast2_i_s_reg_873;
wire    grp_copy_input_fmem2buff_3_fu_405_ap_start;
wire    grp_copy_input_fmem2buff_3_fu_405_ap_done;
wire    grp_copy_input_fmem2buff_3_fu_405_ap_idle;
wire    grp_copy_input_fmem2buff_3_fu_405_ap_ready;
wire    grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWVALID;
wire   [31:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWADDR;
wire   [0:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWID;
wire   [31:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWLEN;
wire   [2:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWSIZE;
wire   [1:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWBURST;
wire   [1:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWLOCK;
wire   [3:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWCACHE;
wire   [2:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWPROT;
wire   [3:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWQOS;
wire   [3:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWREGION;
wire   [0:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWUSER;
wire    grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_WVALID;
wire   [15:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_WDATA;
wire   [1:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_WSTRB;
wire    grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_WLAST;
wire   [0:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_WID;
wire   [0:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_WUSER;
wire    grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARVALID;
wire   [31:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARADDR;
wire   [0:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARID;
wire   [31:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARLEN;
wire   [2:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARSIZE;
wire   [1:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARBURST;
wire   [1:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARLOCK;
wire   [3:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARCACHE;
wire   [2:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARPROT;
wire   [3:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARQOS;
wire   [3:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARREGION;
wire   [0:0] grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARUSER;
wire    grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_RREADY;
wire    grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_BREADY;
wire   [15:0] grp_copy_input_fmem2buff_3_fu_405_input_buffer_V_din;
wire    grp_copy_input_fmem2buff_3_fu_405_input_buffer_V_write;
wire    grp_copy_input_fmem2buff_3_fu_405_input_cntl_V_din;
wire    grp_copy_input_fmem2buff_3_fu_405_input_cntl_V_write;
wire    grp_copy_weight_fmem2buf_4_fu_425_ap_start;
wire    grp_copy_weight_fmem2buf_4_fu_425_ap_done;
wire    grp_copy_weight_fmem2buf_4_fu_425_ap_idle;
wire    grp_copy_weight_fmem2buf_4_fu_425_ap_ready;
wire    grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWVALID;
wire   [31:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWADDR;
wire   [0:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWID;
wire   [31:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWLEN;
wire   [2:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWSIZE;
wire   [1:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWBURST;
wire   [1:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWLOCK;
wire   [3:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWCACHE;
wire   [2:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWPROT;
wire   [3:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWQOS;
wire   [3:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWREGION;
wire   [0:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWUSER;
wire    grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_WVALID;
wire   [15:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_WDATA;
wire   [1:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_WSTRB;
wire    grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_WLAST;
wire   [0:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_WID;
wire   [0:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_WUSER;
wire    grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARVALID;
wire   [31:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARADDR;
wire   [0:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARID;
wire   [31:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARLEN;
wire   [2:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARSIZE;
wire   [1:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARBURST;
wire   [1:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARLOCK;
wire   [3:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARCACHE;
wire   [2:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARPROT;
wire   [3:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARQOS;
wire   [3:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARREGION;
wire   [0:0] grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARUSER;
wire    grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_RREADY;
wire    grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_BREADY;
wire   [15:0] grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_0_V_din;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_0_V_write;
wire   [15:0] grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_1_V_din;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_1_V_write;
wire   [15:0] grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_2_V_din;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_2_V_write;
wire   [15:0] grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_3_V_din;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_3_V_write;
wire   [15:0] grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_4_V_din;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_4_V_write;
wire   [15:0] grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_5_V_din;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_5_V_write;
wire   [15:0] grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_6_V_din;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_6_V_write;
wire   [15:0] grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_7_V_din;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_7_V_write;
wire   [15:0] grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_8_V_din;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_8_V_write;
wire   [15:0] grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_9_V_din;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_9_V_write;
wire   [15:0] grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_10_V_din;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_10_V_write;
wire   [15:0] grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_11_V_din;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_11_V_write;
wire   [15:0] grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_12_V_din;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_12_V_write;
wire   [15:0] grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_13_V_din;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_13_V_write;
wire   [15:0] grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_14_V_din;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_14_V_write;
wire   [15:0] grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_15_V_din;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_15_V_write;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_cntl_V_din;
wire    grp_copy_weight_fmem2buf_4_fu_425_weight_cntl_V_write;
wire    grp_copy_beta_fmem2buffe_1_fu_470_ap_start;
wire    grp_copy_beta_fmem2buffe_1_fu_470_ap_done;
wire    grp_copy_beta_fmem2buffe_1_fu_470_ap_idle;
wire    grp_copy_beta_fmem2buffe_1_fu_470_ap_ready;
wire    grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWVALID;
wire   [31:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWADDR;
wire   [0:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWID;
wire   [31:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWLEN;
wire   [2:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWSIZE;
wire   [1:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWBURST;
wire   [1:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWLOCK;
wire   [3:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWCACHE;
wire   [2:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWPROT;
wire   [3:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWQOS;
wire   [3:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWREGION;
wire   [0:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWUSER;
wire    grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_WVALID;
wire   [15:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_WDATA;
wire   [1:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_WSTRB;
wire    grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_WLAST;
wire   [0:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_WID;
wire   [0:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_WUSER;
wire    grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARVALID;
wire   [31:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARADDR;
wire   [0:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARID;
wire   [31:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARLEN;
wire   [2:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARSIZE;
wire   [1:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARBURST;
wire   [1:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARLOCK;
wire   [3:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARCACHE;
wire   [2:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARPROT;
wire   [3:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARQOS;
wire   [3:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARREGION;
wire   [0:0] grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARUSER;
wire    grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_RREADY;
wire    grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_BREADY;
wire   [15:0] grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_0_V_din;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_0_V_write;
wire   [15:0] grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_1_V_din;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_1_V_write;
wire   [15:0] grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_2_V_din;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_2_V_write;
wire   [15:0] grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_3_V_din;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_3_V_write;
wire   [15:0] grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_4_V_din;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_4_V_write;
wire   [15:0] grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_5_V_din;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_5_V_write;
wire   [15:0] grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_6_V_din;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_6_V_write;
wire   [15:0] grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_7_V_din;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_7_V_write;
wire   [15:0] grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_8_V_din;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_8_V_write;
wire   [15:0] grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_9_V_din;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_9_V_write;
wire   [15:0] grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_10_V_din;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_10_V_write;
wire   [15:0] grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_11_V_din;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_11_V_write;
wire   [15:0] grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_12_V_din;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_12_V_write;
wire   [15:0] grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_13_V_din;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_13_V_write;
wire   [15:0] grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_14_V_din;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_14_V_write;
wire   [15:0] grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_15_V_din;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_15_V_write;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_cntl_V_din;
wire    grp_copy_beta_fmem2buffe_1_fu_470_beta_cntl_V_write;
reg   [5:0] tmp_357_reg_357;
reg   [5:0] tmp_356_reg_369;
reg   [8:0] tmp_358_reg_381;
wire   [0:0] tmp_349_fu_656_p3;
reg   [7:0] tmp_359_reg_393;
wire    ap_CS_fsm_state9;
reg    grp_copy_input_fmem2buff_3_fu_405_ap_start_reg;
wire    ap_CS_fsm_state8;
wire   [0:0] input_cntl_V_din;
wire    input_cntl_V_full_n;
reg    input_cntl_V_write;
reg    grp_copy_weight_fmem2buf_4_fu_425_ap_start_reg;
wire   [0:0] weight_cntl_V_din;
wire    weight_cntl_V_full_n;
reg    weight_cntl_V_write;
reg    grp_copy_beta_fmem2buffe_1_fu_470_ap_start_reg;
wire   [0:0] beta_cntl_V_din;
wire    beta_cntl_V_full_n;
reg    beta_cntl_V_write;
wire   [0:0] tmp_353_nbreadreq_fu_286_p3;
wire   [0:0] input_cntl_V_dout;
wire    input_cntl_V_empty_n;
reg    input_cntl_V_read;
wire   [0:0] tmp_354_nbreadreq_fu_293_p3;
wire   [0:0] weight_cntl_V_dout;
wire    weight_cntl_V_empty_n;
reg    weight_cntl_V_read;
wire   [0:0] tmp_355_nbreadreq_fu_300_p3;
wire   [0:0] beta_cntl_V_dout;
wire    beta_cntl_V_empty_n;
reg    beta_cntl_V_read;
wire   [5:0] tmp_334_i_i_i_i_i_fu_525_p2;
wire   [0:0] tmp_335_i_i_i_i_i_fu_531_p2;
wire   [5:0] tmp_338_i_i_i_i_i_fu_563_p2;
wire   [0:0] tmp_339_i_i_i_i_i_fu_569_p2;
wire   [5:0] tmp_345_fu_589_p2;
wire   [8:0] tmp_342_i_i_i_i_i_fu_618_p2;
wire   [0:0] tmp_343_i_i_i_i_i_fu_624_p2;
wire   [7:0] tmp_347_i_i_i_i_i_fu_664_p2;
wire   [0:0] tmp_348_i_i_i_i_i_fu_674_p2;
wire   [1:0] tmp_351_fu_670_p1;
wire   [0:0] tmp_352_fu_694_p3;
wire   [0:0] tmp4_i_i_i_demorgan_fu_702_p2;
wire   [0:0] tmp_58_i_i_i_demorga_fu_707_p2;
reg   [8:0] ap_NS_fsm;
reg    ap_block_state8_on_subcall_done;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 grp_copy_input_fmem2buff_3_fu_405_ap_start_reg = 1'b0;
#0 grp_copy_weight_fmem2buf_4_fu_425_ap_start_reg = 1'b0;
#0 grp_copy_beta_fmem2buffe_1_fu_470_ap_start_reg = 1'b0;
end

copy_input_fmem2buff_3 grp_copy_input_fmem2buff_3_fu_405(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_copy_input_fmem2buff_3_fu_405_ap_start),
    .ap_done(grp_copy_input_fmem2buff_3_fu_405_ap_done),
    .ap_idle(grp_copy_input_fmem2buff_3_fu_405_ap_idle),
    .ap_ready(grp_copy_input_fmem2buff_3_fu_405_ap_ready),
    .m_axi_inputs_AWVALID(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWVALID),
    .m_axi_inputs_AWREADY(1'b0),
    .m_axi_inputs_AWADDR(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWADDR),
    .m_axi_inputs_AWID(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWID),
    .m_axi_inputs_AWLEN(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWLEN),
    .m_axi_inputs_AWSIZE(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWSIZE),
    .m_axi_inputs_AWBURST(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWBURST),
    .m_axi_inputs_AWLOCK(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWLOCK),
    .m_axi_inputs_AWCACHE(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWCACHE),
    .m_axi_inputs_AWPROT(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWPROT),
    .m_axi_inputs_AWQOS(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWQOS),
    .m_axi_inputs_AWREGION(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWREGION),
    .m_axi_inputs_AWUSER(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_AWUSER),
    .m_axi_inputs_WVALID(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_WVALID),
    .m_axi_inputs_WREADY(1'b0),
    .m_axi_inputs_WDATA(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_WDATA),
    .m_axi_inputs_WSTRB(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_WSTRB),
    .m_axi_inputs_WLAST(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_WLAST),
    .m_axi_inputs_WID(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_WID),
    .m_axi_inputs_WUSER(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_WUSER),
    .m_axi_inputs_ARVALID(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARVALID),
    .m_axi_inputs_ARREADY(m_axi_inputs_ARREADY),
    .m_axi_inputs_ARADDR(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARADDR),
    .m_axi_inputs_ARID(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARID),
    .m_axi_inputs_ARLEN(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARLEN),
    .m_axi_inputs_ARSIZE(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARSIZE),
    .m_axi_inputs_ARBURST(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARBURST),
    .m_axi_inputs_ARLOCK(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARLOCK),
    .m_axi_inputs_ARCACHE(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARCACHE),
    .m_axi_inputs_ARPROT(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARPROT),
    .m_axi_inputs_ARQOS(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARQOS),
    .m_axi_inputs_ARREGION(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARREGION),
    .m_axi_inputs_ARUSER(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARUSER),
    .m_axi_inputs_RVALID(m_axi_inputs_RVALID),
    .m_axi_inputs_RREADY(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_RREADY),
    .m_axi_inputs_RDATA(m_axi_inputs_RDATA),
    .m_axi_inputs_RLAST(m_axi_inputs_RLAST),
    .m_axi_inputs_RID(m_axi_inputs_RID),
    .m_axi_inputs_RUSER(m_axi_inputs_RUSER),
    .m_axi_inputs_RRESP(m_axi_inputs_RRESP),
    .m_axi_inputs_BVALID(1'b0),
    .m_axi_inputs_BREADY(grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_BREADY),
    .m_axi_inputs_BRESP(2'd0),
    .m_axi_inputs_BID(1'd0),
    .m_axi_inputs_BUSER(1'd0),
    .inputs_offset(inputs_offset),
    .inputs_offset1(inputs_offset1),
    .input_buffer_V_din(grp_copy_input_fmem2buff_3_fu_405_input_buffer_V_din),
    .input_buffer_V_full_n(input_buffer_V_full_n),
    .input_buffer_V_write(grp_copy_input_fmem2buff_3_fu_405_input_buffer_V_write),
    .n(tmp_359_reg_393),
    .r(tmp_357_reg_357),
    .c(tmp_356_reg_369),
    .nLoops(nLoops_reg_851),
    .rLoops(rLoops_reg_777),
    .cLoops(cLoops_reg_796),
    .input_cntl_V_din(grp_copy_input_fmem2buff_3_fu_405_input_cntl_V_din),
    .input_cntl_V_full_n(input_cntl_V_full_n),
    .input_cntl_V_write(grp_copy_input_fmem2buff_3_fu_405_input_cntl_V_write)
);

copy_weight_fmem2buf_4 grp_copy_weight_fmem2buf_4_fu_425(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_copy_weight_fmem2buf_4_fu_425_ap_start),
    .ap_done(grp_copy_weight_fmem2buf_4_fu_425_ap_done),
    .ap_idle(grp_copy_weight_fmem2buf_4_fu_425_ap_idle),
    .ap_ready(grp_copy_weight_fmem2buf_4_fu_425_ap_ready),
    .m_axi_weights_AWVALID(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWVALID),
    .m_axi_weights_AWREADY(1'b0),
    .m_axi_weights_AWADDR(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWADDR),
    .m_axi_weights_AWID(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWID),
    .m_axi_weights_AWLEN(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWLEN),
    .m_axi_weights_AWSIZE(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWSIZE),
    .m_axi_weights_AWBURST(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWBURST),
    .m_axi_weights_AWLOCK(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWLOCK),
    .m_axi_weights_AWCACHE(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWCACHE),
    .m_axi_weights_AWPROT(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWPROT),
    .m_axi_weights_AWQOS(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWQOS),
    .m_axi_weights_AWREGION(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWREGION),
    .m_axi_weights_AWUSER(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_AWUSER),
    .m_axi_weights_WVALID(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_WVALID),
    .m_axi_weights_WREADY(1'b0),
    .m_axi_weights_WDATA(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_WDATA),
    .m_axi_weights_WSTRB(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_WSTRB),
    .m_axi_weights_WLAST(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_WLAST),
    .m_axi_weights_WID(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_WID),
    .m_axi_weights_WUSER(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_WUSER),
    .m_axi_weights_ARVALID(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARVALID),
    .m_axi_weights_ARREADY(m_axi_weights_ARREADY),
    .m_axi_weights_ARADDR(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARADDR),
    .m_axi_weights_ARID(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARID),
    .m_axi_weights_ARLEN(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARLEN),
    .m_axi_weights_ARSIZE(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARSIZE),
    .m_axi_weights_ARBURST(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARBURST),
    .m_axi_weights_ARLOCK(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARLOCK),
    .m_axi_weights_ARCACHE(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARCACHE),
    .m_axi_weights_ARPROT(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARPROT),
    .m_axi_weights_ARQOS(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARQOS),
    .m_axi_weights_ARREGION(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARREGION),
    .m_axi_weights_ARUSER(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARUSER),
    .m_axi_weights_RVALID(m_axi_weights_RVALID),
    .m_axi_weights_RREADY(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_RREADY),
    .m_axi_weights_RDATA(m_axi_weights_RDATA),
    .m_axi_weights_RLAST(m_axi_weights_RLAST),
    .m_axi_weights_RID(m_axi_weights_RID),
    .m_axi_weights_RUSER(m_axi_weights_RUSER),
    .m_axi_weights_RRESP(m_axi_weights_RRESP),
    .m_axi_weights_BVALID(1'b0),
    .m_axi_weights_BREADY(grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_BREADY),
    .m_axi_weights_BRESP(2'd0),
    .m_axi_weights_BID(1'd0),
    .m_axi_weights_BUSER(1'd0),
    .weights_offset(weights_offset),
    .weight_buffer_0_V_din(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_0_V_din),
    .weight_buffer_0_V_full_n(weight_buffer_0_full_n),
    .weight_buffer_0_V_write(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_0_V_write),
    .weight_buffer_1_V_din(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_1_V_din),
    .weight_buffer_1_V_full_n(weight_buffer_1_full_n),
    .weight_buffer_1_V_write(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_1_V_write),
    .weight_buffer_2_V_din(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_2_V_din),
    .weight_buffer_2_V_full_n(weight_buffer_2_full_n),
    .weight_buffer_2_V_write(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_2_V_write),
    .weight_buffer_3_V_din(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_3_V_din),
    .weight_buffer_3_V_full_n(weight_buffer_3_full_n),
    .weight_buffer_3_V_write(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_3_V_write),
    .weight_buffer_4_V_din(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_4_V_din),
    .weight_buffer_4_V_full_n(weight_buffer_4_full_n),
    .weight_buffer_4_V_write(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_4_V_write),
    .weight_buffer_5_V_din(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_5_V_din),
    .weight_buffer_5_V_full_n(weight_buffer_5_full_n),
    .weight_buffer_5_V_write(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_5_V_write),
    .weight_buffer_6_V_din(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_6_V_din),
    .weight_buffer_6_V_full_n(weight_buffer_6_full_n),
    .weight_buffer_6_V_write(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_6_V_write),
    .weight_buffer_7_V_din(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_7_V_din),
    .weight_buffer_7_V_full_n(weight_buffer_7_full_n),
    .weight_buffer_7_V_write(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_7_V_write),
    .weight_buffer_8_V_din(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_8_V_din),
    .weight_buffer_8_V_full_n(weight_buffer_8_full_n),
    .weight_buffer_8_V_write(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_8_V_write),
    .weight_buffer_9_V_din(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_9_V_din),
    .weight_buffer_9_V_full_n(weight_buffer_9_full_n),
    .weight_buffer_9_V_write(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_9_V_write),
    .weight_buffer_10_V_din(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_10_V_din),
    .weight_buffer_10_V_full_n(weight_buffer_10_full_n),
    .weight_buffer_10_V_write(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_10_V_write),
    .weight_buffer_11_V_din(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_11_V_din),
    .weight_buffer_11_V_full_n(weight_buffer_11_full_n),
    .weight_buffer_11_V_write(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_11_V_write),
    .weight_buffer_12_V_din(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_12_V_din),
    .weight_buffer_12_V_full_n(weight_buffer_12_full_n),
    .weight_buffer_12_V_write(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_12_V_write),
    .weight_buffer_13_V_din(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_13_V_din),
    .weight_buffer_13_V_full_n(weight_buffer_13_full_n),
    .weight_buffer_13_V_write(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_13_V_write),
    .weight_buffer_14_V_din(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_14_V_din),
    .weight_buffer_14_V_full_n(weight_buffer_14_full_n),
    .weight_buffer_14_V_write(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_14_V_write),
    .weight_buffer_15_V_din(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_15_V_din),
    .weight_buffer_15_V_full_n(weight_buffer_15_full_n),
    .weight_buffer_15_V_write(grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_15_V_write),
    .n(tmp_344_cast34_cast_s_reg_867),
    .m(tmp_358_reg_381),
    .nLoops(nLoops_reg_851),
    .mLoops(mLoops_reg_824),
    .weight_cntl_V_din(grp_copy_weight_fmem2buf_4_fu_425_weight_cntl_V_din),
    .weight_cntl_V_full_n(weight_cntl_V_full_n),
    .weight_cntl_V_write(grp_copy_weight_fmem2buf_4_fu_425_weight_cntl_V_write)
);

copy_beta_fmem2buffe_1 grp_copy_beta_fmem2buffe_1_fu_470(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_copy_beta_fmem2buffe_1_fu_470_ap_start),
    .ap_done(grp_copy_beta_fmem2buffe_1_fu_470_ap_done),
    .ap_idle(grp_copy_beta_fmem2buffe_1_fu_470_ap_idle),
    .ap_ready(grp_copy_beta_fmem2buffe_1_fu_470_ap_ready),
    .m_axi_betas_AWVALID(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWVALID),
    .m_axi_betas_AWREADY(1'b0),
    .m_axi_betas_AWADDR(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWADDR),
    .m_axi_betas_AWID(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWID),
    .m_axi_betas_AWLEN(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWLEN),
    .m_axi_betas_AWSIZE(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWSIZE),
    .m_axi_betas_AWBURST(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWBURST),
    .m_axi_betas_AWLOCK(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWLOCK),
    .m_axi_betas_AWCACHE(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWCACHE),
    .m_axi_betas_AWPROT(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWPROT),
    .m_axi_betas_AWQOS(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWQOS),
    .m_axi_betas_AWREGION(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWREGION),
    .m_axi_betas_AWUSER(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_AWUSER),
    .m_axi_betas_WVALID(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_WVALID),
    .m_axi_betas_WREADY(1'b0),
    .m_axi_betas_WDATA(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_WDATA),
    .m_axi_betas_WSTRB(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_WSTRB),
    .m_axi_betas_WLAST(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_WLAST),
    .m_axi_betas_WID(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_WID),
    .m_axi_betas_WUSER(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_WUSER),
    .m_axi_betas_ARVALID(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARVALID),
    .m_axi_betas_ARREADY(m_axi_betas_ARREADY),
    .m_axi_betas_ARADDR(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARADDR),
    .m_axi_betas_ARID(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARID),
    .m_axi_betas_ARLEN(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARLEN),
    .m_axi_betas_ARSIZE(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARSIZE),
    .m_axi_betas_ARBURST(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARBURST),
    .m_axi_betas_ARLOCK(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARLOCK),
    .m_axi_betas_ARCACHE(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARCACHE),
    .m_axi_betas_ARPROT(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARPROT),
    .m_axi_betas_ARQOS(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARQOS),
    .m_axi_betas_ARREGION(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARREGION),
    .m_axi_betas_ARUSER(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARUSER),
    .m_axi_betas_RVALID(m_axi_betas_RVALID),
    .m_axi_betas_RREADY(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_RREADY),
    .m_axi_betas_RDATA(m_axi_betas_RDATA),
    .m_axi_betas_RLAST(m_axi_betas_RLAST),
    .m_axi_betas_RID(m_axi_betas_RID),
    .m_axi_betas_RUSER(m_axi_betas_RUSER),
    .m_axi_betas_RRESP(m_axi_betas_RRESP),
    .m_axi_betas_BVALID(1'b0),
    .m_axi_betas_BREADY(grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_BREADY),
    .m_axi_betas_BRESP(2'd0),
    .m_axi_betas_BID(1'd0),
    .m_axi_betas_BUSER(1'd0),
    .betas_offset(betas_offset),
    .beta_buffer_0_V_din(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_0_V_din),
    .beta_buffer_0_V_full_n(beta_buffer_0_full_n),
    .beta_buffer_0_V_write(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_0_V_write),
    .beta_buffer_1_V_din(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_1_V_din),
    .beta_buffer_1_V_full_n(beta_buffer_1_full_n),
    .beta_buffer_1_V_write(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_1_V_write),
    .beta_buffer_2_V_din(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_2_V_din),
    .beta_buffer_2_V_full_n(beta_buffer_2_full_n),
    .beta_buffer_2_V_write(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_2_V_write),
    .beta_buffer_3_V_din(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_3_V_din),
    .beta_buffer_3_V_full_n(beta_buffer_3_full_n),
    .beta_buffer_3_V_write(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_3_V_write),
    .beta_buffer_4_V_din(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_4_V_din),
    .beta_buffer_4_V_full_n(beta_buffer_4_full_n),
    .beta_buffer_4_V_write(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_4_V_write),
    .beta_buffer_5_V_din(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_5_V_din),
    .beta_buffer_5_V_full_n(beta_buffer_5_full_n),
    .beta_buffer_5_V_write(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_5_V_write),
    .beta_buffer_6_V_din(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_6_V_din),
    .beta_buffer_6_V_full_n(beta_buffer_6_full_n),
    .beta_buffer_6_V_write(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_6_V_write),
    .beta_buffer_7_V_din(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_7_V_din),
    .beta_buffer_7_V_full_n(beta_buffer_7_full_n),
    .beta_buffer_7_V_write(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_7_V_write),
    .beta_buffer_8_V_din(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_8_V_din),
    .beta_buffer_8_V_full_n(beta_buffer_8_full_n),
    .beta_buffer_8_V_write(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_8_V_write),
    .beta_buffer_9_V_din(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_9_V_din),
    .beta_buffer_9_V_full_n(beta_buffer_9_full_n),
    .beta_buffer_9_V_write(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_9_V_write),
    .beta_buffer_10_V_din(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_10_V_din),
    .beta_buffer_10_V_full_n(beta_buffer_10_full_n),
    .beta_buffer_10_V_write(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_10_V_write),
    .beta_buffer_11_V_din(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_11_V_din),
    .beta_buffer_11_V_full_n(beta_buffer_11_full_n),
    .beta_buffer_11_V_write(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_11_V_write),
    .beta_buffer_12_V_din(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_12_V_din),
    .beta_buffer_12_V_full_n(beta_buffer_12_full_n),
    .beta_buffer_12_V_write(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_12_V_write),
    .beta_buffer_13_V_din(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_13_V_din),
    .beta_buffer_13_V_full_n(beta_buffer_13_full_n),
    .beta_buffer_13_V_write(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_13_V_write),
    .beta_buffer_14_V_din(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_14_V_din),
    .beta_buffer_14_V_full_n(beta_buffer_14_full_n),
    .beta_buffer_14_V_write(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_14_V_write),
    .beta_buffer_15_V_din(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_15_V_din),
    .beta_buffer_15_V_full_n(beta_buffer_15_full_n),
    .beta_buffer_15_V_write(grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_15_V_write),
    .n(tmp_344_cast34_cast_s_reg_867),
    .m(tmp_55_cast_i_i_i_reg_816),
    .mLoops(mLoops_cast_cast2_i_s_reg_873),
    .beta_cntl_V_din(grp_copy_beta_fmem2buffe_1_fu_470_beta_cntl_V_din),
    .beta_cntl_V_full_n(beta_cntl_V_full_n),
    .beta_cntl_V_write(grp_copy_beta_fmem2buffe_1_fu_470_beta_cntl_V_write)
);

fifo_w1_d1_A_x_x_x_x_x_x_x_x_x_x_x_x input_cntl_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(input_cntl_V_din),
    .if_full_n(input_cntl_V_full_n),
    .if_write(input_cntl_V_write),
    .if_dout(input_cntl_V_dout),
    .if_empty_n(input_cntl_V_empty_n),
    .if_read(input_cntl_V_read)
);

fifo_w1_d1_A_x_x_x_x_x_x_x_x_x_x_x_x weight_cntl_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(weight_cntl_V_din),
    .if_full_n(weight_cntl_V_full_n),
    .if_write(weight_cntl_V_write),
    .if_dout(weight_cntl_V_dout),
    .if_empty_n(weight_cntl_V_empty_n),
    .if_read(weight_cntl_V_read)
);

fifo_w1_d1_A_x_x_x_x_x_x_x_x_x_x_x_x beta_cntl_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(beta_cntl_V_din),
    .if_full_n(beta_cntl_V_full_n),
    .if_write(beta_cntl_V_write),
    .if_dout(beta_cntl_V_dout),
    .if_empty_n(beta_cntl_V_empty_n),
    .if_read(beta_cntl_V_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((tmp_fu_517_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_copy_beta_fmem2buffe_1_fu_470_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_copy_beta_fmem2buffe_1_fu_470_ap_start_reg <= 1'b1;
        end else if ((grp_copy_beta_fmem2buffe_1_fu_470_ap_ready == 1'b1)) begin
            grp_copy_beta_fmem2buffe_1_fu_470_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_copy_input_fmem2buff_3_fu_405_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_copy_input_fmem2buff_3_fu_405_ap_start_reg <= 1'b1;
        end else if ((grp_copy_input_fmem2buff_3_fu_405_ap_ready == 1'b1)) begin
            grp_copy_input_fmem2buff_3_fu_405_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_copy_weight_fmem2buf_4_fu_425_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_copy_weight_fmem2buf_4_fu_425_ap_start_reg <= 1'b1;
        end else if ((grp_copy_weight_fmem2buf_4_fu_425_ap_ready == 1'b1)) begin
            grp_copy_weight_fmem2buf_4_fu_425_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_347_fu_610_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_356_reg_369 <= c_reg_801;
    end else if (((tmp_fu_517_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_356_reg_369 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_344_fu_555_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_357_reg_357 <= r_reg_782;
    end else if ((~((outputs_offset_out_full_n == 1'b0) | (outputs_offset_c_full_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_357_reg_357 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_349_fu_656_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_358_reg_381 <= m_reg_830;
    end else if (((tmp_344_fu_555_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_358_reg_381 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_347_fu_610_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_359_reg_393 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_359_reg_393 <= n_reg_857;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_344_fu_555_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        cLoops_reg_796 <= cLoops_fu_575_p3;
        c_reg_801 <= c_fu_583_p2;
        tmp_346_reg_806 <= tmp_345_fu_589_p2[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        mLoops_cast_cast2_i_s_reg_873[8 : 0] <= mLoops_cast_cast2_i_s_fu_724_p1[8 : 0];
        tmp_344_cast34_cast_s_reg_867[7 : 0] <= tmp_344_cast34_cast_s_fu_718_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_347_fu_610_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        mLoops_reg_824 <= mLoops_fu_630_p3;
        m_reg_830 <= m_fu_638_p2;
        tmp_348_reg_835 <= m_fu_638_p2[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_350_nbwritereq_fu_278_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        nLoops_reg_851 <= nLoops_fu_680_p3;
        n_reg_857 <= n_fu_688_p2;
        tmp_361_reg_862 <= tmp_361_fu_712_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_517_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        rLoops_reg_777 <= rLoops_fu_537_p3;
        r_reg_782 <= r_fu_545_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_182_cast6_i_i_i_reg_769[5 : 0] <= tmp_182_cast6_i_i_i_fu_513_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_360_reg_840[7 : 0] <= tmp_360_fu_652_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_54_cast5_i_i_i_reg_788[5 : 0] <= tmp_54_cast5_i_i_i_fu_551_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_55_cast4_i_i_i_reg_811[8 : 0] <= tmp_55_cast4_i_i_i_fu_602_p1[8 : 0];
        tmp_55_cast_i_i_i_reg_816[8 : 0] <= tmp_55_cast_i_i_i_fu_606_p1[8 : 0];
    end
end

always @ (*) begin
    if (((tmp_fu_517_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_buffer_0_write = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_0_V_write;
    end else begin
        beta_buffer_0_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_buffer_10_write = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_10_V_write;
    end else begin
        beta_buffer_10_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_buffer_11_write = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_11_V_write;
    end else begin
        beta_buffer_11_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_buffer_12_write = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_12_V_write;
    end else begin
        beta_buffer_12_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_buffer_13_write = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_13_V_write;
    end else begin
        beta_buffer_13_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_buffer_14_write = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_14_V_write;
    end else begin
        beta_buffer_14_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_buffer_15_write = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_15_V_write;
    end else begin
        beta_buffer_15_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_buffer_1_write = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_1_V_write;
    end else begin
        beta_buffer_1_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_buffer_2_write = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_2_V_write;
    end else begin
        beta_buffer_2_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_buffer_3_write = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_3_V_write;
    end else begin
        beta_buffer_3_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_buffer_4_write = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_4_V_write;
    end else begin
        beta_buffer_4_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_buffer_5_write = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_5_V_write;
    end else begin
        beta_buffer_5_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_buffer_6_write = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_6_V_write;
    end else begin
        beta_buffer_6_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_buffer_7_write = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_7_V_write;
    end else begin
        beta_buffer_7_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_buffer_8_write = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_8_V_write;
    end else begin
        beta_buffer_8_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_buffer_9_write = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_9_V_write;
    end else begin
        beta_buffer_9_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_355_nbreadreq_fu_300_p3 == 1'd1) & (tmp_354_nbreadreq_fu_293_p3 == 1'd1) & (tmp_353_nbreadreq_fu_286_p3 == 1'd1) & (beta_cntl_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        beta_cntl_V_read = 1'b1;
    end else begin
        beta_cntl_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_cntl_V_write = grp_copy_beta_fmem2buffe_1_fu_470_beta_cntl_V_write;
    end else begin
        beta_cntl_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_355_nbreadreq_fu_300_p3 == 1'd1) & (tmp_354_nbreadreq_fu_293_p3 == 1'd1) & (tmp_353_nbreadreq_fu_286_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (data_buffer_V_full_n == 1'b1))) begin
        data_buffer_V_write = 1'b1;
    end else begin
        data_buffer_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_355_nbreadreq_fu_300_p3 == 1'd1) & (tmp_354_nbreadreq_fu_293_p3 == 1'd1) & (tmp_353_nbreadreq_fu_286_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (data_c_V_full_n == 1'b1))) begin
        data_c_V_write = 1'b1;
    end else begin
        data_c_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_355_nbreadreq_fu_300_p3 == 1'd1) & (tmp_354_nbreadreq_fu_293_p3 == 1'd1) & (tmp_353_nbreadreq_fu_286_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (data_m_V_full_n == 1'b1))) begin
        data_m_V_write = 1'b1;
    end else begin
        data_m_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_355_nbreadreq_fu_300_p3 == 1'd1) & (tmp_354_nbreadreq_fu_293_p3 == 1'd1) & (tmp_353_nbreadreq_fu_286_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (data_n_V_full_n == 1'b1))) begin
        data_n_V_write = 1'b1;
    end else begin
        data_n_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_355_nbreadreq_fu_300_p3 == 1'd1) & (tmp_354_nbreadreq_fu_293_p3 == 1'd1) & (tmp_353_nbreadreq_fu_286_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (data_r_V_full_n == 1'b1))) begin
        data_r_V_write = 1'b1;
    end else begin
        data_r_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        input_buffer_V_write = grp_copy_input_fmem2buff_3_fu_405_input_buffer_V_write;
    end else begin
        input_buffer_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_355_nbreadreq_fu_300_p3 == 1'd1) & (tmp_354_nbreadreq_fu_293_p3 == 1'd1) & (tmp_353_nbreadreq_fu_286_p3 == 1'd1) & (input_cntl_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        input_cntl_V_read = 1'b1;
    end else begin
        input_cntl_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        input_cntl_V_write = grp_copy_input_fmem2buff_3_fu_405_input_cntl_V_write;
    end else begin
        input_cntl_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_517_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_betas_ARVALID = grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARVALID;
    end else begin
        m_axi_betas_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_betas_RREADY = grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_RREADY;
    end else begin
        m_axi_betas_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_inputs_ARVALID = grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARVALID;
    end else begin
        m_axi_inputs_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_inputs_RREADY = grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_RREADY;
    end else begin
        m_axi_inputs_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_weights_ARVALID = grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARVALID;
    end else begin
        m_axi_weights_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_weights_RREADY = grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_RREADY;
    end else begin
        m_axi_weights_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs_offset_c_blk_n = outputs_offset_c_full_n;
    end else begin
        outputs_offset_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((outputs_offset_out_full_n == 1'b0) | (outputs_offset_c_full_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs_offset_c_write = 1'b1;
    end else begin
        outputs_offset_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs_offset_out_blk_n = outputs_offset_out_full_n;
    end else begin
        outputs_offset_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((outputs_offset_out_full_n == 1'b0) | (outputs_offset_c_full_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs_offset_out_write = 1'b1;
    end else begin
        outputs_offset_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_buffer_0_write = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_0_V_write;
    end else begin
        weight_buffer_0_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_buffer_10_write = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_10_V_write;
    end else begin
        weight_buffer_10_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_buffer_11_write = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_11_V_write;
    end else begin
        weight_buffer_11_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_buffer_12_write = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_12_V_write;
    end else begin
        weight_buffer_12_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_buffer_13_write = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_13_V_write;
    end else begin
        weight_buffer_13_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_buffer_14_write = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_14_V_write;
    end else begin
        weight_buffer_14_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_buffer_15_write = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_15_V_write;
    end else begin
        weight_buffer_15_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_buffer_1_write = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_1_V_write;
    end else begin
        weight_buffer_1_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_buffer_2_write = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_2_V_write;
    end else begin
        weight_buffer_2_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_buffer_3_write = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_3_V_write;
    end else begin
        weight_buffer_3_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_buffer_4_write = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_4_V_write;
    end else begin
        weight_buffer_4_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_buffer_5_write = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_5_V_write;
    end else begin
        weight_buffer_5_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_buffer_6_write = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_6_V_write;
    end else begin
        weight_buffer_6_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_buffer_7_write = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_7_V_write;
    end else begin
        weight_buffer_7_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_buffer_8_write = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_8_V_write;
    end else begin
        weight_buffer_8_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_buffer_9_write = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_9_V_write;
    end else begin
        weight_buffer_9_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_355_nbreadreq_fu_300_p3 == 1'd1) & (tmp_354_nbreadreq_fu_293_p3 == 1'd1) & (tmp_353_nbreadreq_fu_286_p3 == 1'd1) & (weight_cntl_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        weight_cntl_V_read = 1'b1;
    end else begin
        weight_cntl_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_cntl_V_write = grp_copy_weight_fmem2buf_4_fu_425_weight_cntl_V_write;
    end else begin
        weight_cntl_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((outputs_offset_out_full_n == 1'b0) | (outputs_offset_c_full_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_fu_517_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_344_fu_555_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((tmp_347_fu_610_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((tmp_349_fu_656_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((tmp_350_nbwritereq_fu_278_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((outputs_offset_out_full_n == 1'b0) | (outputs_offset_c_full_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state8_on_subcall_done = ((grp_copy_beta_fmem2buffe_1_fu_470_ap_done == 1'b0) | (grp_copy_weight_fmem2buf_4_fu_425_ap_done == 1'b0) | (grp_copy_input_fmem2buff_3_fu_405_ap_done == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign beta_buffer_0_din = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_0_V_din;

assign beta_buffer_10_din = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_10_V_din;

assign beta_buffer_11_din = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_11_V_din;

assign beta_buffer_12_din = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_12_V_din;

assign beta_buffer_13_din = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_13_V_din;

assign beta_buffer_14_din = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_14_V_din;

assign beta_buffer_15_din = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_15_V_din;

assign beta_buffer_1_din = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_1_V_din;

assign beta_buffer_2_din = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_2_V_din;

assign beta_buffer_3_din = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_3_V_din;

assign beta_buffer_4_din = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_4_V_din;

assign beta_buffer_5_din = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_5_V_din;

assign beta_buffer_6_din = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_6_V_din;

assign beta_buffer_7_din = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_7_V_din;

assign beta_buffer_8_din = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_8_V_din;

assign beta_buffer_9_din = grp_copy_beta_fmem2buffe_1_fu_470_beta_buffer_9_V_din;

assign beta_cntl_V_din = grp_copy_beta_fmem2buffe_1_fu_470_beta_cntl_V_din;

assign cLoops_fu_575_p3 = ((tmp_339_i_i_i_i_i_fu_569_p2[0:0] === 1'b1) ? 6'd16 : tmp_338_i_i_i_i_i_fu_563_p2);

assign c_fu_583_p2 = (tmp_356_reg_369 + 6'd16);

assign data_buffer_V_din = tmp_361_reg_862;

assign data_c_V_din = tmp_54_cast5_i_i_i_reg_788;

assign data_m_V_din = tmp_55_cast4_i_i_i_reg_811;

assign data_n_V_din = tmp_360_reg_840;

assign data_r_V_din = tmp_182_cast6_i_i_i_reg_769;

assign grp_copy_beta_fmem2buffe_1_fu_470_ap_start = grp_copy_beta_fmem2buffe_1_fu_470_ap_start_reg;

assign grp_copy_input_fmem2buff_3_fu_405_ap_start = grp_copy_input_fmem2buff_3_fu_405_ap_start_reg;

assign grp_copy_weight_fmem2buf_4_fu_425_ap_start = grp_copy_weight_fmem2buf_4_fu_425_ap_start_reg;

assign input_buffer_V_din = grp_copy_input_fmem2buff_3_fu_405_input_buffer_V_din;

assign input_cntl_V_din = grp_copy_input_fmem2buff_3_fu_405_input_cntl_V_din;

assign mLoops_cast_cast2_i_s_fu_724_p1 = mLoops_reg_824;

assign mLoops_fu_630_p3 = ((tmp_343_i_i_i_i_i_fu_624_p2[0:0] === 1'b1) ? 9'd16 : tmp_342_i_i_i_i_i_fu_618_p2);

assign m_axi_betas_ARADDR = grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARADDR;

assign m_axi_betas_ARBURST = grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARBURST;

assign m_axi_betas_ARCACHE = grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARCACHE;

assign m_axi_betas_ARID = grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARID;

assign m_axi_betas_ARLEN = grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARLEN;

assign m_axi_betas_ARLOCK = grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARLOCK;

assign m_axi_betas_ARPROT = grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARPROT;

assign m_axi_betas_ARQOS = grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARQOS;

assign m_axi_betas_ARREGION = grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARREGION;

assign m_axi_betas_ARSIZE = grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARSIZE;

assign m_axi_betas_ARUSER = grp_copy_beta_fmem2buffe_1_fu_470_m_axi_betas_ARUSER;

assign m_axi_betas_AWADDR = 32'd0;

assign m_axi_betas_AWBURST = 2'd0;

assign m_axi_betas_AWCACHE = 4'd0;

assign m_axi_betas_AWID = 1'd0;

assign m_axi_betas_AWLEN = 32'd0;

assign m_axi_betas_AWLOCK = 2'd0;

assign m_axi_betas_AWPROT = 3'd0;

assign m_axi_betas_AWQOS = 4'd0;

assign m_axi_betas_AWREGION = 4'd0;

assign m_axi_betas_AWSIZE = 3'd0;

assign m_axi_betas_AWUSER = 1'd0;

assign m_axi_betas_AWVALID = 1'b0;

assign m_axi_betas_BREADY = 1'b0;

assign m_axi_betas_WDATA = 16'd0;

assign m_axi_betas_WID = 1'd0;

assign m_axi_betas_WLAST = 1'b0;

assign m_axi_betas_WSTRB = 2'd0;

assign m_axi_betas_WUSER = 1'd0;

assign m_axi_betas_WVALID = 1'b0;

assign m_axi_inputs_ARADDR = grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARADDR;

assign m_axi_inputs_ARBURST = grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARBURST;

assign m_axi_inputs_ARCACHE = grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARCACHE;

assign m_axi_inputs_ARID = grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARID;

assign m_axi_inputs_ARLEN = grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARLEN;

assign m_axi_inputs_ARLOCK = grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARLOCK;

assign m_axi_inputs_ARPROT = grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARPROT;

assign m_axi_inputs_ARQOS = grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARQOS;

assign m_axi_inputs_ARREGION = grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARREGION;

assign m_axi_inputs_ARSIZE = grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARSIZE;

assign m_axi_inputs_ARUSER = grp_copy_input_fmem2buff_3_fu_405_m_axi_inputs_ARUSER;

assign m_axi_inputs_AWADDR = 32'd0;

assign m_axi_inputs_AWBURST = 2'd0;

assign m_axi_inputs_AWCACHE = 4'd0;

assign m_axi_inputs_AWID = 1'd0;

assign m_axi_inputs_AWLEN = 32'd0;

assign m_axi_inputs_AWLOCK = 2'd0;

assign m_axi_inputs_AWPROT = 3'd0;

assign m_axi_inputs_AWQOS = 4'd0;

assign m_axi_inputs_AWREGION = 4'd0;

assign m_axi_inputs_AWSIZE = 3'd0;

assign m_axi_inputs_AWUSER = 1'd0;

assign m_axi_inputs_AWVALID = 1'b0;

assign m_axi_inputs_BREADY = 1'b0;

assign m_axi_inputs_WDATA = 16'd0;

assign m_axi_inputs_WID = 1'd0;

assign m_axi_inputs_WLAST = 1'b0;

assign m_axi_inputs_WSTRB = 2'd0;

assign m_axi_inputs_WUSER = 1'd0;

assign m_axi_inputs_WVALID = 1'b0;

assign m_axi_weights_ARADDR = grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARADDR;

assign m_axi_weights_ARBURST = grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARBURST;

assign m_axi_weights_ARCACHE = grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARCACHE;

assign m_axi_weights_ARID = grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARID;

assign m_axi_weights_ARLEN = grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARLEN;

assign m_axi_weights_ARLOCK = grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARLOCK;

assign m_axi_weights_ARPROT = grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARPROT;

assign m_axi_weights_ARQOS = grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARQOS;

assign m_axi_weights_ARREGION = grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARREGION;

assign m_axi_weights_ARSIZE = grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARSIZE;

assign m_axi_weights_ARUSER = grp_copy_weight_fmem2buf_4_fu_425_m_axi_weights_ARUSER;

assign m_axi_weights_AWADDR = 32'd0;

assign m_axi_weights_AWBURST = 2'd0;

assign m_axi_weights_AWCACHE = 4'd0;

assign m_axi_weights_AWID = 1'd0;

assign m_axi_weights_AWLEN = 32'd0;

assign m_axi_weights_AWLOCK = 2'd0;

assign m_axi_weights_AWPROT = 3'd0;

assign m_axi_weights_AWQOS = 4'd0;

assign m_axi_weights_AWREGION = 4'd0;

assign m_axi_weights_AWSIZE = 3'd0;

assign m_axi_weights_AWUSER = 1'd0;

assign m_axi_weights_AWVALID = 1'b0;

assign m_axi_weights_BREADY = 1'b0;

assign m_axi_weights_WDATA = 16'd0;

assign m_axi_weights_WID = 1'd0;

assign m_axi_weights_WLAST = 1'b0;

assign m_axi_weights_WSTRB = 2'd0;

assign m_axi_weights_WUSER = 1'd0;

assign m_axi_weights_WVALID = 1'b0;

assign m_fu_638_p2 = (tmp_358_reg_381 + 9'd16);

assign nLoops_fu_680_p3 = ((tmp_348_i_i_i_i_i_fu_674_p2[0:0] === 1'b1) ? 2'd2 : tmp_351_fu_670_p1);

assign n_fu_688_p2 = (8'd2 + tmp_359_reg_393);

assign outputs_offset_c_din = outputs_offset2;

assign outputs_offset_out_din = outputs_offset;

assign rLoops_fu_537_p3 = ((tmp_335_i_i_i_i_i_fu_531_p2[0:0] === 1'b1) ? 6'd16 : tmp_334_i_i_i_i_i_fu_525_p2);

assign r_fu_545_p2 = (tmp_357_reg_357 + 6'd16);

assign start_out = real_start;

assign tmp4_i_i_i_demorgan_fu_702_p2 = (tmp_352_fu_694_p3 & tmp_348_reg_835);

assign tmp_182_cast6_i_i_i_fu_513_p1 = tmp_357_reg_357;

assign tmp_334_i_i_i_i_i_fu_525_p2 = ($signed(6'd32) - $signed(tmp_357_reg_357));

assign tmp_335_i_i_i_i_i_fu_531_p2 = ((tmp_334_i_i_i_i_i_fu_525_p2 > 6'd16) ? 1'b1 : 1'b0);

assign tmp_338_i_i_i_i_i_fu_563_p2 = ($signed(6'd32) - $signed(tmp_356_reg_369));

assign tmp_339_i_i_i_i_i_fu_569_p2 = ((tmp_338_i_i_i_i_i_fu_563_p2 > 6'd16) ? 1'b1 : 1'b0);

assign tmp_342_i_i_i_i_i_fu_618_p2 = ($signed(9'd256) - $signed(tmp_358_reg_381));

assign tmp_343_i_i_i_i_i_fu_624_p2 = ((tmp_342_i_i_i_i_i_fu_618_p2 > 9'd16) ? 1'b1 : 1'b0);

assign tmp_344_cast34_cast_s_fu_718_p1 = tmp_359_reg_393;

assign tmp_344_fu_555_p3 = tmp_356_reg_369[32'd5];

assign tmp_345_fu_589_p2 = (r_reg_782 & c_fu_583_p2);

assign tmp_347_fu_610_p3 = tmp_358_reg_381[32'd8];

assign tmp_347_i_i_i_i_i_fu_664_p2 = ($signed(8'd128) - $signed(tmp_359_reg_393));

assign tmp_348_i_i_i_i_i_fu_674_p2 = ((tmp_347_i_i_i_i_i_fu_664_p2 > 8'd2) ? 1'b1 : 1'b0);

assign tmp_349_fu_656_p3 = tmp_359_reg_393[32'd7];

assign tmp_350_nbwritereq_fu_278_p3 = data_buffer_V_full_n;

assign tmp_351_fu_670_p1 = tmp_347_i_i_i_i_i_fu_664_p2[1:0];

assign tmp_352_fu_694_p3 = n_fu_688_p2[32'd7];

assign tmp_353_nbreadreq_fu_286_p3 = input_cntl_V_empty_n;

assign tmp_354_nbreadreq_fu_293_p3 = weight_cntl_V_empty_n;

assign tmp_355_nbreadreq_fu_300_p3 = beta_cntl_V_empty_n;

assign tmp_360_fu_652_p1 = tmp_359_reg_393;

assign tmp_361_fu_712_p2 = (tmp_58_i_i_i_demorga_fu_707_p2 ^ 1'd1);

assign tmp_54_cast5_i_i_i_fu_551_p1 = tmp_356_reg_369;

assign tmp_55_cast4_i_i_i_fu_602_p1 = tmp_358_reg_381;

assign tmp_55_cast_i_i_i_fu_606_p1 = tmp_358_reg_381;

assign tmp_58_i_i_i_demorga_fu_707_p2 = (tmp_346_reg_806 & tmp4_i_i_i_demorgan_fu_702_p2);

assign tmp_fu_517_p3 = tmp_357_reg_357[32'd5];

assign weight_buffer_0_din = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_0_V_din;

assign weight_buffer_10_din = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_10_V_din;

assign weight_buffer_11_din = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_11_V_din;

assign weight_buffer_12_din = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_12_V_din;

assign weight_buffer_13_din = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_13_V_din;

assign weight_buffer_14_din = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_14_V_din;

assign weight_buffer_15_din = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_15_V_din;

assign weight_buffer_1_din = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_1_V_din;

assign weight_buffer_2_din = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_2_V_din;

assign weight_buffer_3_din = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_3_V_din;

assign weight_buffer_4_din = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_4_V_din;

assign weight_buffer_5_din = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_5_V_din;

assign weight_buffer_6_din = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_6_V_din;

assign weight_buffer_7_din = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_7_V_din;

assign weight_buffer_8_din = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_8_V_din;

assign weight_buffer_9_din = grp_copy_weight_fmem2buf_4_fu_425_weight_buffer_9_V_din;

assign weight_cntl_V_din = grp_copy_weight_fmem2buf_4_fu_425_weight_cntl_V_din;

always @ (posedge ap_clk) begin
    tmp_182_cast6_i_i_i_reg_769[31:6] <= 26'b00000000000000000000000000;
    tmp_54_cast5_i_i_i_reg_788[31:6] <= 26'b00000000000000000000000000;
    tmp_55_cast4_i_i_i_reg_811[31:9] <= 23'b00000000000000000000000;
    tmp_55_cast_i_i_i_reg_816[9] <= 1'b0;
    tmp_360_reg_840[31:8] <= 24'b000000000000000000000000;
    tmp_344_cast34_cast_s_reg_867[9:8] <= 2'b00;
    mLoops_cast_cast2_i_s_reg_873[9] <= 1'b0;
end

endmodule //load_data337149
