// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module compute_pro_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        input_buffer_V_dout,
        input_buffer_V_empty_n,
        input_buffer_V_read,
        weight_buffer_0_V_dout,
        weight_buffer_0_V_empty_n,
        weight_buffer_0_V_read,
        weight_buffer_1_V_dout,
        weight_buffer_1_V_empty_n,
        weight_buffer_1_V_read,
        weight_buffer_2_V_dout,
        weight_buffer_2_V_empty_n,
        weight_buffer_2_V_read,
        weight_buffer_3_V_dout,
        weight_buffer_3_V_empty_n,
        weight_buffer_3_V_read,
        weight_buffer_4_V_dout,
        weight_buffer_4_V_empty_n,
        weight_buffer_4_V_read,
        weight_buffer_5_V_dout,
        weight_buffer_5_V_empty_n,
        weight_buffer_5_V_read,
        weight_buffer_6_V_dout,
        weight_buffer_6_V_empty_n,
        weight_buffer_6_V_read,
        weight_buffer_7_V_dout,
        weight_buffer_7_V_empty_n,
        weight_buffer_7_V_read,
        weight_buffer_8_V_dout,
        weight_buffer_8_V_empty_n,
        weight_buffer_8_V_read,
        weight_buffer_9_V_dout,
        weight_buffer_9_V_empty_n,
        weight_buffer_9_V_read,
        weight_buffer_10_V_dout,
        weight_buffer_10_V_empty_n,
        weight_buffer_10_V_read,
        weight_buffer_11_V_dout,
        weight_buffer_11_V_empty_n,
        weight_buffer_11_V_read,
        weight_buffer_12_V_dout,
        weight_buffer_12_V_empty_n,
        weight_buffer_12_V_read,
        weight_buffer_13_V_dout,
        weight_buffer_13_V_empty_n,
        weight_buffer_13_V_read,
        weight_buffer_14_V_dout,
        weight_buffer_14_V_empty_n,
        weight_buffer_14_V_read,
        weight_buffer_15_V_dout,
        weight_buffer_15_V_empty_n,
        weight_buffer_15_V_read,
        beta_buffer_0_V_dout,
        beta_buffer_0_V_empty_n,
        beta_buffer_0_V_read,
        beta_buffer_1_V_dout,
        beta_buffer_1_V_empty_n,
        beta_buffer_1_V_read,
        beta_buffer_2_V_dout,
        beta_buffer_2_V_empty_n,
        beta_buffer_2_V_read,
        beta_buffer_3_V_dout,
        beta_buffer_3_V_empty_n,
        beta_buffer_3_V_read,
        beta_buffer_4_V_dout,
        beta_buffer_4_V_empty_n,
        beta_buffer_4_V_read,
        beta_buffer_5_V_dout,
        beta_buffer_5_V_empty_n,
        beta_buffer_5_V_read,
        beta_buffer_6_V_dout,
        beta_buffer_6_V_empty_n,
        beta_buffer_6_V_read,
        beta_buffer_7_V_dout,
        beta_buffer_7_V_empty_n,
        beta_buffer_7_V_read,
        beta_buffer_8_V_dout,
        beta_buffer_8_V_empty_n,
        beta_buffer_8_V_read,
        beta_buffer_9_V_dout,
        beta_buffer_9_V_empty_n,
        beta_buffer_9_V_read,
        beta_buffer_10_V_dout,
        beta_buffer_10_V_empty_n,
        beta_buffer_10_V_read,
        beta_buffer_11_V_dout,
        beta_buffer_11_V_empty_n,
        beta_buffer_11_V_read,
        beta_buffer_12_V_dout,
        beta_buffer_12_V_empty_n,
        beta_buffer_12_V_read,
        beta_buffer_13_V_dout,
        beta_buffer_13_V_empty_n,
        beta_buffer_13_V_read,
        beta_buffer_14_V_dout,
        beta_buffer_14_V_empty_n,
        beta_buffer_14_V_read,
        beta_buffer_15_V_dout,
        beta_buffer_15_V_empty_n,
        beta_buffer_15_V_read,
        output_buffer_0_V_din,
        output_buffer_0_V_full_n,
        output_buffer_0_V_write,
        output_buffer_1_V_din,
        output_buffer_1_V_full_n,
        output_buffer_1_V_write,
        output_buffer_2_V_din,
        output_buffer_2_V_full_n,
        output_buffer_2_V_write,
        output_buffer_3_V_din,
        output_buffer_3_V_full_n,
        output_buffer_3_V_write,
        output_buffer_4_V_din,
        output_buffer_4_V_full_n,
        output_buffer_4_V_write,
        output_buffer_5_V_din,
        output_buffer_5_V_full_n,
        output_buffer_5_V_write,
        output_buffer_6_V_din,
        output_buffer_6_V_full_n,
        output_buffer_6_V_write,
        output_buffer_7_V_din,
        output_buffer_7_V_full_n,
        output_buffer_7_V_write,
        output_buffer_8_V_din,
        output_buffer_8_V_full_n,
        output_buffer_8_V_write,
        output_buffer_9_V_din,
        output_buffer_9_V_full_n,
        output_buffer_9_V_write,
        output_buffer_10_V_din,
        output_buffer_10_V_full_n,
        output_buffer_10_V_write,
        output_buffer_11_V_din,
        output_buffer_11_V_full_n,
        output_buffer_11_V_write,
        output_buffer_12_V_din,
        output_buffer_12_V_full_n,
        output_buffer_12_V_write,
        output_buffer_13_V_din,
        output_buffer_13_V_full_n,
        output_buffer_13_V_write,
        output_buffer_14_V_din,
        output_buffer_14_V_full_n,
        output_buffer_14_V_write,
        output_buffer_15_V_din,
        output_buffer_15_V_full_n,
        output_buffer_15_V_write,
        data_buffer_V_dout,
        data_buffer_V_empty_n,
        data_buffer_V_read,
        result_buffer_V_din,
        result_buffer_V_full_n,
        result_buffer_V_write,
        data_c_V_dout,
        data_c_V_empty_n,
        data_c_V_read,
        data_r_V_dout,
        data_r_V_empty_n,
        data_r_V_read,
        data_m_V_dout,
        data_m_V_empty_n,
        data_m_V_read,
        data_n_V_dout,
        data_n_V_empty_n,
        data_n_V_read,
        result_c_V_din,
        result_c_V_full_n,
        result_c_V_write,
        result_r_V_din,
        result_r_V_full_n,
        result_r_V_write,
        result_m_V_din,
        result_m_V_full_n,
        result_m_V_write,
        result_n_V_din,
        result_n_V_full_n,
        result_n_V_write
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_pp0_stage0 = 8'd64;
parameter    ap_ST_fsm_state20 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] input_buffer_V_dout;
input   input_buffer_V_empty_n;
output   input_buffer_V_read;
input  [15:0] weight_buffer_0_V_dout;
input   weight_buffer_0_V_empty_n;
output   weight_buffer_0_V_read;
input  [15:0] weight_buffer_1_V_dout;
input   weight_buffer_1_V_empty_n;
output   weight_buffer_1_V_read;
input  [15:0] weight_buffer_2_V_dout;
input   weight_buffer_2_V_empty_n;
output   weight_buffer_2_V_read;
input  [15:0] weight_buffer_3_V_dout;
input   weight_buffer_3_V_empty_n;
output   weight_buffer_3_V_read;
input  [15:0] weight_buffer_4_V_dout;
input   weight_buffer_4_V_empty_n;
output   weight_buffer_4_V_read;
input  [15:0] weight_buffer_5_V_dout;
input   weight_buffer_5_V_empty_n;
output   weight_buffer_5_V_read;
input  [15:0] weight_buffer_6_V_dout;
input   weight_buffer_6_V_empty_n;
output   weight_buffer_6_V_read;
input  [15:0] weight_buffer_7_V_dout;
input   weight_buffer_7_V_empty_n;
output   weight_buffer_7_V_read;
input  [15:0] weight_buffer_8_V_dout;
input   weight_buffer_8_V_empty_n;
output   weight_buffer_8_V_read;
input  [15:0] weight_buffer_9_V_dout;
input   weight_buffer_9_V_empty_n;
output   weight_buffer_9_V_read;
input  [15:0] weight_buffer_10_V_dout;
input   weight_buffer_10_V_empty_n;
output   weight_buffer_10_V_read;
input  [15:0] weight_buffer_11_V_dout;
input   weight_buffer_11_V_empty_n;
output   weight_buffer_11_V_read;
input  [15:0] weight_buffer_12_V_dout;
input   weight_buffer_12_V_empty_n;
output   weight_buffer_12_V_read;
input  [15:0] weight_buffer_13_V_dout;
input   weight_buffer_13_V_empty_n;
output   weight_buffer_13_V_read;
input  [15:0] weight_buffer_14_V_dout;
input   weight_buffer_14_V_empty_n;
output   weight_buffer_14_V_read;
input  [15:0] weight_buffer_15_V_dout;
input   weight_buffer_15_V_empty_n;
output   weight_buffer_15_V_read;
input  [15:0] beta_buffer_0_V_dout;
input   beta_buffer_0_V_empty_n;
output   beta_buffer_0_V_read;
input  [15:0] beta_buffer_1_V_dout;
input   beta_buffer_1_V_empty_n;
output   beta_buffer_1_V_read;
input  [15:0] beta_buffer_2_V_dout;
input   beta_buffer_2_V_empty_n;
output   beta_buffer_2_V_read;
input  [15:0] beta_buffer_3_V_dout;
input   beta_buffer_3_V_empty_n;
output   beta_buffer_3_V_read;
input  [15:0] beta_buffer_4_V_dout;
input   beta_buffer_4_V_empty_n;
output   beta_buffer_4_V_read;
input  [15:0] beta_buffer_5_V_dout;
input   beta_buffer_5_V_empty_n;
output   beta_buffer_5_V_read;
input  [15:0] beta_buffer_6_V_dout;
input   beta_buffer_6_V_empty_n;
output   beta_buffer_6_V_read;
input  [15:0] beta_buffer_7_V_dout;
input   beta_buffer_7_V_empty_n;
output   beta_buffer_7_V_read;
input  [15:0] beta_buffer_8_V_dout;
input   beta_buffer_8_V_empty_n;
output   beta_buffer_8_V_read;
input  [15:0] beta_buffer_9_V_dout;
input   beta_buffer_9_V_empty_n;
output   beta_buffer_9_V_read;
input  [15:0] beta_buffer_10_V_dout;
input   beta_buffer_10_V_empty_n;
output   beta_buffer_10_V_read;
input  [15:0] beta_buffer_11_V_dout;
input   beta_buffer_11_V_empty_n;
output   beta_buffer_11_V_read;
input  [15:0] beta_buffer_12_V_dout;
input   beta_buffer_12_V_empty_n;
output   beta_buffer_12_V_read;
input  [15:0] beta_buffer_13_V_dout;
input   beta_buffer_13_V_empty_n;
output   beta_buffer_13_V_read;
input  [15:0] beta_buffer_14_V_dout;
input   beta_buffer_14_V_empty_n;
output   beta_buffer_14_V_read;
input  [15:0] beta_buffer_15_V_dout;
input   beta_buffer_15_V_empty_n;
output   beta_buffer_15_V_read;
output  [15:0] output_buffer_0_V_din;
input   output_buffer_0_V_full_n;
output   output_buffer_0_V_write;
output  [15:0] output_buffer_1_V_din;
input   output_buffer_1_V_full_n;
output   output_buffer_1_V_write;
output  [15:0] output_buffer_2_V_din;
input   output_buffer_2_V_full_n;
output   output_buffer_2_V_write;
output  [15:0] output_buffer_3_V_din;
input   output_buffer_3_V_full_n;
output   output_buffer_3_V_write;
output  [15:0] output_buffer_4_V_din;
input   output_buffer_4_V_full_n;
output   output_buffer_4_V_write;
output  [15:0] output_buffer_5_V_din;
input   output_buffer_5_V_full_n;
output   output_buffer_5_V_write;
output  [15:0] output_buffer_6_V_din;
input   output_buffer_6_V_full_n;
output   output_buffer_6_V_write;
output  [15:0] output_buffer_7_V_din;
input   output_buffer_7_V_full_n;
output   output_buffer_7_V_write;
output  [15:0] output_buffer_8_V_din;
input   output_buffer_8_V_full_n;
output   output_buffer_8_V_write;
output  [15:0] output_buffer_9_V_din;
input   output_buffer_9_V_full_n;
output   output_buffer_9_V_write;
output  [15:0] output_buffer_10_V_din;
input   output_buffer_10_V_full_n;
output   output_buffer_10_V_write;
output  [15:0] output_buffer_11_V_din;
input   output_buffer_11_V_full_n;
output   output_buffer_11_V_write;
output  [15:0] output_buffer_12_V_din;
input   output_buffer_12_V_full_n;
output   output_buffer_12_V_write;
output  [15:0] output_buffer_13_V_din;
input   output_buffer_13_V_full_n;
output   output_buffer_13_V_write;
output  [15:0] output_buffer_14_V_din;
input   output_buffer_14_V_full_n;
output   output_buffer_14_V_write;
output  [15:0] output_buffer_15_V_din;
input   output_buffer_15_V_full_n;
output   output_buffer_15_V_write;
input   data_buffer_V_dout;
input   data_buffer_V_empty_n;
output   data_buffer_V_read;
output   result_buffer_V_din;
input   result_buffer_V_full_n;
output   result_buffer_V_write;
input  [31:0] data_c_V_dout;
input   data_c_V_empty_n;
output   data_c_V_read;
input  [31:0] data_r_V_dout;
input   data_r_V_empty_n;
output   data_r_V_read;
input  [31:0] data_m_V_dout;
input   data_m_V_empty_n;
output   data_m_V_read;
input  [31:0] data_n_V_dout;
input   data_n_V_empty_n;
output   data_n_V_read;
output  [31:0] result_c_V_din;
input   result_c_V_full_n;
output   result_c_V_write;
output  [31:0] result_r_V_din;
input   result_r_V_full_n;
output   result_r_V_write;
output  [31:0] result_m_V_din;
input   result_m_V_full_n;
output   result_m_V_write;
output  [31:0] result_n_V_din;
input   result_n_V_full_n;
output   result_n_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_buffer_V_read;
reg weight_buffer_0_V_read;
reg weight_buffer_1_V_read;
reg weight_buffer_2_V_read;
reg weight_buffer_3_V_read;
reg weight_buffer_4_V_read;
reg weight_buffer_5_V_read;
reg weight_buffer_6_V_read;
reg weight_buffer_7_V_read;
reg weight_buffer_8_V_read;
reg weight_buffer_9_V_read;
reg weight_buffer_10_V_read;
reg weight_buffer_11_V_read;
reg weight_buffer_12_V_read;
reg weight_buffer_13_V_read;
reg weight_buffer_14_V_read;
reg weight_buffer_15_V_read;
reg beta_buffer_0_V_read;
reg beta_buffer_1_V_read;
reg beta_buffer_2_V_read;
reg beta_buffer_3_V_read;
reg beta_buffer_4_V_read;
reg beta_buffer_5_V_read;
reg beta_buffer_6_V_read;
reg beta_buffer_7_V_read;
reg beta_buffer_8_V_read;
reg beta_buffer_9_V_read;
reg beta_buffer_10_V_read;
reg beta_buffer_11_V_read;
reg beta_buffer_12_V_read;
reg beta_buffer_13_V_read;
reg beta_buffer_14_V_read;
reg beta_buffer_15_V_read;
reg output_buffer_0_V_write;
reg output_buffer_1_V_write;
reg output_buffer_2_V_write;
reg output_buffer_3_V_write;
reg output_buffer_4_V_write;
reg output_buffer_5_V_write;
reg output_buffer_6_V_write;
reg output_buffer_7_V_write;
reg output_buffer_8_V_write;
reg output_buffer_9_V_write;
reg output_buffer_10_V_write;
reg output_buffer_11_V_write;
reg output_buffer_12_V_write;
reg output_buffer_13_V_write;
reg output_buffer_14_V_write;
reg output_buffer_15_V_write;
reg data_buffer_V_read;
reg result_buffer_V_write;
reg data_c_V_read;
reg data_r_V_read;
reg data_m_V_read;
reg data_n_V_read;
reg result_c_V_write;
reg result_r_V_write;
reg result_m_V_write;
reg result_n_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [30:0] tc_reg_1177;
reg   [31:0] tmp_787_reg_3113;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_nbreadreq_fu_508_p3;
wire   [0:0] tmp_303_nbwritereq_fu_516_p3;
reg   [31:0] tmp_788_reg_3119;
reg   [31:0] tmp_785_reg_3128;
wire    ap_CS_fsm_state4;
reg   [31:0] tmp_786_reg_3133;
wire   [31:0] cLoops_fu_1458_p3;
reg   [31:0] cLoops_reg_3138;
wire   [31:0] rLoops_fu_1480_p3;
reg   [31:0] rLoops_reg_3143;
wire   [31:0] nLoops_fu_1518_p3;
reg   [31:0] nLoops_reg_3148;
wire   [0:0] tmp_310_fu_1526_p2;
reg   [0:0] tmp_310_reg_3154;
wire   [0:0] tmp_312_fu_1811_p2;
reg   [0:0] tmp_312_reg_3207;
wire   [0:0] icmp12_fu_1827_p2;
reg   [0:0] icmp12_reg_3212;
wire   [0:0] tmp_880_0_0_2_fu_1833_p2;
reg   [0:0] tmp_880_0_0_2_reg_3217;
wire   [0:0] icmp13_fu_1849_p2;
reg   [0:0] icmp13_reg_3222;
wire   [0:0] tmp_880_0_0_4_fu_1855_p2;
reg   [0:0] tmp_880_0_0_4_reg_3227;
wire   [0:0] tmp_880_0_0_5_fu_1861_p2;
reg   [0:0] tmp_880_0_0_5_reg_3232;
wire   [0:0] tmp_880_0_0_6_fu_1867_p2;
reg   [0:0] tmp_880_0_0_6_reg_3237;
wire   [0:0] icmp14_fu_1883_p2;
reg   [0:0] icmp14_reg_3242;
wire   [0:0] tmp_880_0_0_8_fu_1889_p2;
reg   [0:0] tmp_880_0_0_8_reg_3247;
wire   [0:0] tmp_880_0_0_9_fu_1895_p2;
reg   [0:0] tmp_880_0_0_9_reg_3252;
wire   [0:0] tmp_880_0_0_s_fu_1901_p2;
reg   [0:0] tmp_880_0_0_s_reg_3257;
wire   [0:0] tmp_880_0_0_1_fu_1907_p2;
reg   [0:0] tmp_880_0_0_1_reg_3262;
wire   [0:0] tmp_880_0_0_3_fu_1913_p2;
reg   [0:0] tmp_880_0_0_3_reg_3267;
wire   [0:0] tmp_880_0_0_7_fu_1919_p2;
reg   [0:0] tmp_880_0_0_7_reg_3272;
wire   [0:0] tmp_880_0_0_10_fu_1925_p2;
reg   [0:0] tmp_880_0_0_10_reg_3277;
wire   [0:0] icmp15_fu_1941_p2;
reg   [0:0] icmp15_reg_3282;
wire   [1:0] tn_19_fu_1956_p2;
reg   [1:0] tn_19_reg_3290;
wire    ap_CS_fsm_state5;
wire   [0:0] or_cond_fu_2112_p2;
reg   [0:0] or_cond_reg_3295;
wire   [0:0] tmp_313_fu_1951_p2;
wire   [0:0] tmp_318_fu_2122_p2;
reg   [0:0] tmp_318_reg_3315;
wire   [0:0] tmp_319_fu_2157_p2;
wire    ap_CS_fsm_state6;
wire   [30:0] tr_10_fu_2162_p2;
reg   [30:0] tr_10_reg_3329;
wire   [9:0] tmp_554_cast_fu_2172_p3;
reg   [9:0] tmp_554_cast_reg_3334;
wire   [0:0] tmp_321_fu_2184_p2;
reg   [0:0] tmp_321_reg_3339;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state7_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state11_pp0_stage0_iter4;
wire    ap_block_state12_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state14_pp0_stage0_iter7;
wire    ap_block_state15_pp0_stage0_iter8;
wire    ap_block_state16_pp0_stage0_iter9;
wire    ap_block_state17_pp0_stage0_iter10;
wire    ap_block_state18_pp0_stage0_iter11;
wire    ap_block_state19_pp0_stage0_iter12;
wire    ap_block_pp0_stage0_11001;
wire   [30:0] tc_3_fu_2189_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [15:0] tmp_823_reg_3348;
wire   [9:0] tmp_323_fu_2203_p2;
reg   [9:0] tmp_323_reg_3368;
reg   [9:0] tmp_323_reg_3368_pp0_iter1_reg;
reg   [9:0] tmp_323_reg_3368_pp0_iter2_reg;
reg   [9:0] tmp_323_reg_3368_pp0_iter3_reg;
wire   [15:0] weight_regs_0_0_2_we_fu_2304_p3;
wire   [15:0] weight_regs_1_0_2_we_fu_2312_p3;
wire   [15:0] weight_regs_2_0_2_we_fu_2320_p3;
wire   [15:0] weight_regs_3_0_2_we_fu_2328_p3;
wire   [15:0] weight_regs_4_0_2_we_fu_2336_p3;
wire   [15:0] weight_regs_5_0_2_we_fu_2344_p3;
wire   [15:0] weight_regs_6_0_2_we_fu_2352_p3;
wire   [15:0] weight_regs_7_0_2_we_fu_2360_p3;
wire   [15:0] weight_regs_8_0_2_we_fu_2368_p3;
wire   [15:0] weight_regs_9_0_2_we_fu_2376_p3;
wire   [15:0] weight_regs_10_0_2_w_fu_2384_p3;
wire   [15:0] weight_regs_11_0_2_w_fu_2392_p3;
wire   [15:0] weight_regs_12_0_2_w_fu_2400_p3;
wire   [15:0] weight_regs_13_0_2_w_fu_2408_p3;
wire   [15:0] weight_regs_14_0_2_w_fu_2416_p3;
wire   [15:0] weight_regs_15_0_2_w_fu_2424_p3;
reg   [7:0] output_temp_0_addr_reg_3453;
reg   [7:0] output_temp_0_addr_reg_3453_pp0_iter5_reg;
reg   [7:0] output_temp_0_addr_reg_3453_pp0_iter6_reg;
reg   [7:0] output_temp_0_addr_reg_3453_pp0_iter7_reg;
reg   [7:0] output_temp_0_addr_reg_3453_pp0_iter8_reg;
reg   [7:0] output_temp_0_addr_reg_3453_pp0_iter9_reg;
reg   [7:0] output_temp_1_addr_reg_3459;
reg   [7:0] output_temp_1_addr_reg_3459_pp0_iter5_reg;
reg   [7:0] output_temp_1_addr_reg_3459_pp0_iter6_reg;
reg   [7:0] output_temp_1_addr_reg_3459_pp0_iter7_reg;
reg   [7:0] output_temp_1_addr_reg_3459_pp0_iter8_reg;
reg   [7:0] output_temp_1_addr_reg_3459_pp0_iter9_reg;
reg   [7:0] output_temp_2_addr_reg_3465;
reg   [7:0] output_temp_2_addr_reg_3465_pp0_iter5_reg;
reg   [7:0] output_temp_2_addr_reg_3465_pp0_iter6_reg;
reg   [7:0] output_temp_2_addr_reg_3465_pp0_iter7_reg;
reg   [7:0] output_temp_2_addr_reg_3465_pp0_iter8_reg;
reg   [7:0] output_temp_2_addr_reg_3465_pp0_iter9_reg;
reg   [7:0] output_temp_3_addr_reg_3471;
reg   [7:0] output_temp_3_addr_reg_3471_pp0_iter5_reg;
reg   [7:0] output_temp_3_addr_reg_3471_pp0_iter6_reg;
reg   [7:0] output_temp_3_addr_reg_3471_pp0_iter7_reg;
reg   [7:0] output_temp_3_addr_reg_3471_pp0_iter8_reg;
reg   [7:0] output_temp_3_addr_reg_3471_pp0_iter9_reg;
reg   [7:0] output_temp_4_addr_reg_3477;
reg   [7:0] output_temp_4_addr_reg_3477_pp0_iter5_reg;
reg   [7:0] output_temp_4_addr_reg_3477_pp0_iter6_reg;
reg   [7:0] output_temp_4_addr_reg_3477_pp0_iter7_reg;
reg   [7:0] output_temp_4_addr_reg_3477_pp0_iter8_reg;
reg   [7:0] output_temp_4_addr_reg_3477_pp0_iter9_reg;
reg   [7:0] output_temp_5_addr_reg_3483;
reg   [7:0] output_temp_5_addr_reg_3483_pp0_iter5_reg;
reg   [7:0] output_temp_5_addr_reg_3483_pp0_iter6_reg;
reg   [7:0] output_temp_5_addr_reg_3483_pp0_iter7_reg;
reg   [7:0] output_temp_5_addr_reg_3483_pp0_iter8_reg;
reg   [7:0] output_temp_5_addr_reg_3483_pp0_iter9_reg;
reg   [7:0] output_temp_6_addr_reg_3489;
reg   [7:0] output_temp_6_addr_reg_3489_pp0_iter5_reg;
reg   [7:0] output_temp_6_addr_reg_3489_pp0_iter6_reg;
reg   [7:0] output_temp_6_addr_reg_3489_pp0_iter7_reg;
reg   [7:0] output_temp_6_addr_reg_3489_pp0_iter8_reg;
reg   [7:0] output_temp_6_addr_reg_3489_pp0_iter9_reg;
reg   [7:0] output_temp_7_addr_reg_3495;
reg   [7:0] output_temp_7_addr_reg_3495_pp0_iter5_reg;
reg   [7:0] output_temp_7_addr_reg_3495_pp0_iter6_reg;
reg   [7:0] output_temp_7_addr_reg_3495_pp0_iter7_reg;
reg   [7:0] output_temp_7_addr_reg_3495_pp0_iter8_reg;
reg   [7:0] output_temp_7_addr_reg_3495_pp0_iter9_reg;
reg   [7:0] output_temp_8_addr_reg_3501;
reg   [7:0] output_temp_8_addr_reg_3501_pp0_iter5_reg;
reg   [7:0] output_temp_8_addr_reg_3501_pp0_iter6_reg;
reg   [7:0] output_temp_8_addr_reg_3501_pp0_iter7_reg;
reg   [7:0] output_temp_8_addr_reg_3501_pp0_iter8_reg;
reg   [7:0] output_temp_8_addr_reg_3501_pp0_iter9_reg;
reg   [7:0] output_temp_9_addr_reg_3507;
reg   [7:0] output_temp_9_addr_reg_3507_pp0_iter5_reg;
reg   [7:0] output_temp_9_addr_reg_3507_pp0_iter6_reg;
reg   [7:0] output_temp_9_addr_reg_3507_pp0_iter7_reg;
reg   [7:0] output_temp_9_addr_reg_3507_pp0_iter8_reg;
reg   [7:0] output_temp_9_addr_reg_3507_pp0_iter9_reg;
reg   [7:0] output_temp_10_addr_reg_3513;
reg   [7:0] output_temp_10_addr_reg_3513_pp0_iter5_reg;
reg   [7:0] output_temp_10_addr_reg_3513_pp0_iter6_reg;
reg   [7:0] output_temp_10_addr_reg_3513_pp0_iter7_reg;
reg   [7:0] output_temp_10_addr_reg_3513_pp0_iter8_reg;
reg   [7:0] output_temp_10_addr_reg_3513_pp0_iter9_reg;
reg   [7:0] output_temp_11_addr_reg_3519;
reg   [7:0] output_temp_11_addr_reg_3519_pp0_iter5_reg;
reg   [7:0] output_temp_11_addr_reg_3519_pp0_iter6_reg;
reg   [7:0] output_temp_11_addr_reg_3519_pp0_iter7_reg;
reg   [7:0] output_temp_11_addr_reg_3519_pp0_iter8_reg;
reg   [7:0] output_temp_11_addr_reg_3519_pp0_iter9_reg;
reg   [7:0] output_temp_12_addr_reg_3525;
reg   [7:0] output_temp_12_addr_reg_3525_pp0_iter5_reg;
reg   [7:0] output_temp_12_addr_reg_3525_pp0_iter6_reg;
reg   [7:0] output_temp_12_addr_reg_3525_pp0_iter7_reg;
reg   [7:0] output_temp_12_addr_reg_3525_pp0_iter8_reg;
reg   [7:0] output_temp_12_addr_reg_3525_pp0_iter9_reg;
reg   [7:0] output_temp_13_addr_reg_3531;
reg   [7:0] output_temp_13_addr_reg_3531_pp0_iter5_reg;
reg   [7:0] output_temp_13_addr_reg_3531_pp0_iter6_reg;
reg   [7:0] output_temp_13_addr_reg_3531_pp0_iter7_reg;
reg   [7:0] output_temp_13_addr_reg_3531_pp0_iter8_reg;
reg   [7:0] output_temp_13_addr_reg_3531_pp0_iter9_reg;
reg   [7:0] output_temp_14_addr_reg_3537;
reg   [7:0] output_temp_14_addr_reg_3537_pp0_iter5_reg;
reg   [7:0] output_temp_14_addr_reg_3537_pp0_iter6_reg;
reg   [7:0] output_temp_14_addr_reg_3537_pp0_iter7_reg;
reg   [7:0] output_temp_14_addr_reg_3537_pp0_iter8_reg;
reg   [7:0] output_temp_14_addr_reg_3537_pp0_iter9_reg;
reg   [7:0] output_temp_15_addr_reg_3543;
reg   [7:0] output_temp_15_addr_reg_3543_pp0_iter5_reg;
reg   [7:0] output_temp_15_addr_reg_3543_pp0_iter6_reg;
reg   [7:0] output_temp_15_addr_reg_3543_pp0_iter7_reg;
reg   [7:0] output_temp_15_addr_reg_3543_pp0_iter8_reg;
reg   [7:0] output_temp_15_addr_reg_3543_pp0_iter9_reg;
wire   [15:0] grp_mac_1_1_s_fu_1188_ap_return;
reg   [15:0] tmp_324_reg_3549;
wire   [15:0] p_pn_fu_2534_p3;
reg   [15:0] p_pn_reg_3554;
wire   [15:0] grp_mac_1_1_s_fu_1194_ap_return;
reg   [15:0] tmp_328_reg_3559;
wire   [15:0] p_pn_1_fu_2544_p3;
reg   [15:0] p_pn_1_reg_3564;
wire   [15:0] grp_mac_1_1_s_fu_1200_ap_return;
reg   [15:0] tmp_331_reg_3569;
wire   [15:0] p_pn_2_fu_2554_p3;
reg   [15:0] p_pn_2_reg_3574;
wire   [15:0] grp_mac_1_1_s_fu_1206_ap_return;
reg   [15:0] tmp_334_reg_3579;
wire   [15:0] p_pn_3_fu_2564_p3;
reg   [15:0] p_pn_3_reg_3584;
wire   [15:0] grp_mac_1_1_s_fu_1212_ap_return;
reg   [15:0] tmp_337_reg_3589;
wire   [15:0] p_pn_4_fu_2574_p3;
reg   [15:0] p_pn_4_reg_3594;
wire   [15:0] grp_mac_1_1_s_fu_1218_ap_return;
reg   [15:0] tmp_340_reg_3599;
wire   [15:0] p_pn_5_fu_2584_p3;
reg   [15:0] p_pn_5_reg_3604;
wire   [15:0] grp_mac_1_1_s_fu_1224_ap_return;
reg   [15:0] tmp_343_reg_3609;
wire   [15:0] p_pn_6_fu_2594_p3;
reg   [15:0] p_pn_6_reg_3614;
wire   [15:0] grp_mac_1_1_s_fu_1230_ap_return;
reg   [15:0] tmp_346_reg_3619;
wire   [15:0] p_pn_7_fu_2604_p3;
reg   [15:0] p_pn_7_reg_3624;
wire   [15:0] grp_mac_1_1_s_fu_1236_ap_return;
reg   [15:0] tmp_349_reg_3629;
wire   [15:0] p_pn_8_fu_2614_p3;
reg   [15:0] p_pn_8_reg_3634;
wire   [15:0] grp_mac_1_1_s_fu_1242_ap_return;
reg   [15:0] tmp_352_reg_3639;
wire   [15:0] p_pn_9_fu_2624_p3;
reg   [15:0] p_pn_9_reg_3644;
wire   [15:0] grp_mac_1_1_s_fu_1248_ap_return;
reg   [15:0] tmp_355_reg_3649;
wire   [15:0] p_pn_10_fu_2634_p3;
reg   [15:0] p_pn_10_reg_3654;
wire   [15:0] grp_mac_1_1_s_fu_1254_ap_return;
reg   [15:0] tmp_358_reg_3659;
wire   [15:0] p_pn_11_fu_2644_p3;
reg   [15:0] p_pn_11_reg_3664;
wire   [15:0] grp_mac_1_1_s_fu_1260_ap_return;
reg   [15:0] tmp_361_reg_3669;
wire   [15:0] p_pn_12_fu_2654_p3;
reg   [15:0] p_pn_12_reg_3674;
wire   [15:0] grp_mac_1_1_s_fu_1266_ap_return;
reg   [15:0] tmp_364_reg_3679;
wire   [15:0] p_pn_13_fu_2664_p3;
reg   [15:0] p_pn_13_reg_3684;
wire   [15:0] grp_mac_1_1_s_fu_1272_ap_return;
reg   [15:0] tmp_367_reg_3689;
wire   [15:0] p_pn_14_fu_2674_p3;
reg   [15:0] p_pn_14_reg_3694;
wire   [15:0] grp_mac_1_1_s_fu_1278_ap_return;
reg   [15:0] tmp_370_reg_3699;
wire   [15:0] p_pn_s_fu_2684_p3;
reg   [15:0] p_pn_s_reg_3704;
wire   [15:0] grp_fu_1284_p2;
reg   [15:0] acc_dat_reg_3709;
reg   [15:0] acc_dat_reg_3709_pp0_iter10_reg;
reg   [15:0] acc_dat_reg_3709_pp0_iter11_reg;
wire   [15:0] grp_fu_1288_p2;
reg   [15:0] acc_dat_1_reg_3716;
reg   [15:0] acc_dat_1_reg_3716_pp0_iter10_reg;
reg   [15:0] acc_dat_1_reg_3716_pp0_iter11_reg;
wire   [15:0] grp_fu_1292_p2;
reg   [15:0] acc_dat_2_reg_3723;
reg   [15:0] acc_dat_2_reg_3723_pp0_iter10_reg;
reg   [15:0] acc_dat_2_reg_3723_pp0_iter11_reg;
wire   [15:0] grp_fu_1296_p2;
reg   [15:0] acc_dat_3_reg_3730;
reg   [15:0] acc_dat_3_reg_3730_pp0_iter10_reg;
reg   [15:0] acc_dat_3_reg_3730_pp0_iter11_reg;
wire   [15:0] grp_fu_1300_p2;
reg   [15:0] acc_dat_4_reg_3737;
reg   [15:0] acc_dat_4_reg_3737_pp0_iter10_reg;
reg   [15:0] acc_dat_4_reg_3737_pp0_iter11_reg;
wire   [15:0] grp_fu_1304_p2;
reg   [15:0] acc_dat_5_reg_3744;
reg   [15:0] acc_dat_5_reg_3744_pp0_iter10_reg;
reg   [15:0] acc_dat_5_reg_3744_pp0_iter11_reg;
wire   [15:0] grp_fu_1308_p2;
reg   [15:0] acc_dat_6_reg_3751;
reg   [15:0] acc_dat_6_reg_3751_pp0_iter10_reg;
reg   [15:0] acc_dat_6_reg_3751_pp0_iter11_reg;
wire   [15:0] grp_fu_1312_p2;
reg   [15:0] acc_dat_7_reg_3758;
reg   [15:0] acc_dat_7_reg_3758_pp0_iter10_reg;
reg   [15:0] acc_dat_7_reg_3758_pp0_iter11_reg;
wire   [15:0] grp_fu_1316_p2;
reg   [15:0] acc_dat_8_reg_3765;
reg   [15:0] acc_dat_8_reg_3765_pp0_iter10_reg;
reg   [15:0] acc_dat_8_reg_3765_pp0_iter11_reg;
wire   [15:0] grp_fu_1320_p2;
reg   [15:0] acc_dat_9_reg_3772;
reg   [15:0] acc_dat_9_reg_3772_pp0_iter10_reg;
reg   [15:0] acc_dat_9_reg_3772_pp0_iter11_reg;
wire   [15:0] grp_fu_1324_p2;
reg   [15:0] acc_dat_10_reg_3779;
reg   [15:0] acc_dat_10_reg_3779_pp0_iter10_reg;
reg   [15:0] acc_dat_10_reg_3779_pp0_iter11_reg;
wire   [15:0] grp_fu_1328_p2;
reg   [15:0] acc_dat_11_reg_3786;
reg   [15:0] acc_dat_11_reg_3786_pp0_iter10_reg;
reg   [15:0] acc_dat_11_reg_3786_pp0_iter11_reg;
wire   [15:0] grp_fu_1332_p2;
reg   [15:0] acc_dat_12_reg_3793;
reg   [15:0] acc_dat_12_reg_3793_pp0_iter10_reg;
reg   [15:0] acc_dat_12_reg_3793_pp0_iter11_reg;
wire   [15:0] grp_fu_1336_p2;
reg   [15:0] acc_dat_13_reg_3800;
reg   [15:0] acc_dat_13_reg_3800_pp0_iter10_reg;
reg   [15:0] acc_dat_13_reg_3800_pp0_iter11_reg;
wire   [15:0] grp_fu_1340_p2;
reg   [15:0] acc_dat_14_reg_3807;
reg   [15:0] acc_dat_14_reg_3807_pp0_iter10_reg;
reg   [15:0] acc_dat_14_reg_3807_pp0_iter11_reg;
wire   [15:0] grp_fu_1344_p2;
reg   [15:0] acc_dat_s_reg_3814;
reg   [15:0] acc_dat_s_reg_3814_pp0_iter10_reg;
reg   [15:0] acc_dat_s_reg_3814_pp0_iter11_reg;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state7;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
wire   [7:0] output_temp_0_address0;
reg    output_temp_0_ce0;
wire   [15:0] output_temp_0_q0;
reg    output_temp_0_ce1;
reg    output_temp_0_we1;
wire   [7:0] output_temp_1_address0;
reg    output_temp_1_ce0;
wire   [15:0] output_temp_1_q0;
reg    output_temp_1_ce1;
reg    output_temp_1_we1;
wire   [7:0] output_temp_2_address0;
reg    output_temp_2_ce0;
wire   [15:0] output_temp_2_q0;
reg    output_temp_2_ce1;
reg    output_temp_2_we1;
wire   [7:0] output_temp_3_address0;
reg    output_temp_3_ce0;
wire   [15:0] output_temp_3_q0;
reg    output_temp_3_ce1;
reg    output_temp_3_we1;
wire   [7:0] output_temp_4_address0;
reg    output_temp_4_ce0;
wire   [15:0] output_temp_4_q0;
reg    output_temp_4_ce1;
reg    output_temp_4_we1;
wire   [7:0] output_temp_5_address0;
reg    output_temp_5_ce0;
wire   [15:0] output_temp_5_q0;
reg    output_temp_5_ce1;
reg    output_temp_5_we1;
wire   [7:0] output_temp_6_address0;
reg    output_temp_6_ce0;
wire   [15:0] output_temp_6_q0;
reg    output_temp_6_ce1;
reg    output_temp_6_we1;
wire   [7:0] output_temp_7_address0;
reg    output_temp_7_ce0;
wire   [15:0] output_temp_7_q0;
reg    output_temp_7_ce1;
reg    output_temp_7_we1;
wire   [7:0] output_temp_8_address0;
reg    output_temp_8_ce0;
wire   [15:0] output_temp_8_q0;
reg    output_temp_8_ce1;
reg    output_temp_8_we1;
wire   [7:0] output_temp_9_address0;
reg    output_temp_9_ce0;
wire   [15:0] output_temp_9_q0;
reg    output_temp_9_ce1;
reg    output_temp_9_we1;
wire   [7:0] output_temp_10_address0;
reg    output_temp_10_ce0;
wire   [15:0] output_temp_10_q0;
reg    output_temp_10_ce1;
reg    output_temp_10_we1;
wire   [7:0] output_temp_11_address0;
reg    output_temp_11_ce0;
wire   [15:0] output_temp_11_q0;
reg    output_temp_11_ce1;
reg    output_temp_11_we1;
wire   [7:0] output_temp_12_address0;
reg    output_temp_12_ce0;
wire   [15:0] output_temp_12_q0;
reg    output_temp_12_ce1;
reg    output_temp_12_we1;
wire   [7:0] output_temp_13_address0;
reg    output_temp_13_ce0;
wire   [15:0] output_temp_13_q0;
reg    output_temp_13_ce1;
reg    output_temp_13_we1;
wire   [7:0] output_temp_14_address0;
reg    output_temp_14_ce0;
wire   [15:0] output_temp_14_q0;
reg    output_temp_14_ce1;
reg    output_temp_14_we1;
wire   [7:0] output_temp_15_address0;
reg    output_temp_15_ce0;
wire   [15:0] output_temp_15_q0;
reg    output_temp_15_ce1;
reg    output_temp_15_we1;
wire   [15:0] grp_mac_1_1_s_fu_1188_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1194_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1200_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1206_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1212_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1218_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1224_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1230_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1236_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1242_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1248_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1254_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1260_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1266_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1272_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1278_weight_regs_read;
reg   [1:0] tn_reg_1155;
reg   [30:0] tr_reg_1166;
wire    ap_CS_fsm_state20;
wire    ap_block_pp0_stage0;
wire   [63:0] tmp_556_cast_fu_2512_p1;
wire   [0:0] tmp_311_fu_1531_p2;
wire   [0:0] icmp_fu_1556_p2;
wire   [0:0] tmp_854_2_fu_1571_p2;
wire   [0:0] icmp9_fu_1596_p2;
wire   [0:0] tmp_854_4_fu_1611_p2;
wire   [0:0] tmp_854_5_fu_1626_p2;
wire   [0:0] tmp_854_6_fu_1641_p2;
wire   [0:0] icmp10_fu_1666_p2;
wire   [0:0] tmp_854_8_fu_1681_p2;
wire   [0:0] tmp_854_9_fu_1696_p2;
wire   [0:0] tmp_854_s_fu_1711_p2;
wire   [0:0] tmp_854_1_fu_1726_p2;
wire   [0:0] tmp_854_3_fu_1741_p2;
wire   [0:0] tmp_854_7_fu_1756_p2;
wire   [0:0] tmp_854_10_fu_1771_p2;
wire   [0:0] icmp11_fu_1796_p2;
wire   [0:0] icmp16_fu_2147_p2;
wire   [0:0] tmp_789_fu_2128_p1;
wire    ap_block_pp0_stage0_01001;
reg   [15:0] tmp_741_fu_252;
reg   [15:0] tmp_742_fu_256;
reg   [15:0] tmp_743_fu_260;
reg   [15:0] tmp_744_fu_264;
reg   [15:0] tmp_745_fu_268;
reg   [15:0] tmp_746_fu_272;
reg   [15:0] tmp_747_fu_276;
reg   [15:0] tmp_748_fu_280;
reg   [15:0] tmp_749_fu_284;
reg   [15:0] tmp_750_fu_288;
reg   [15:0] tmp_751_fu_292;
reg   [15:0] tmp_752_fu_296;
reg   [15:0] tmp_753_fu_300;
reg   [15:0] tmp_754_fu_304;
reg   [15:0] tmp_755_fu_308;
reg   [15:0] tmp_756_fu_312;
reg   [15:0] weight_temp_0_0_fu_316;
reg   [15:0] weight_temp_1_0_fu_320;
reg   [15:0] weight_temp_2_0_fu_324;
reg   [15:0] weight_temp_3_0_fu_328;
reg   [15:0] weight_temp_4_0_fu_332;
reg   [15:0] weight_temp_5_0_fu_336;
reg   [15:0] weight_temp_6_0_fu_340;
reg   [15:0] weight_temp_7_0_fu_344;
reg   [15:0] weight_temp_8_0_fu_348;
reg   [15:0] weight_temp_9_0_fu_352;
reg   [15:0] weight_temp_10_0_fu_356;
reg   [15:0] weight_temp_11_0_fu_360;
reg   [15:0] weight_temp_12_0_fu_364;
reg   [15:0] weight_temp_13_0_fu_368;
reg   [15:0] weight_temp_14_0_fu_372;
reg   [15:0] weight_temp_15_0_fu_376;
reg   [15:0] weight_temp_15_0_s_fu_380;
reg   [15:0] weight_temp_0_0_s_fu_384;
reg   [15:0] weight_temp_1_0_s_fu_388;
reg   [15:0] weight_temp_2_0_s_fu_392;
reg   [15:0] weight_temp_3_0_s_fu_396;
reg   [15:0] weight_temp_4_0_s_fu_400;
reg   [15:0] weight_temp_5_0_s_fu_404;
reg   [15:0] weight_temp_6_0_s_fu_408;
reg   [15:0] weight_temp_7_0_s_fu_412;
reg   [15:0] weight_temp_8_0_s_fu_416;
reg   [15:0] weight_temp_9_0_s_fu_420;
reg   [15:0] weight_temp_10_0_s_fu_424;
reg   [15:0] weight_temp_11_0_s_fu_428;
reg   [15:0] weight_temp_12_0_s_fu_432;
reg   [15:0] weight_temp_13_0_s_fu_436;
reg   [15:0] weight_temp_14_0_s_fu_440;
wire   [0:0] tmp_757_fu_1444_p3;
wire   [31:0] tmp_304_fu_1452_p2;
wire   [0:0] tmp_758_fu_1466_p3;
wire   [31:0] tmp_305_fu_1474_p2;
wire   [31:0] tmp_306_fu_1488_p2;
wire   [0:0] tmp_307_fu_1493_p2;
wire   [31:0] tmp_308_fu_1507_p2;
wire   [0:0] tmp_309_fu_1512_p2;
wire   [31:0] mLoops_fu_1499_p3;
wire   [30:0] tmp_760_fu_1546_p4;
wire   [29:0] tmp_763_fu_1586_p4;
wire   [28:0] tmp_768_fu_1656_p4;
wire   [27:0] tmp_777_fu_1786_p4;
wire   [30:0] tmp_779_fu_1817_p4;
wire   [29:0] tmp_780_fu_1839_p4;
wire   [28:0] tmp_781_fu_1873_p4;
wire   [27:0] tmp_782_fu_1931_p4;
wire   [31:0] tn_cast_fu_1947_p1;
wire   [0:0] tmp_316_fu_2106_p2;
wire   [31:0] tmp_317_fu_2117_p2;
wire   [31:0] tmp_315_fu_2133_p2;
wire   [23:0] tmp_783_fu_2137_p4;
wire   [31:0] tr_cast_fu_2153_p1;
wire   [5:0] tmp_805_fu_2168_p1;
wire   [31:0] tc_cast_fu_2180_p1;
wire   [9:0] tmp_806_fu_2199_p1;
wire   [0:0] grp_fu_1348_p2;
wire   [0:0] grp_fu_1353_p2;
wire   [0:0] grp_fu_1358_p2;
wire   [0:0] grp_fu_1363_p2;
wire   [0:0] grp_fu_1368_p2;
wire   [0:0] grp_fu_1373_p2;
wire   [0:0] grp_fu_1378_p2;
wire   [0:0] grp_fu_1383_p2;
wire   [0:0] grp_fu_1388_p2;
wire   [0:0] grp_fu_1393_p2;
wire   [0:0] grp_fu_1398_p2;
wire   [0:0] grp_fu_1403_p2;
wire   [0:0] grp_fu_1408_p2;
wire   [0:0] grp_fu_1413_p2;
wire   [0:0] grp_fu_1418_p2;
wire   [0:0] grp_fu_1423_p2;
wire    ap_block_pp0_stage0_00001;
reg   [7:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
end

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_0_address0),
    .ce0(output_temp_0_ce0),
    .q0(output_temp_0_q0),
    .address1(output_temp_0_addr_reg_3453_pp0_iter9_reg),
    .ce1(output_temp_0_ce1),
    .we1(output_temp_0_we1),
    .d1(acc_dat_reg_3709)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_1_address0),
    .ce0(output_temp_1_ce0),
    .q0(output_temp_1_q0),
    .address1(output_temp_1_addr_reg_3459_pp0_iter9_reg),
    .ce1(output_temp_1_ce1),
    .we1(output_temp_1_we1),
    .d1(acc_dat_1_reg_3716)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_2_address0),
    .ce0(output_temp_2_ce0),
    .q0(output_temp_2_q0),
    .address1(output_temp_2_addr_reg_3465_pp0_iter9_reg),
    .ce1(output_temp_2_ce1),
    .we1(output_temp_2_we1),
    .d1(acc_dat_2_reg_3723)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_3_address0),
    .ce0(output_temp_3_ce0),
    .q0(output_temp_3_q0),
    .address1(output_temp_3_addr_reg_3471_pp0_iter9_reg),
    .ce1(output_temp_3_ce1),
    .we1(output_temp_3_we1),
    .d1(acc_dat_3_reg_3730)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_4_address0),
    .ce0(output_temp_4_ce0),
    .q0(output_temp_4_q0),
    .address1(output_temp_4_addr_reg_3477_pp0_iter9_reg),
    .ce1(output_temp_4_ce1),
    .we1(output_temp_4_we1),
    .d1(acc_dat_4_reg_3737)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_5_address0),
    .ce0(output_temp_5_ce0),
    .q0(output_temp_5_q0),
    .address1(output_temp_5_addr_reg_3483_pp0_iter9_reg),
    .ce1(output_temp_5_ce1),
    .we1(output_temp_5_we1),
    .d1(acc_dat_5_reg_3744)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_6_address0),
    .ce0(output_temp_6_ce0),
    .q0(output_temp_6_q0),
    .address1(output_temp_6_addr_reg_3489_pp0_iter9_reg),
    .ce1(output_temp_6_ce1),
    .we1(output_temp_6_we1),
    .d1(acc_dat_6_reg_3751)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_7_address0),
    .ce0(output_temp_7_ce0),
    .q0(output_temp_7_q0),
    .address1(output_temp_7_addr_reg_3495_pp0_iter9_reg),
    .ce1(output_temp_7_ce1),
    .we1(output_temp_7_we1),
    .d1(acc_dat_7_reg_3758)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_8_address0),
    .ce0(output_temp_8_ce0),
    .q0(output_temp_8_q0),
    .address1(output_temp_8_addr_reg_3501_pp0_iter9_reg),
    .ce1(output_temp_8_ce1),
    .we1(output_temp_8_we1),
    .d1(acc_dat_8_reg_3765)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_9_address0),
    .ce0(output_temp_9_ce0),
    .q0(output_temp_9_q0),
    .address1(output_temp_9_addr_reg_3507_pp0_iter9_reg),
    .ce1(output_temp_9_ce1),
    .we1(output_temp_9_we1),
    .d1(acc_dat_9_reg_3772)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_10_address0),
    .ce0(output_temp_10_ce0),
    .q0(output_temp_10_q0),
    .address1(output_temp_10_addr_reg_3513_pp0_iter9_reg),
    .ce1(output_temp_10_ce1),
    .we1(output_temp_10_we1),
    .d1(acc_dat_10_reg_3779)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_11_address0),
    .ce0(output_temp_11_ce0),
    .q0(output_temp_11_q0),
    .address1(output_temp_11_addr_reg_3519_pp0_iter9_reg),
    .ce1(output_temp_11_ce1),
    .we1(output_temp_11_we1),
    .d1(acc_dat_11_reg_3786)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_12_address0),
    .ce0(output_temp_12_ce0),
    .q0(output_temp_12_q0),
    .address1(output_temp_12_addr_reg_3525_pp0_iter9_reg),
    .ce1(output_temp_12_ce1),
    .we1(output_temp_12_we1),
    .d1(acc_dat_12_reg_3793)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_13_address0),
    .ce0(output_temp_13_ce0),
    .q0(output_temp_13_q0),
    .address1(output_temp_13_addr_reg_3531_pp0_iter9_reg),
    .ce1(output_temp_13_ce1),
    .we1(output_temp_13_we1),
    .d1(acc_dat_13_reg_3800)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_14_address0),
    .ce0(output_temp_14_ce0),
    .q0(output_temp_14_q0),
    .address1(output_temp_14_addr_reg_3537_pp0_iter9_reg),
    .ce1(output_temp_14_ce1),
    .we1(output_temp_14_we1),
    .d1(acc_dat_14_reg_3807)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_15_address0),
    .ce0(output_temp_15_ce0),
    .q0(output_temp_15_q0),
    .address1(output_temp_15_addr_reg_3543_pp0_iter9_reg),
    .ce1(output_temp_15_ce1),
    .we1(output_temp_15_we1),
    .d1(acc_dat_s_reg_3814)
);

mac_1_1_s grp_mac_1_1_s_fu_1188(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_823_reg_3348),
    .weight_regs_read(grp_mac_1_1_s_fu_1188_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1188_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1194(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_823_reg_3348),
    .weight_regs_read(grp_mac_1_1_s_fu_1194_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1194_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1200(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_823_reg_3348),
    .weight_regs_read(grp_mac_1_1_s_fu_1200_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1200_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1206(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_823_reg_3348),
    .weight_regs_read(grp_mac_1_1_s_fu_1206_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1206_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1212(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_823_reg_3348),
    .weight_regs_read(grp_mac_1_1_s_fu_1212_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1212_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1218(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_823_reg_3348),
    .weight_regs_read(grp_mac_1_1_s_fu_1218_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1218_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1224(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_823_reg_3348),
    .weight_regs_read(grp_mac_1_1_s_fu_1224_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1224_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1230(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_823_reg_3348),
    .weight_regs_read(grp_mac_1_1_s_fu_1230_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1230_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1236(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_823_reg_3348),
    .weight_regs_read(grp_mac_1_1_s_fu_1236_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1236_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1242(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_823_reg_3348),
    .weight_regs_read(grp_mac_1_1_s_fu_1242_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1242_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1248(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_823_reg_3348),
    .weight_regs_read(grp_mac_1_1_s_fu_1248_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1248_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1254(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_823_reg_3348),
    .weight_regs_read(grp_mac_1_1_s_fu_1254_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1254_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1260(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_823_reg_3348),
    .weight_regs_read(grp_mac_1_1_s_fu_1260_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1260_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1266(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_823_reg_3348),
    .weight_regs_read(grp_mac_1_1_s_fu_1266_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1266_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1272(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_823_reg_3348),
    .weight_regs_read(grp_mac_1_1_s_fu_1272_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1272_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1278(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_823_reg_3348),
    .weight_regs_read(grp_mac_1_1_s_fu_1278_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1278_ap_return)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U2083(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_reg_3554),
    .din1(tmp_324_reg_3549),
    .ce(1'b1),
    .dout(grp_fu_1284_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U2084(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_1_reg_3564),
    .din1(tmp_328_reg_3559),
    .ce(1'b1),
    .dout(grp_fu_1288_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U2085(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_2_reg_3574),
    .din1(tmp_331_reg_3569),
    .ce(1'b1),
    .dout(grp_fu_1292_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U2086(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_3_reg_3584),
    .din1(tmp_334_reg_3579),
    .ce(1'b1),
    .dout(grp_fu_1296_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U2087(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_4_reg_3594),
    .din1(tmp_337_reg_3589),
    .ce(1'b1),
    .dout(grp_fu_1300_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U2088(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_5_reg_3604),
    .din1(tmp_340_reg_3599),
    .ce(1'b1),
    .dout(grp_fu_1304_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U2089(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_6_reg_3614),
    .din1(tmp_343_reg_3609),
    .ce(1'b1),
    .dout(grp_fu_1308_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U2090(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_7_reg_3624),
    .din1(tmp_346_reg_3619),
    .ce(1'b1),
    .dout(grp_fu_1312_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U2091(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_8_reg_3634),
    .din1(tmp_349_reg_3629),
    .ce(1'b1),
    .dout(grp_fu_1316_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U2092(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_9_reg_3644),
    .din1(tmp_352_reg_3639),
    .ce(1'b1),
    .dout(grp_fu_1320_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U2093(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_10_reg_3654),
    .din1(tmp_355_reg_3649),
    .ce(1'b1),
    .dout(grp_fu_1324_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U2094(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_11_reg_3664),
    .din1(tmp_358_reg_3659),
    .ce(1'b1),
    .dout(grp_fu_1328_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U2095(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_12_reg_3674),
    .din1(tmp_361_reg_3669),
    .ce(1'b1),
    .dout(grp_fu_1332_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U2096(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_13_reg_3684),
    .din1(tmp_364_reg_3679),
    .ce(1'b1),
    .dout(grp_fu_1336_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U2097(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_14_reg_3694),
    .din1(tmp_367_reg_3689),
    .ce(1'b1),
    .dout(grp_fu_1340_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U2098(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_s_reg_3704),
    .din1(tmp_370_reg_3699),
    .ce(1'b1),
    .dout(grp_fu_1344_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U2099(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_reg_3709),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1348_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U2100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_1_reg_3716),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1353_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U2101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_2_reg_3723),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1358_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U2102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_3_reg_3730),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1363_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U2103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_4_reg_3737),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1368_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U2104(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_5_reg_3744),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1373_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U2105(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_6_reg_3751),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1378_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U2106(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_7_reg_3758),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1383_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U2107(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_8_reg_3765),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1388_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U2108(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_9_reg_3772),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1393_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U2109(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_10_reg_3779),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1398_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U2110(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_11_reg_3786),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1403_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U2111(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_12_reg_3793),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1408_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U2112(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_13_reg_3800),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1413_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U2113(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_14_reg_3807),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1418_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U2114(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_s_reg_3814),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1423_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((tmp_789_fu_2128_p1 == 1'd0) & (tmp_313_fu_1951_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((tmp_319_fu_2157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state7)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state7);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end else if (((tmp_319_fu_2157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_321_fu_2184_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tc_reg_1177 <= tc_3_fu_2189_p2;
    end else if (((tmp_319_fu_2157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        tc_reg_1177 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_319_fu_2157_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        tn_reg_1155 <= tn_19_reg_3290;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tn_reg_1155 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tr_reg_1166 <= tr_10_reg_3329;
    end else if (((tmp_313_fu_1951_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        tr_reg_1166 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_880_0_0_s_reg_3257 == 1'd1))) begin
        acc_dat_10_reg_3779 <= grp_fu_1324_p2;
        p_pn_10_reg_3654 <= p_pn_10_fu_2634_p3;
        tmp_355_reg_3649 <= grp_mac_1_1_s_fu_1248_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        acc_dat_10_reg_3779_pp0_iter10_reg <= acc_dat_10_reg_3779;
        acc_dat_10_reg_3779_pp0_iter11_reg <= acc_dat_10_reg_3779_pp0_iter10_reg;
        acc_dat_11_reg_3786_pp0_iter10_reg <= acc_dat_11_reg_3786;
        acc_dat_11_reg_3786_pp0_iter11_reg <= acc_dat_11_reg_3786_pp0_iter10_reg;
        acc_dat_12_reg_3793_pp0_iter10_reg <= acc_dat_12_reg_3793;
        acc_dat_12_reg_3793_pp0_iter11_reg <= acc_dat_12_reg_3793_pp0_iter10_reg;
        acc_dat_13_reg_3800_pp0_iter10_reg <= acc_dat_13_reg_3800;
        acc_dat_13_reg_3800_pp0_iter11_reg <= acc_dat_13_reg_3800_pp0_iter10_reg;
        acc_dat_14_reg_3807_pp0_iter10_reg <= acc_dat_14_reg_3807;
        acc_dat_14_reg_3807_pp0_iter11_reg <= acc_dat_14_reg_3807_pp0_iter10_reg;
        acc_dat_1_reg_3716_pp0_iter10_reg <= acc_dat_1_reg_3716;
        acc_dat_1_reg_3716_pp0_iter11_reg <= acc_dat_1_reg_3716_pp0_iter10_reg;
        acc_dat_2_reg_3723_pp0_iter10_reg <= acc_dat_2_reg_3723;
        acc_dat_2_reg_3723_pp0_iter11_reg <= acc_dat_2_reg_3723_pp0_iter10_reg;
        acc_dat_3_reg_3730_pp0_iter10_reg <= acc_dat_3_reg_3730;
        acc_dat_3_reg_3730_pp0_iter11_reg <= acc_dat_3_reg_3730_pp0_iter10_reg;
        acc_dat_4_reg_3737_pp0_iter10_reg <= acc_dat_4_reg_3737;
        acc_dat_4_reg_3737_pp0_iter11_reg <= acc_dat_4_reg_3737_pp0_iter10_reg;
        acc_dat_5_reg_3744_pp0_iter10_reg <= acc_dat_5_reg_3744;
        acc_dat_5_reg_3744_pp0_iter11_reg <= acc_dat_5_reg_3744_pp0_iter10_reg;
        acc_dat_6_reg_3751_pp0_iter10_reg <= acc_dat_6_reg_3751;
        acc_dat_6_reg_3751_pp0_iter11_reg <= acc_dat_6_reg_3751_pp0_iter10_reg;
        acc_dat_7_reg_3758_pp0_iter10_reg <= acc_dat_7_reg_3758;
        acc_dat_7_reg_3758_pp0_iter11_reg <= acc_dat_7_reg_3758_pp0_iter10_reg;
        acc_dat_8_reg_3765_pp0_iter10_reg <= acc_dat_8_reg_3765;
        acc_dat_8_reg_3765_pp0_iter11_reg <= acc_dat_8_reg_3765_pp0_iter10_reg;
        acc_dat_9_reg_3772_pp0_iter10_reg <= acc_dat_9_reg_3772;
        acc_dat_9_reg_3772_pp0_iter11_reg <= acc_dat_9_reg_3772_pp0_iter10_reg;
        acc_dat_reg_3709_pp0_iter10_reg <= acc_dat_reg_3709;
        acc_dat_reg_3709_pp0_iter11_reg <= acc_dat_reg_3709_pp0_iter10_reg;
        acc_dat_s_reg_3814_pp0_iter10_reg <= acc_dat_s_reg_3814;
        acc_dat_s_reg_3814_pp0_iter11_reg <= acc_dat_s_reg_3814_pp0_iter10_reg;
        output_temp_0_addr_reg_3453 <= tmp_556_cast_fu_2512_p1;
        output_temp_0_addr_reg_3453_pp0_iter5_reg <= output_temp_0_addr_reg_3453;
        output_temp_0_addr_reg_3453_pp0_iter6_reg <= output_temp_0_addr_reg_3453_pp0_iter5_reg;
        output_temp_0_addr_reg_3453_pp0_iter7_reg <= output_temp_0_addr_reg_3453_pp0_iter6_reg;
        output_temp_0_addr_reg_3453_pp0_iter8_reg <= output_temp_0_addr_reg_3453_pp0_iter7_reg;
        output_temp_0_addr_reg_3453_pp0_iter9_reg <= output_temp_0_addr_reg_3453_pp0_iter8_reg;
        output_temp_10_addr_reg_3513 <= tmp_556_cast_fu_2512_p1;
        output_temp_10_addr_reg_3513_pp0_iter5_reg <= output_temp_10_addr_reg_3513;
        output_temp_10_addr_reg_3513_pp0_iter6_reg <= output_temp_10_addr_reg_3513_pp0_iter5_reg;
        output_temp_10_addr_reg_3513_pp0_iter7_reg <= output_temp_10_addr_reg_3513_pp0_iter6_reg;
        output_temp_10_addr_reg_3513_pp0_iter8_reg <= output_temp_10_addr_reg_3513_pp0_iter7_reg;
        output_temp_10_addr_reg_3513_pp0_iter9_reg <= output_temp_10_addr_reg_3513_pp0_iter8_reg;
        output_temp_11_addr_reg_3519 <= tmp_556_cast_fu_2512_p1;
        output_temp_11_addr_reg_3519_pp0_iter5_reg <= output_temp_11_addr_reg_3519;
        output_temp_11_addr_reg_3519_pp0_iter6_reg <= output_temp_11_addr_reg_3519_pp0_iter5_reg;
        output_temp_11_addr_reg_3519_pp0_iter7_reg <= output_temp_11_addr_reg_3519_pp0_iter6_reg;
        output_temp_11_addr_reg_3519_pp0_iter8_reg <= output_temp_11_addr_reg_3519_pp0_iter7_reg;
        output_temp_11_addr_reg_3519_pp0_iter9_reg <= output_temp_11_addr_reg_3519_pp0_iter8_reg;
        output_temp_12_addr_reg_3525 <= tmp_556_cast_fu_2512_p1;
        output_temp_12_addr_reg_3525_pp0_iter5_reg <= output_temp_12_addr_reg_3525;
        output_temp_12_addr_reg_3525_pp0_iter6_reg <= output_temp_12_addr_reg_3525_pp0_iter5_reg;
        output_temp_12_addr_reg_3525_pp0_iter7_reg <= output_temp_12_addr_reg_3525_pp0_iter6_reg;
        output_temp_12_addr_reg_3525_pp0_iter8_reg <= output_temp_12_addr_reg_3525_pp0_iter7_reg;
        output_temp_12_addr_reg_3525_pp0_iter9_reg <= output_temp_12_addr_reg_3525_pp0_iter8_reg;
        output_temp_13_addr_reg_3531 <= tmp_556_cast_fu_2512_p1;
        output_temp_13_addr_reg_3531_pp0_iter5_reg <= output_temp_13_addr_reg_3531;
        output_temp_13_addr_reg_3531_pp0_iter6_reg <= output_temp_13_addr_reg_3531_pp0_iter5_reg;
        output_temp_13_addr_reg_3531_pp0_iter7_reg <= output_temp_13_addr_reg_3531_pp0_iter6_reg;
        output_temp_13_addr_reg_3531_pp0_iter8_reg <= output_temp_13_addr_reg_3531_pp0_iter7_reg;
        output_temp_13_addr_reg_3531_pp0_iter9_reg <= output_temp_13_addr_reg_3531_pp0_iter8_reg;
        output_temp_14_addr_reg_3537 <= tmp_556_cast_fu_2512_p1;
        output_temp_14_addr_reg_3537_pp0_iter5_reg <= output_temp_14_addr_reg_3537;
        output_temp_14_addr_reg_3537_pp0_iter6_reg <= output_temp_14_addr_reg_3537_pp0_iter5_reg;
        output_temp_14_addr_reg_3537_pp0_iter7_reg <= output_temp_14_addr_reg_3537_pp0_iter6_reg;
        output_temp_14_addr_reg_3537_pp0_iter8_reg <= output_temp_14_addr_reg_3537_pp0_iter7_reg;
        output_temp_14_addr_reg_3537_pp0_iter9_reg <= output_temp_14_addr_reg_3537_pp0_iter8_reg;
        output_temp_15_addr_reg_3543 <= tmp_556_cast_fu_2512_p1;
        output_temp_15_addr_reg_3543_pp0_iter5_reg <= output_temp_15_addr_reg_3543;
        output_temp_15_addr_reg_3543_pp0_iter6_reg <= output_temp_15_addr_reg_3543_pp0_iter5_reg;
        output_temp_15_addr_reg_3543_pp0_iter7_reg <= output_temp_15_addr_reg_3543_pp0_iter6_reg;
        output_temp_15_addr_reg_3543_pp0_iter8_reg <= output_temp_15_addr_reg_3543_pp0_iter7_reg;
        output_temp_15_addr_reg_3543_pp0_iter9_reg <= output_temp_15_addr_reg_3543_pp0_iter8_reg;
        output_temp_1_addr_reg_3459 <= tmp_556_cast_fu_2512_p1;
        output_temp_1_addr_reg_3459_pp0_iter5_reg <= output_temp_1_addr_reg_3459;
        output_temp_1_addr_reg_3459_pp0_iter6_reg <= output_temp_1_addr_reg_3459_pp0_iter5_reg;
        output_temp_1_addr_reg_3459_pp0_iter7_reg <= output_temp_1_addr_reg_3459_pp0_iter6_reg;
        output_temp_1_addr_reg_3459_pp0_iter8_reg <= output_temp_1_addr_reg_3459_pp0_iter7_reg;
        output_temp_1_addr_reg_3459_pp0_iter9_reg <= output_temp_1_addr_reg_3459_pp0_iter8_reg;
        output_temp_2_addr_reg_3465 <= tmp_556_cast_fu_2512_p1;
        output_temp_2_addr_reg_3465_pp0_iter5_reg <= output_temp_2_addr_reg_3465;
        output_temp_2_addr_reg_3465_pp0_iter6_reg <= output_temp_2_addr_reg_3465_pp0_iter5_reg;
        output_temp_2_addr_reg_3465_pp0_iter7_reg <= output_temp_2_addr_reg_3465_pp0_iter6_reg;
        output_temp_2_addr_reg_3465_pp0_iter8_reg <= output_temp_2_addr_reg_3465_pp0_iter7_reg;
        output_temp_2_addr_reg_3465_pp0_iter9_reg <= output_temp_2_addr_reg_3465_pp0_iter8_reg;
        output_temp_3_addr_reg_3471 <= tmp_556_cast_fu_2512_p1;
        output_temp_3_addr_reg_3471_pp0_iter5_reg <= output_temp_3_addr_reg_3471;
        output_temp_3_addr_reg_3471_pp0_iter6_reg <= output_temp_3_addr_reg_3471_pp0_iter5_reg;
        output_temp_3_addr_reg_3471_pp0_iter7_reg <= output_temp_3_addr_reg_3471_pp0_iter6_reg;
        output_temp_3_addr_reg_3471_pp0_iter8_reg <= output_temp_3_addr_reg_3471_pp0_iter7_reg;
        output_temp_3_addr_reg_3471_pp0_iter9_reg <= output_temp_3_addr_reg_3471_pp0_iter8_reg;
        output_temp_4_addr_reg_3477 <= tmp_556_cast_fu_2512_p1;
        output_temp_4_addr_reg_3477_pp0_iter5_reg <= output_temp_4_addr_reg_3477;
        output_temp_4_addr_reg_3477_pp0_iter6_reg <= output_temp_4_addr_reg_3477_pp0_iter5_reg;
        output_temp_4_addr_reg_3477_pp0_iter7_reg <= output_temp_4_addr_reg_3477_pp0_iter6_reg;
        output_temp_4_addr_reg_3477_pp0_iter8_reg <= output_temp_4_addr_reg_3477_pp0_iter7_reg;
        output_temp_4_addr_reg_3477_pp0_iter9_reg <= output_temp_4_addr_reg_3477_pp0_iter8_reg;
        output_temp_5_addr_reg_3483 <= tmp_556_cast_fu_2512_p1;
        output_temp_5_addr_reg_3483_pp0_iter5_reg <= output_temp_5_addr_reg_3483;
        output_temp_5_addr_reg_3483_pp0_iter6_reg <= output_temp_5_addr_reg_3483_pp0_iter5_reg;
        output_temp_5_addr_reg_3483_pp0_iter7_reg <= output_temp_5_addr_reg_3483_pp0_iter6_reg;
        output_temp_5_addr_reg_3483_pp0_iter8_reg <= output_temp_5_addr_reg_3483_pp0_iter7_reg;
        output_temp_5_addr_reg_3483_pp0_iter9_reg <= output_temp_5_addr_reg_3483_pp0_iter8_reg;
        output_temp_6_addr_reg_3489 <= tmp_556_cast_fu_2512_p1;
        output_temp_6_addr_reg_3489_pp0_iter5_reg <= output_temp_6_addr_reg_3489;
        output_temp_6_addr_reg_3489_pp0_iter6_reg <= output_temp_6_addr_reg_3489_pp0_iter5_reg;
        output_temp_6_addr_reg_3489_pp0_iter7_reg <= output_temp_6_addr_reg_3489_pp0_iter6_reg;
        output_temp_6_addr_reg_3489_pp0_iter8_reg <= output_temp_6_addr_reg_3489_pp0_iter7_reg;
        output_temp_6_addr_reg_3489_pp0_iter9_reg <= output_temp_6_addr_reg_3489_pp0_iter8_reg;
        output_temp_7_addr_reg_3495 <= tmp_556_cast_fu_2512_p1;
        output_temp_7_addr_reg_3495_pp0_iter5_reg <= output_temp_7_addr_reg_3495;
        output_temp_7_addr_reg_3495_pp0_iter6_reg <= output_temp_7_addr_reg_3495_pp0_iter5_reg;
        output_temp_7_addr_reg_3495_pp0_iter7_reg <= output_temp_7_addr_reg_3495_pp0_iter6_reg;
        output_temp_7_addr_reg_3495_pp0_iter8_reg <= output_temp_7_addr_reg_3495_pp0_iter7_reg;
        output_temp_7_addr_reg_3495_pp0_iter9_reg <= output_temp_7_addr_reg_3495_pp0_iter8_reg;
        output_temp_8_addr_reg_3501 <= tmp_556_cast_fu_2512_p1;
        output_temp_8_addr_reg_3501_pp0_iter5_reg <= output_temp_8_addr_reg_3501;
        output_temp_8_addr_reg_3501_pp0_iter6_reg <= output_temp_8_addr_reg_3501_pp0_iter5_reg;
        output_temp_8_addr_reg_3501_pp0_iter7_reg <= output_temp_8_addr_reg_3501_pp0_iter6_reg;
        output_temp_8_addr_reg_3501_pp0_iter8_reg <= output_temp_8_addr_reg_3501_pp0_iter7_reg;
        output_temp_8_addr_reg_3501_pp0_iter9_reg <= output_temp_8_addr_reg_3501_pp0_iter8_reg;
        output_temp_9_addr_reg_3507 <= tmp_556_cast_fu_2512_p1;
        output_temp_9_addr_reg_3507_pp0_iter5_reg <= output_temp_9_addr_reg_3507;
        output_temp_9_addr_reg_3507_pp0_iter6_reg <= output_temp_9_addr_reg_3507_pp0_iter5_reg;
        output_temp_9_addr_reg_3507_pp0_iter7_reg <= output_temp_9_addr_reg_3507_pp0_iter6_reg;
        output_temp_9_addr_reg_3507_pp0_iter8_reg <= output_temp_9_addr_reg_3507_pp0_iter7_reg;
        output_temp_9_addr_reg_3507_pp0_iter9_reg <= output_temp_9_addr_reg_3507_pp0_iter8_reg;
        tmp_323_reg_3368_pp0_iter2_reg <= tmp_323_reg_3368_pp0_iter1_reg;
        tmp_323_reg_3368_pp0_iter3_reg <= tmp_323_reg_3368_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_880_0_0_1_reg_3262 == 1'd1))) begin
        acc_dat_11_reg_3786 <= grp_fu_1328_p2;
        p_pn_11_reg_3664 <= p_pn_11_fu_2644_p3;
        tmp_358_reg_3659 <= grp_mac_1_1_s_fu_1254_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_880_0_0_3_reg_3267 == 1'd1))) begin
        acc_dat_12_reg_3793 <= grp_fu_1332_p2;
        p_pn_12_reg_3674 <= p_pn_12_fu_2654_p3;
        tmp_361_reg_3669 <= grp_mac_1_1_s_fu_1260_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_880_0_0_7_reg_3272 == 1'd1))) begin
        acc_dat_13_reg_3800 <= grp_fu_1336_p2;
        p_pn_13_reg_3684 <= p_pn_13_fu_2664_p3;
        tmp_364_reg_3679 <= grp_mac_1_1_s_fu_1266_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_880_0_0_10_reg_3277 == 1'd1))) begin
        acc_dat_14_reg_3807 <= grp_fu_1340_p2;
        p_pn_14_reg_3694 <= p_pn_14_fu_2674_p3;
        tmp_367_reg_3689 <= grp_mac_1_1_s_fu_1272_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp12_reg_3212 == 1'd1))) begin
        acc_dat_1_reg_3716 <= grp_fu_1288_p2;
        p_pn_1_reg_3564 <= p_pn_1_fu_2544_p3;
        tmp_328_reg_3559 <= grp_mac_1_1_s_fu_1194_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_880_0_0_2_reg_3217 == 1'd1))) begin
        acc_dat_2_reg_3723 <= grp_fu_1292_p2;
        p_pn_2_reg_3574 <= p_pn_2_fu_2554_p3;
        tmp_331_reg_3569 <= grp_mac_1_1_s_fu_1200_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp13_reg_3222 == 1'd1))) begin
        acc_dat_3_reg_3730 <= grp_fu_1296_p2;
        p_pn_3_reg_3584 <= p_pn_3_fu_2564_p3;
        tmp_334_reg_3579 <= grp_mac_1_1_s_fu_1206_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_880_0_0_4_reg_3227 == 1'd1))) begin
        acc_dat_4_reg_3737 <= grp_fu_1300_p2;
        p_pn_4_reg_3594 <= p_pn_4_fu_2574_p3;
        tmp_337_reg_3589 <= grp_mac_1_1_s_fu_1212_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_880_0_0_5_reg_3232 == 1'd1))) begin
        acc_dat_5_reg_3744 <= grp_fu_1304_p2;
        p_pn_5_reg_3604 <= p_pn_5_fu_2584_p3;
        tmp_340_reg_3599 <= grp_mac_1_1_s_fu_1218_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_880_0_0_6_reg_3237 == 1'd1))) begin
        acc_dat_6_reg_3751 <= grp_fu_1308_p2;
        p_pn_6_reg_3614 <= p_pn_6_fu_2594_p3;
        tmp_343_reg_3609 <= grp_mac_1_1_s_fu_1224_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp14_reg_3242 == 1'd1))) begin
        acc_dat_7_reg_3758 <= grp_fu_1312_p2;
        p_pn_7_reg_3624 <= p_pn_7_fu_2604_p3;
        tmp_346_reg_3619 <= grp_mac_1_1_s_fu_1230_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_880_0_0_8_reg_3247 == 1'd1))) begin
        acc_dat_8_reg_3765 <= grp_fu_1316_p2;
        p_pn_8_reg_3634 <= p_pn_8_fu_2614_p3;
        tmp_349_reg_3629 <= grp_mac_1_1_s_fu_1236_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_880_0_0_9_reg_3252 == 1'd1))) begin
        acc_dat_9_reg_3772 <= grp_fu_1320_p2;
        p_pn_9_reg_3644 <= p_pn_9_fu_2624_p3;
        tmp_352_reg_3639 <= grp_mac_1_1_s_fu_1242_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_312_reg_3207 == 1'd1))) begin
        acc_dat_reg_3709 <= grp_fu_1284_p2;
        p_pn_reg_3554 <= p_pn_fu_2534_p3;
        tmp_324_reg_3549 <= grp_mac_1_1_s_fu_1188_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp15_reg_3282 == 1'd1))) begin
        acc_dat_s_reg_3814 <= grp_fu_1344_p2;
        p_pn_s_reg_3704 <= p_pn_s_fu_2684_p3;
        tmp_370_reg_3699 <= grp_mac_1_1_s_fu_1278_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cLoops_reg_3138 <= cLoops_fu_1458_p3;
        icmp12_reg_3212 <= icmp12_fu_1827_p2;
        icmp13_reg_3222 <= icmp13_fu_1849_p2;
        icmp14_reg_3242 <= icmp14_fu_1883_p2;
        icmp15_reg_3282 <= icmp15_fu_1941_p2;
        nLoops_reg_3148 <= nLoops_fu_1518_p3;
        rLoops_reg_3143 <= rLoops_fu_1480_p3;
        tmp_310_reg_3154 <= tmp_310_fu_1526_p2;
        tmp_312_reg_3207 <= tmp_312_fu_1811_p2;
        tmp_785_reg_3128 <= data_c_V_dout;
        tmp_786_reg_3133 <= data_r_V_dout;
        tmp_880_0_0_10_reg_3277 <= tmp_880_0_0_10_fu_1925_p2;
        tmp_880_0_0_1_reg_3262 <= tmp_880_0_0_1_fu_1907_p2;
        tmp_880_0_0_2_reg_3217 <= tmp_880_0_0_2_fu_1833_p2;
        tmp_880_0_0_3_reg_3267 <= tmp_880_0_0_3_fu_1913_p2;
        tmp_880_0_0_4_reg_3227 <= tmp_880_0_0_4_fu_1855_p2;
        tmp_880_0_0_5_reg_3232 <= tmp_880_0_0_5_fu_1861_p2;
        tmp_880_0_0_6_reg_3237 <= tmp_880_0_0_6_fu_1867_p2;
        tmp_880_0_0_7_reg_3272 <= tmp_880_0_0_7_fu_1919_p2;
        tmp_880_0_0_8_reg_3247 <= tmp_880_0_0_8_fu_1889_p2;
        tmp_880_0_0_9_reg_3252 <= tmp_880_0_0_9_fu_1895_p2;
        tmp_880_0_0_s_reg_3257 <= tmp_880_0_0_s_fu_1901_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        or_cond_reg_3295 <= or_cond_fu_2112_p2;
        tmp_318_reg_3315 <= tmp_318_fu_2122_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_321_reg_3339 <= tmp_321_fu_2184_p2;
        tmp_323_reg_3368_pp0_iter1_reg <= tmp_323_reg_3368;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_321_fu_2184_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_323_reg_3368 <= tmp_323_fu_2203_p2;
        tmp_823_reg_3348 <= input_buffer_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_319_fu_2157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_554_cast_reg_3334[9 : 4] <= tmp_554_cast_fu_2172_p3[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_311_fu_1531_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_741_fu_252 <= beta_buffer_0_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (icmp_fu_1556_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_742_fu_256 <= beta_buffer_1_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_2_fu_1571_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_743_fu_260 <= beta_buffer_2_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (icmp9_fu_1596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_744_fu_264 <= beta_buffer_3_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_4_fu_1611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_745_fu_268 <= beta_buffer_4_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_5_fu_1626_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_746_fu_272 <= beta_buffer_5_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_6_fu_1641_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_747_fu_276 <= beta_buffer_6_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (icmp10_fu_1666_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_748_fu_280 <= beta_buffer_7_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_8_fu_1681_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_749_fu_284 <= beta_buffer_8_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_9_fu_1696_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_750_fu_288 <= beta_buffer_9_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_s_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_751_fu_292 <= beta_buffer_10_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_1_fu_1726_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_752_fu_296 <= beta_buffer_11_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_3_fu_1741_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_753_fu_300 <= beta_buffer_12_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_7_fu_1756_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_754_fu_304 <= beta_buffer_13_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_10_fu_1771_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_755_fu_308 <= beta_buffer_14_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (icmp11_fu_1796_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_756_fu_312 <= beta_buffer_15_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_303_nbwritereq_fu_516_p3 == 1'd1) & (tmp_nbreadreq_fu_508_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_787_reg_3113 <= data_m_V_dout;
        tmp_788_reg_3119 <= data_n_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tn_19_reg_3290 <= tn_19_fu_1956_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tr_10_reg_3329 <= tr_10_fu_2162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_312_reg_3207 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_0_0_fu_316 <= weight_buffer_0_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_321_reg_3339 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_temp_0_0_s_fu_384 <= weight_regs_0_0_2_we_fu_2304_p3;
        weight_temp_10_0_s_fu_424 <= weight_regs_10_0_2_w_fu_2384_p3;
        weight_temp_11_0_s_fu_428 <= weight_regs_11_0_2_w_fu_2392_p3;
        weight_temp_12_0_s_fu_432 <= weight_regs_12_0_2_w_fu_2400_p3;
        weight_temp_13_0_s_fu_436 <= weight_regs_13_0_2_w_fu_2408_p3;
        weight_temp_14_0_s_fu_440 <= weight_regs_14_0_2_w_fu_2416_p3;
        weight_temp_15_0_s_fu_380 <= weight_regs_15_0_2_w_fu_2424_p3;
        weight_temp_1_0_s_fu_388 <= weight_regs_1_0_2_we_fu_2312_p3;
        weight_temp_2_0_s_fu_392 <= weight_regs_2_0_2_we_fu_2320_p3;
        weight_temp_3_0_s_fu_396 <= weight_regs_3_0_2_we_fu_2328_p3;
        weight_temp_4_0_s_fu_400 <= weight_regs_4_0_2_we_fu_2336_p3;
        weight_temp_5_0_s_fu_404 <= weight_regs_5_0_2_we_fu_2344_p3;
        weight_temp_6_0_s_fu_408 <= weight_regs_6_0_2_we_fu_2352_p3;
        weight_temp_7_0_s_fu_412 <= weight_regs_7_0_2_we_fu_2360_p3;
        weight_temp_8_0_s_fu_416 <= weight_regs_8_0_2_we_fu_2368_p3;
        weight_temp_9_0_s_fu_420 <= weight_regs_9_0_2_we_fu_2376_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_s_reg_3257 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_10_0_fu_356 <= weight_buffer_10_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_1_reg_3262 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_11_0_fu_360 <= weight_buffer_11_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_3_reg_3267 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_12_0_fu_364 <= weight_buffer_12_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_7_reg_3272 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_13_0_fu_368 <= weight_buffer_13_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_10_reg_3277 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_14_0_fu_372 <= weight_buffer_14_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (icmp15_reg_3282 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_15_0_fu_376 <= weight_buffer_15_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (icmp12_reg_3212 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_1_0_fu_320 <= weight_buffer_1_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_2_reg_3217 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_2_0_fu_324 <= weight_buffer_2_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (icmp13_reg_3222 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_3_0_fu_328 <= weight_buffer_3_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_4_reg_3227 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_4_0_fu_332 <= weight_buffer_4_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_5_reg_3232 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_5_0_fu_336 <= weight_buffer_5_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_6_reg_3237 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_6_0_fu_340 <= weight_buffer_6_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (icmp14_reg_3242 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_7_0_fu_344 <= weight_buffer_7_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_8_reg_3247 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_8_0_fu_348 <= weight_buffer_8_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_9_reg_3252 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_9_0_fu_352 <= weight_buffer_9_V_dout;
    end
end

always @ (*) begin
    if ((tmp_321_fu_2184_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_789_fu_2128_p1 == 1'd0) & (tmp_313_fu_1951_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_789_fu_2128_p1 == 1'd0) & (tmp_313_fu_1951_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_311_fu_1531_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_0_V_empty_n == 1'b1))) begin
        beta_buffer_0_V_read = 1'b1;
    end else begin
        beta_buffer_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_s_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_10_V_empty_n == 1'b1))) begin
        beta_buffer_10_V_read = 1'b1;
    end else begin
        beta_buffer_10_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_1_fu_1726_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_11_V_empty_n == 1'b1))) begin
        beta_buffer_11_V_read = 1'b1;
    end else begin
        beta_buffer_11_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_3_fu_1741_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_12_V_empty_n == 1'b1))) begin
        beta_buffer_12_V_read = 1'b1;
    end else begin
        beta_buffer_12_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_7_fu_1756_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_13_V_empty_n == 1'b1))) begin
        beta_buffer_13_V_read = 1'b1;
    end else begin
        beta_buffer_13_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_10_fu_1771_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_14_V_empty_n == 1'b1))) begin
        beta_buffer_14_V_read = 1'b1;
    end else begin
        beta_buffer_14_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (icmp11_fu_1796_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_15_V_empty_n == 1'b1))) begin
        beta_buffer_15_V_read = 1'b1;
    end else begin
        beta_buffer_15_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (icmp_fu_1556_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_1_V_empty_n == 1'b1))) begin
        beta_buffer_1_V_read = 1'b1;
    end else begin
        beta_buffer_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_2_fu_1571_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_2_V_empty_n == 1'b1))) begin
        beta_buffer_2_V_read = 1'b1;
    end else begin
        beta_buffer_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (icmp9_fu_1596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_3_V_empty_n == 1'b1))) begin
        beta_buffer_3_V_read = 1'b1;
    end else begin
        beta_buffer_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_4_fu_1611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_4_V_empty_n == 1'b1))) begin
        beta_buffer_4_V_read = 1'b1;
    end else begin
        beta_buffer_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_5_fu_1626_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_5_V_empty_n == 1'b1))) begin
        beta_buffer_5_V_read = 1'b1;
    end else begin
        beta_buffer_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_6_fu_1641_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_6_V_empty_n == 1'b1))) begin
        beta_buffer_6_V_read = 1'b1;
    end else begin
        beta_buffer_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (icmp10_fu_1666_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_7_V_empty_n == 1'b1))) begin
        beta_buffer_7_V_read = 1'b1;
    end else begin
        beta_buffer_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_8_fu_1681_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_8_V_empty_n == 1'b1))) begin
        beta_buffer_8_V_read = 1'b1;
    end else begin
        beta_buffer_8_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_310_fu_1526_p2 == 1'd1) & (tmp_854_9_fu_1696_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_9_V_empty_n == 1'b1))) begin
        beta_buffer_9_V_read = 1'b1;
    end else begin
        beta_buffer_9_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (data_buffer_V_empty_n == 1'b1))) begin
        data_buffer_V_read = 1'b1;
    end else begin
        data_buffer_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (data_c_V_empty_n == 1'b1))) begin
        data_c_V_read = 1'b1;
    end else begin
        data_c_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_303_nbwritereq_fu_516_p3 == 1'd1) & (tmp_nbreadreq_fu_508_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (data_m_V_empty_n == 1'b1))) begin
        data_m_V_read = 1'b1;
    end else begin
        data_m_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_303_nbwritereq_fu_516_p3 == 1'd1) & (tmp_nbreadreq_fu_508_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (data_n_V_empty_n == 1'b1))) begin
        data_n_V_read = 1'b1;
    end else begin
        data_n_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (data_r_V_empty_n == 1'b1))) begin
        data_r_V_read = 1'b1;
    end else begin
        data_r_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_321_fu_2184_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (input_buffer_V_empty_n == 1'b1))) begin
        input_buffer_V_read = 1'b1;
    end else begin
        input_buffer_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd1) & (tmp_312_reg_3207 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_0_V_full_n == 1'b1))) begin
        output_buffer_0_V_write = 1'b1;
    end else begin
        output_buffer_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd1) & (tmp_880_0_0_s_reg_3257 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_10_V_full_n == 1'b1))) begin
        output_buffer_10_V_write = 1'b1;
    end else begin
        output_buffer_10_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd1) & (tmp_880_0_0_1_reg_3262 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_11_V_full_n == 1'b1))) begin
        output_buffer_11_V_write = 1'b1;
    end else begin
        output_buffer_11_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd1) & (tmp_880_0_0_3_reg_3267 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_12_V_full_n == 1'b1))) begin
        output_buffer_12_V_write = 1'b1;
    end else begin
        output_buffer_12_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd1) & (tmp_880_0_0_7_reg_3272 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_13_V_full_n == 1'b1))) begin
        output_buffer_13_V_write = 1'b1;
    end else begin
        output_buffer_13_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd1) & (tmp_880_0_0_10_reg_3277 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_14_V_full_n == 1'b1))) begin
        output_buffer_14_V_write = 1'b1;
    end else begin
        output_buffer_14_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd1) & (icmp15_reg_3282 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_15_V_full_n == 1'b1))) begin
        output_buffer_15_V_write = 1'b1;
    end else begin
        output_buffer_15_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd1) & (icmp12_reg_3212 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_1_V_full_n == 1'b1))) begin
        output_buffer_1_V_write = 1'b1;
    end else begin
        output_buffer_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd1) & (tmp_880_0_0_2_reg_3217 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_2_V_full_n == 1'b1))) begin
        output_buffer_2_V_write = 1'b1;
    end else begin
        output_buffer_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd1) & (icmp13_reg_3222 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_3_V_full_n == 1'b1))) begin
        output_buffer_3_V_write = 1'b1;
    end else begin
        output_buffer_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd1) & (tmp_880_0_0_4_reg_3227 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_4_V_full_n == 1'b1))) begin
        output_buffer_4_V_write = 1'b1;
    end else begin
        output_buffer_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd1) & (tmp_880_0_0_5_reg_3232 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_5_V_full_n == 1'b1))) begin
        output_buffer_5_V_write = 1'b1;
    end else begin
        output_buffer_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd1) & (tmp_880_0_0_6_reg_3237 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_6_V_full_n == 1'b1))) begin
        output_buffer_6_V_write = 1'b1;
    end else begin
        output_buffer_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd1) & (icmp14_reg_3242 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_7_V_full_n == 1'b1))) begin
        output_buffer_7_V_write = 1'b1;
    end else begin
        output_buffer_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd1) & (tmp_880_0_0_8_reg_3247 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_8_V_full_n == 1'b1))) begin
        output_buffer_8_V_write = 1'b1;
    end else begin
        output_buffer_8_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd1) & (tmp_880_0_0_9_reg_3252 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_9_V_full_n == 1'b1))) begin
        output_buffer_9_V_write = 1'b1;
    end else begin
        output_buffer_9_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_0_ce0 = 1'b1;
    end else begin
        output_temp_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_0_ce1 = 1'b1;
    end else begin
        output_temp_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd0) & (tmp_312_reg_3207 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_0_we1 = 1'b1;
    end else begin
        output_temp_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_10_ce0 = 1'b1;
    end else begin
        output_temp_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_10_ce1 = 1'b1;
    end else begin
        output_temp_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd0) & (tmp_880_0_0_s_reg_3257 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_10_we1 = 1'b1;
    end else begin
        output_temp_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_11_ce0 = 1'b1;
    end else begin
        output_temp_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_11_ce1 = 1'b1;
    end else begin
        output_temp_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd0) & (tmp_880_0_0_1_reg_3262 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_11_we1 = 1'b1;
    end else begin
        output_temp_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_12_ce0 = 1'b1;
    end else begin
        output_temp_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_12_ce1 = 1'b1;
    end else begin
        output_temp_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd0) & (tmp_880_0_0_3_reg_3267 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_12_we1 = 1'b1;
    end else begin
        output_temp_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_13_ce0 = 1'b1;
    end else begin
        output_temp_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_13_ce1 = 1'b1;
    end else begin
        output_temp_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd0) & (tmp_880_0_0_7_reg_3272 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_13_we1 = 1'b1;
    end else begin
        output_temp_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_14_ce0 = 1'b1;
    end else begin
        output_temp_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_14_ce1 = 1'b1;
    end else begin
        output_temp_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd0) & (tmp_880_0_0_10_reg_3277 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_14_we1 = 1'b1;
    end else begin
        output_temp_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_15_ce0 = 1'b1;
    end else begin
        output_temp_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_15_ce1 = 1'b1;
    end else begin
        output_temp_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd0) & (icmp15_reg_3282 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_15_we1 = 1'b1;
    end else begin
        output_temp_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_1_ce0 = 1'b1;
    end else begin
        output_temp_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_1_ce1 = 1'b1;
    end else begin
        output_temp_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd0) & (icmp12_reg_3212 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_1_we1 = 1'b1;
    end else begin
        output_temp_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_2_ce0 = 1'b1;
    end else begin
        output_temp_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_2_ce1 = 1'b1;
    end else begin
        output_temp_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd0) & (tmp_880_0_0_2_reg_3217 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_2_we1 = 1'b1;
    end else begin
        output_temp_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_3_ce0 = 1'b1;
    end else begin
        output_temp_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_3_ce1 = 1'b1;
    end else begin
        output_temp_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd0) & (icmp13_reg_3222 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_3_we1 = 1'b1;
    end else begin
        output_temp_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_4_ce0 = 1'b1;
    end else begin
        output_temp_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_4_ce1 = 1'b1;
    end else begin
        output_temp_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd0) & (tmp_880_0_0_4_reg_3227 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_4_we1 = 1'b1;
    end else begin
        output_temp_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_5_ce0 = 1'b1;
    end else begin
        output_temp_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_5_ce1 = 1'b1;
    end else begin
        output_temp_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd0) & (tmp_880_0_0_5_reg_3232 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_5_we1 = 1'b1;
    end else begin
        output_temp_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_6_ce0 = 1'b1;
    end else begin
        output_temp_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_6_ce1 = 1'b1;
    end else begin
        output_temp_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd0) & (tmp_880_0_0_6_reg_3237 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_6_we1 = 1'b1;
    end else begin
        output_temp_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_7_ce0 = 1'b1;
    end else begin
        output_temp_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_7_ce1 = 1'b1;
    end else begin
        output_temp_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd0) & (icmp14_reg_3242 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_7_we1 = 1'b1;
    end else begin
        output_temp_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_8_ce0 = 1'b1;
    end else begin
        output_temp_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_8_ce1 = 1'b1;
    end else begin
        output_temp_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd0) & (tmp_880_0_0_8_reg_3247 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_8_we1 = 1'b1;
    end else begin
        output_temp_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_9_ce0 = 1'b1;
    end else begin
        output_temp_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_9_ce1 = 1'b1;
    end else begin
        output_temp_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_318_reg_3315 == 1'd0) & (tmp_880_0_0_9_reg_3252 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_9_we1 = 1'b1;
    end else begin
        output_temp_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd0) & (icmp16_fu_2147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (result_buffer_V_full_n == 1'b1))) begin
        result_buffer_V_write = 1'b1;
    end else begin
        result_buffer_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd0) & (icmp16_fu_2147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (result_c_V_full_n == 1'b1))) begin
        result_c_V_write = 1'b1;
    end else begin
        result_c_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd0) & (icmp16_fu_2147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (result_m_V_full_n == 1'b1))) begin
        result_m_V_write = 1'b1;
    end else begin
        result_m_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd0) & (icmp16_fu_2147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (result_n_V_full_n == 1'b1))) begin
        result_n_V_write = 1'b1;
    end else begin
        result_n_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd0) & (icmp16_fu_2147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (result_r_V_full_n == 1'b1))) begin
        result_r_V_write = 1'b1;
    end else begin
        result_r_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_312_reg_3207 == 1'd1) & (weight_buffer_0_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_0_V_read = 1'b1;
    end else begin
        weight_buffer_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_s_reg_3257 == 1'd1) & (weight_buffer_10_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_10_V_read = 1'b1;
    end else begin
        weight_buffer_10_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_1_reg_3262 == 1'd1) & (weight_buffer_11_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_11_V_read = 1'b1;
    end else begin
        weight_buffer_11_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_3_reg_3267 == 1'd1) & (weight_buffer_12_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_12_V_read = 1'b1;
    end else begin
        weight_buffer_12_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_7_reg_3272 == 1'd1) & (weight_buffer_13_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_13_V_read = 1'b1;
    end else begin
        weight_buffer_13_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_10_reg_3277 == 1'd1) & (weight_buffer_14_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_14_V_read = 1'b1;
    end else begin
        weight_buffer_14_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (icmp15_reg_3282 == 1'd1) & (weight_buffer_15_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_15_V_read = 1'b1;
    end else begin
        weight_buffer_15_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (icmp12_reg_3212 == 1'd1) & (weight_buffer_1_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_1_V_read = 1'b1;
    end else begin
        weight_buffer_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_2_reg_3217 == 1'd1) & (weight_buffer_2_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_2_V_read = 1'b1;
    end else begin
        weight_buffer_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (icmp13_reg_3222 == 1'd1) & (weight_buffer_3_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_3_V_read = 1'b1;
    end else begin
        weight_buffer_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_4_reg_3227 == 1'd1) & (weight_buffer_4_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_4_V_read = 1'b1;
    end else begin
        weight_buffer_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_5_reg_3232 == 1'd1) & (weight_buffer_5_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_5_V_read = 1'b1;
    end else begin
        weight_buffer_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_6_reg_3237 == 1'd1) & (weight_buffer_6_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_6_V_read = 1'b1;
    end else begin
        weight_buffer_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (icmp14_reg_3242 == 1'd1) & (weight_buffer_7_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_7_V_read = 1'b1;
    end else begin
        weight_buffer_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_8_reg_3247 == 1'd1) & (weight_buffer_8_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_8_V_read = 1'b1;
    end else begin
        weight_buffer_8_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_313_fu_1951_p2 == 1'd1) & (tmp_880_0_0_9_reg_3252 == 1'd1) & (weight_buffer_9_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_9_V_read = 1'b1;
    end else begin
        weight_buffer_9_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((tmp_303_nbwritereq_fu_516_p3 == 1'd0) | (tmp_nbreadreq_fu_508_p3 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((tmp_789_fu_2128_p1 == 1'd0) & (tmp_313_fu_1951_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((tmp_313_fu_1951_p2 == 1'd0) & (tmp_789_fu_2128_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((tmp_319_fu_2157_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_321_fu_2184_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_321_fu_2184_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign cLoops_fu_1458_p3 = ((tmp_757_fu_1444_p3[0:0] === 1'b1) ? 32'd16 : tmp_304_fu_1452_p2);

assign grp_mac_1_1_s_fu_1188_weight_regs_read = ((tmp_312_reg_3207[0:0] === 1'b1) ? weight_temp_0_0_fu_316 : weight_temp_0_0_s_fu_384);

assign grp_mac_1_1_s_fu_1194_weight_regs_read = ((icmp12_reg_3212[0:0] === 1'b1) ? weight_temp_1_0_fu_320 : weight_temp_1_0_s_fu_388);

assign grp_mac_1_1_s_fu_1200_weight_regs_read = ((tmp_880_0_0_2_reg_3217[0:0] === 1'b1) ? weight_temp_2_0_fu_324 : weight_temp_2_0_s_fu_392);

assign grp_mac_1_1_s_fu_1206_weight_regs_read = ((icmp13_reg_3222[0:0] === 1'b1) ? weight_temp_3_0_fu_328 : weight_temp_3_0_s_fu_396);

assign grp_mac_1_1_s_fu_1212_weight_regs_read = ((tmp_880_0_0_4_reg_3227[0:0] === 1'b1) ? weight_temp_4_0_fu_332 : weight_temp_4_0_s_fu_400);

assign grp_mac_1_1_s_fu_1218_weight_regs_read = ((tmp_880_0_0_5_reg_3232[0:0] === 1'b1) ? weight_temp_5_0_fu_336 : weight_temp_5_0_s_fu_404);

assign grp_mac_1_1_s_fu_1224_weight_regs_read = ((tmp_880_0_0_6_reg_3237[0:0] === 1'b1) ? weight_temp_6_0_fu_340 : weight_temp_6_0_s_fu_408);

assign grp_mac_1_1_s_fu_1230_weight_regs_read = ((icmp14_reg_3242[0:0] === 1'b1) ? weight_temp_7_0_fu_344 : weight_temp_7_0_s_fu_412);

assign grp_mac_1_1_s_fu_1236_weight_regs_read = ((tmp_880_0_0_8_reg_3247[0:0] === 1'b1) ? weight_temp_8_0_fu_348 : weight_temp_8_0_s_fu_416);

assign grp_mac_1_1_s_fu_1242_weight_regs_read = ((tmp_880_0_0_9_reg_3252[0:0] === 1'b1) ? weight_temp_9_0_fu_352 : weight_temp_9_0_s_fu_420);

assign grp_mac_1_1_s_fu_1248_weight_regs_read = ((tmp_880_0_0_s_reg_3257[0:0] === 1'b1) ? weight_temp_10_0_fu_356 : weight_temp_10_0_s_fu_424);

assign grp_mac_1_1_s_fu_1254_weight_regs_read = ((tmp_880_0_0_1_reg_3262[0:0] === 1'b1) ? weight_temp_11_0_fu_360 : weight_temp_11_0_s_fu_428);

assign grp_mac_1_1_s_fu_1260_weight_regs_read = ((tmp_880_0_0_3_reg_3267[0:0] === 1'b1) ? weight_temp_12_0_fu_364 : weight_temp_12_0_s_fu_432);

assign grp_mac_1_1_s_fu_1266_weight_regs_read = ((tmp_880_0_0_7_reg_3272[0:0] === 1'b1) ? weight_temp_13_0_fu_368 : weight_temp_13_0_s_fu_436);

assign grp_mac_1_1_s_fu_1272_weight_regs_read = ((tmp_880_0_0_10_reg_3277[0:0] === 1'b1) ? weight_temp_14_0_fu_372 : weight_temp_14_0_s_fu_440);

assign grp_mac_1_1_s_fu_1278_weight_regs_read = ((icmp15_reg_3282[0:0] === 1'b1) ? weight_temp_15_0_fu_376 : weight_temp_15_0_s_fu_380);

assign icmp10_fu_1666_p2 = (($signed(tmp_768_fu_1656_p4) > $signed(29'd0)) ? 1'b1 : 1'b0);

assign icmp11_fu_1796_p2 = (($signed(tmp_777_fu_1786_p4) > $signed(28'd0)) ? 1'b1 : 1'b0);

assign icmp12_fu_1827_p2 = (($signed(tmp_779_fu_1817_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp13_fu_1849_p2 = (($signed(tmp_780_fu_1839_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp14_fu_1883_p2 = (($signed(tmp_781_fu_1873_p4) > $signed(29'd0)) ? 1'b1 : 1'b0);

assign icmp15_fu_1941_p2 = (($signed(tmp_782_fu_1931_p4) > $signed(28'd0)) ? 1'b1 : 1'b0);

assign icmp16_fu_2147_p2 = (($signed(tmp_783_fu_2137_p4) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign icmp9_fu_1596_p2 = (($signed(tmp_763_fu_1586_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp_fu_1556_p2 = (($signed(tmp_760_fu_1546_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign mLoops_fu_1499_p3 = ((tmp_307_fu_1493_p2[0:0] === 1'b1) ? 32'd16 : tmp_306_fu_1488_p2);

assign nLoops_fu_1518_p3 = ((tmp_309_fu_1512_p2[0:0] === 1'b1) ? 32'd2 : tmp_308_fu_1507_p2);

assign or_cond_fu_2112_p2 = (tmp_316_fu_2106_p2 & tmp_310_reg_3154);

assign output_buffer_0_V_din = ((grp_fu_1348_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_reg_3709_pp0_iter11_reg);

assign output_buffer_10_V_din = ((grp_fu_1398_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_10_reg_3779_pp0_iter11_reg);

assign output_buffer_11_V_din = ((grp_fu_1403_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_11_reg_3786_pp0_iter11_reg);

assign output_buffer_12_V_din = ((grp_fu_1408_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_12_reg_3793_pp0_iter11_reg);

assign output_buffer_13_V_din = ((grp_fu_1413_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_13_reg_3800_pp0_iter11_reg);

assign output_buffer_14_V_din = ((grp_fu_1418_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_14_reg_3807_pp0_iter11_reg);

assign output_buffer_15_V_din = ((grp_fu_1423_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_s_reg_3814_pp0_iter11_reg);

assign output_buffer_1_V_din = ((grp_fu_1353_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_1_reg_3716_pp0_iter11_reg);

assign output_buffer_2_V_din = ((grp_fu_1358_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_2_reg_3723_pp0_iter11_reg);

assign output_buffer_3_V_din = ((grp_fu_1363_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_3_reg_3730_pp0_iter11_reg);

assign output_buffer_4_V_din = ((grp_fu_1368_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_4_reg_3737_pp0_iter11_reg);

assign output_buffer_5_V_din = ((grp_fu_1373_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_5_reg_3744_pp0_iter11_reg);

assign output_buffer_6_V_din = ((grp_fu_1378_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_6_reg_3751_pp0_iter11_reg);

assign output_buffer_7_V_din = ((grp_fu_1383_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_7_reg_3758_pp0_iter11_reg);

assign output_buffer_8_V_din = ((grp_fu_1388_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_8_reg_3765_pp0_iter11_reg);

assign output_buffer_9_V_din = ((grp_fu_1393_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_9_reg_3772_pp0_iter11_reg);

assign output_temp_0_address0 = tmp_556_cast_fu_2512_p1;

assign output_temp_10_address0 = tmp_556_cast_fu_2512_p1;

assign output_temp_11_address0 = tmp_556_cast_fu_2512_p1;

assign output_temp_12_address0 = tmp_556_cast_fu_2512_p1;

assign output_temp_13_address0 = tmp_556_cast_fu_2512_p1;

assign output_temp_14_address0 = tmp_556_cast_fu_2512_p1;

assign output_temp_15_address0 = tmp_556_cast_fu_2512_p1;

assign output_temp_1_address0 = tmp_556_cast_fu_2512_p1;

assign output_temp_2_address0 = tmp_556_cast_fu_2512_p1;

assign output_temp_3_address0 = tmp_556_cast_fu_2512_p1;

assign output_temp_4_address0 = tmp_556_cast_fu_2512_p1;

assign output_temp_5_address0 = tmp_556_cast_fu_2512_p1;

assign output_temp_6_address0 = tmp_556_cast_fu_2512_p1;

assign output_temp_7_address0 = tmp_556_cast_fu_2512_p1;

assign output_temp_8_address0 = tmp_556_cast_fu_2512_p1;

assign output_temp_9_address0 = tmp_556_cast_fu_2512_p1;

assign p_pn_10_fu_2634_p3 = ((or_cond_reg_3295[0:0] === 1'b1) ? tmp_751_fu_292 : output_temp_10_q0);

assign p_pn_11_fu_2644_p3 = ((or_cond_reg_3295[0:0] === 1'b1) ? tmp_752_fu_296 : output_temp_11_q0);

assign p_pn_12_fu_2654_p3 = ((or_cond_reg_3295[0:0] === 1'b1) ? tmp_753_fu_300 : output_temp_12_q0);

assign p_pn_13_fu_2664_p3 = ((or_cond_reg_3295[0:0] === 1'b1) ? tmp_754_fu_304 : output_temp_13_q0);

assign p_pn_14_fu_2674_p3 = ((or_cond_reg_3295[0:0] === 1'b1) ? tmp_755_fu_308 : output_temp_14_q0);

assign p_pn_1_fu_2544_p3 = ((or_cond_reg_3295[0:0] === 1'b1) ? tmp_742_fu_256 : output_temp_1_q0);

assign p_pn_2_fu_2554_p3 = ((or_cond_reg_3295[0:0] === 1'b1) ? tmp_743_fu_260 : output_temp_2_q0);

assign p_pn_3_fu_2564_p3 = ((or_cond_reg_3295[0:0] === 1'b1) ? tmp_744_fu_264 : output_temp_3_q0);

assign p_pn_4_fu_2574_p3 = ((or_cond_reg_3295[0:0] === 1'b1) ? tmp_745_fu_268 : output_temp_4_q0);

assign p_pn_5_fu_2584_p3 = ((or_cond_reg_3295[0:0] === 1'b1) ? tmp_746_fu_272 : output_temp_5_q0);

assign p_pn_6_fu_2594_p3 = ((or_cond_reg_3295[0:0] === 1'b1) ? tmp_747_fu_276 : output_temp_6_q0);

assign p_pn_7_fu_2604_p3 = ((or_cond_reg_3295[0:0] === 1'b1) ? tmp_748_fu_280 : output_temp_7_q0);

assign p_pn_8_fu_2614_p3 = ((or_cond_reg_3295[0:0] === 1'b1) ? tmp_749_fu_284 : output_temp_8_q0);

assign p_pn_9_fu_2624_p3 = ((or_cond_reg_3295[0:0] === 1'b1) ? tmp_750_fu_288 : output_temp_9_q0);

assign p_pn_fu_2534_p3 = ((or_cond_reg_3295[0:0] === 1'b1) ? tmp_741_fu_252 : output_temp_0_q0);

assign p_pn_s_fu_2684_p3 = ((or_cond_reg_3295[0:0] === 1'b1) ? tmp_756_fu_312 : output_temp_15_q0);

assign rLoops_fu_1480_p3 = ((tmp_758_fu_1466_p3[0:0] === 1'b1) ? 32'd16 : tmp_305_fu_1474_p2);

assign result_buffer_V_din = data_buffer_V_dout;

assign result_c_V_din = tmp_785_reg_3128;

assign result_m_V_din = tmp_787_reg_3113;

assign result_n_V_din = tmp_788_reg_3119;

assign result_r_V_din = tmp_786_reg_3133;

assign tc_3_fu_2189_p2 = (tc_reg_1177 + 31'd1);

assign tc_cast_fu_2180_p1 = tc_reg_1177;

assign tmp_303_nbwritereq_fu_516_p3 = result_buffer_V_full_n;

assign tmp_304_fu_1452_p2 = (32'd16 - data_c_V_dout);

assign tmp_305_fu_1474_p2 = (32'd16 - data_r_V_dout);

assign tmp_306_fu_1488_p2 = (32'd512 - tmp_787_reg_3113);

assign tmp_307_fu_1493_p2 = (($signed(tmp_306_fu_1488_p2) > $signed(32'd16)) ? 1'b1 : 1'b0);

assign tmp_308_fu_1507_p2 = (32'd256 - tmp_788_reg_3119);

assign tmp_309_fu_1512_p2 = (($signed(tmp_308_fu_1507_p2) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign tmp_310_fu_1526_p2 = (($signed(tmp_788_reg_3119) < $signed(32'd1)) ? 1'b1 : 1'b0);

assign tmp_311_fu_1531_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_312_fu_1811_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_313_fu_1951_p2 = (($signed(tn_cast_fu_1947_p1) < $signed(nLoops_reg_3148)) ? 1'b1 : 1'b0);

assign tmp_315_fu_2133_p2 = (tmp_788_reg_3119 + nLoops_reg_3148);

assign tmp_316_fu_2106_p2 = ((tn_reg_1155 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_317_fu_2117_p2 = (tmp_788_reg_3119 + tn_cast_fu_1947_p1);

assign tmp_318_fu_2122_p2 = (($signed(tmp_317_fu_2117_p2) > $signed(32'd254)) ? 1'b1 : 1'b0);

assign tmp_319_fu_2157_p2 = (($signed(tr_cast_fu_2153_p1) < $signed(rLoops_reg_3143)) ? 1'b1 : 1'b0);

assign tmp_321_fu_2184_p2 = (($signed(tc_cast_fu_2180_p1) < $signed(cLoops_reg_3138)) ? 1'b1 : 1'b0);

assign tmp_323_fu_2203_p2 = (tmp_554_cast_reg_3334 + tmp_806_fu_2199_p1);

assign tmp_554_cast_fu_2172_p3 = {{tmp_805_fu_2168_p1}, {4'd0}};

assign tmp_556_cast_fu_2512_p1 = tmp_323_reg_3368_pp0_iter3_reg;

assign tmp_757_fu_1444_p3 = data_c_V_dout[32'd31];

assign tmp_758_fu_1466_p3 = data_r_V_dout[32'd31];

assign tmp_760_fu_1546_p4 = {{mLoops_fu_1499_p3[31:1]}};

assign tmp_763_fu_1586_p4 = {{mLoops_fu_1499_p3[31:2]}};

assign tmp_768_fu_1656_p4 = {{mLoops_fu_1499_p3[31:3]}};

assign tmp_777_fu_1786_p4 = {{mLoops_fu_1499_p3[31:4]}};

assign tmp_779_fu_1817_p4 = {{mLoops_fu_1499_p3[31:1]}};

assign tmp_780_fu_1839_p4 = {{mLoops_fu_1499_p3[31:2]}};

assign tmp_781_fu_1873_p4 = {{mLoops_fu_1499_p3[31:3]}};

assign tmp_782_fu_1931_p4 = {{mLoops_fu_1499_p3[31:4]}};

assign tmp_783_fu_2137_p4 = {{tmp_315_fu_2133_p2[31:8]}};

assign tmp_789_fu_2128_p1 = data_buffer_V_dout;

assign tmp_805_fu_2168_p1 = tr_reg_1166[5:0];

assign tmp_806_fu_2199_p1 = tc_reg_1177[9:0];

assign tmp_854_10_fu_1771_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd14)) ? 1'b1 : 1'b0);

assign tmp_854_1_fu_1726_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd11)) ? 1'b1 : 1'b0);

assign tmp_854_2_fu_1571_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign tmp_854_3_fu_1741_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd12)) ? 1'b1 : 1'b0);

assign tmp_854_4_fu_1611_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd4)) ? 1'b1 : 1'b0);

assign tmp_854_5_fu_1626_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd5)) ? 1'b1 : 1'b0);

assign tmp_854_6_fu_1641_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd6)) ? 1'b1 : 1'b0);

assign tmp_854_7_fu_1756_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd13)) ? 1'b1 : 1'b0);

assign tmp_854_8_fu_1681_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd8)) ? 1'b1 : 1'b0);

assign tmp_854_9_fu_1696_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd9)) ? 1'b1 : 1'b0);

assign tmp_854_s_fu_1711_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd10)) ? 1'b1 : 1'b0);

assign tmp_880_0_0_10_fu_1925_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd14)) ? 1'b1 : 1'b0);

assign tmp_880_0_0_1_fu_1907_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd11)) ? 1'b1 : 1'b0);

assign tmp_880_0_0_2_fu_1833_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign tmp_880_0_0_3_fu_1913_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd12)) ? 1'b1 : 1'b0);

assign tmp_880_0_0_4_fu_1855_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd4)) ? 1'b1 : 1'b0);

assign tmp_880_0_0_5_fu_1861_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd5)) ? 1'b1 : 1'b0);

assign tmp_880_0_0_6_fu_1867_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd6)) ? 1'b1 : 1'b0);

assign tmp_880_0_0_7_fu_1919_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd13)) ? 1'b1 : 1'b0);

assign tmp_880_0_0_8_fu_1889_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd8)) ? 1'b1 : 1'b0);

assign tmp_880_0_0_9_fu_1895_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd9)) ? 1'b1 : 1'b0);

assign tmp_880_0_0_s_fu_1901_p2 = (($signed(mLoops_fu_1499_p3) > $signed(32'd10)) ? 1'b1 : 1'b0);

assign tmp_nbreadreq_fu_508_p3 = data_buffer_V_empty_n;

assign tn_19_fu_1956_p2 = (tn_reg_1155 + 2'd1);

assign tn_cast_fu_1947_p1 = tn_reg_1155;

assign tr_10_fu_2162_p2 = (tr_reg_1166 + 31'd1);

assign tr_cast_fu_2153_p1 = tr_reg_1166;

assign weight_regs_0_0_2_we_fu_2304_p3 = ((tmp_312_reg_3207[0:0] === 1'b1) ? weight_temp_0_0_fu_316 : weight_temp_0_0_s_fu_384);

assign weight_regs_10_0_2_w_fu_2384_p3 = ((tmp_880_0_0_s_reg_3257[0:0] === 1'b1) ? weight_temp_10_0_fu_356 : weight_temp_10_0_s_fu_424);

assign weight_regs_11_0_2_w_fu_2392_p3 = ((tmp_880_0_0_1_reg_3262[0:0] === 1'b1) ? weight_temp_11_0_fu_360 : weight_temp_11_0_s_fu_428);

assign weight_regs_12_0_2_w_fu_2400_p3 = ((tmp_880_0_0_3_reg_3267[0:0] === 1'b1) ? weight_temp_12_0_fu_364 : weight_temp_12_0_s_fu_432);

assign weight_regs_13_0_2_w_fu_2408_p3 = ((tmp_880_0_0_7_reg_3272[0:0] === 1'b1) ? weight_temp_13_0_fu_368 : weight_temp_13_0_s_fu_436);

assign weight_regs_14_0_2_w_fu_2416_p3 = ((tmp_880_0_0_10_reg_3277[0:0] === 1'b1) ? weight_temp_14_0_fu_372 : weight_temp_14_0_s_fu_440);

assign weight_regs_15_0_2_w_fu_2424_p3 = ((icmp15_reg_3282[0:0] === 1'b1) ? weight_temp_15_0_fu_376 : weight_temp_15_0_s_fu_380);

assign weight_regs_1_0_2_we_fu_2312_p3 = ((icmp12_reg_3212[0:0] === 1'b1) ? weight_temp_1_0_fu_320 : weight_temp_1_0_s_fu_388);

assign weight_regs_2_0_2_we_fu_2320_p3 = ((tmp_880_0_0_2_reg_3217[0:0] === 1'b1) ? weight_temp_2_0_fu_324 : weight_temp_2_0_s_fu_392);

assign weight_regs_3_0_2_we_fu_2328_p3 = ((icmp13_reg_3222[0:0] === 1'b1) ? weight_temp_3_0_fu_328 : weight_temp_3_0_s_fu_396);

assign weight_regs_4_0_2_we_fu_2336_p3 = ((tmp_880_0_0_4_reg_3227[0:0] === 1'b1) ? weight_temp_4_0_fu_332 : weight_temp_4_0_s_fu_400);

assign weight_regs_5_0_2_we_fu_2344_p3 = ((tmp_880_0_0_5_reg_3232[0:0] === 1'b1) ? weight_temp_5_0_fu_336 : weight_temp_5_0_s_fu_404);

assign weight_regs_6_0_2_we_fu_2352_p3 = ((tmp_880_0_0_6_reg_3237[0:0] === 1'b1) ? weight_temp_6_0_fu_340 : weight_temp_6_0_s_fu_408);

assign weight_regs_7_0_2_we_fu_2360_p3 = ((icmp14_reg_3242[0:0] === 1'b1) ? weight_temp_7_0_fu_344 : weight_temp_7_0_s_fu_412);

assign weight_regs_8_0_2_we_fu_2368_p3 = ((tmp_880_0_0_8_reg_3247[0:0] === 1'b1) ? weight_temp_8_0_fu_348 : weight_temp_8_0_s_fu_416);

assign weight_regs_9_0_2_we_fu_2376_p3 = ((tmp_880_0_0_9_reg_3252[0:0] === 1'b1) ? weight_temp_9_0_fu_352 : weight_temp_9_0_s_fu_420);

always @ (posedge ap_clk) begin
    tmp_554_cast_reg_3334[3:0] <= 4'b0000;
end

endmodule //compute_pro_6
