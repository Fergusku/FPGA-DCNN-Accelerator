// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mac_3_9_s (
        ap_clk,
        ap_rst,
        input_regs_0_read,
        input_regs_1_read,
        input_regs_2_read,
        input_regs_3_read,
        input_regs_4_read,
        input_regs_5_read,
        input_regs_6_read,
        input_regs_7_read,
        input_regs_8_read,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        ap_return
);


input   ap_clk;
input   ap_rst;
input  [15:0] input_regs_0_read;
input  [15:0] input_regs_1_read;
input  [15:0] input_regs_2_read;
input  [15:0] input_regs_3_read;
input  [15:0] input_regs_4_read;
input  [15:0] input_regs_5_read;
input  [15:0] input_regs_6_read;
input  [15:0] input_regs_7_read;
input  [15:0] input_regs_8_read;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
input  [15:0] p_read5;
input  [15:0] p_read6;
input  [15:0] p_read7;
input  [15:0] p_read8;
output  [15:0] ap_return;

wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_pp0_stage0_11001;
wire   [15:0] grp_fu_178_p2;
reg   [15:0] tmp_5_reg_322;
wire   [15:0] grp_fu_184_p2;
reg   [15:0] tmp_5_0_1_reg_327;
wire   [15:0] grp_fu_190_p2;
reg   [15:0] tmp_5_0_2_reg_332;
wire   [15:0] grp_fu_196_p2;
reg   [15:0] tmp_5_1_reg_337;
wire   [15:0] grp_fu_202_p2;
reg   [15:0] tmp_5_1_1_reg_342;
wire   [15:0] grp_fu_208_p2;
reg   [15:0] tmp_5_1_2_reg_347;
wire   [15:0] grp_fu_214_p2;
reg   [15:0] tmp_5_2_reg_352;
wire   [15:0] grp_fu_220_p2;
reg   [15:0] tmp_5_2_1_reg_357;
wire   [15:0] grp_fu_226_p2;
reg   [15:0] tmp_5_2_2_reg_362;
reg   [15:0] tmp_5_2_2_reg_362_pp0_iter4_reg;
reg   [15:0] tmp_5_2_2_reg_362_pp0_iter5_reg;
reg   [15:0] tmp_5_2_2_reg_362_pp0_iter6_reg;
reg   [15:0] tmp_5_2_2_reg_362_pp0_iter7_reg;
wire   [15:0] grp_fu_146_p2;
reg   [15:0] tmp9_reg_367;
wire   [15:0] grp_fu_150_p2;
reg   [15:0] tmp10_reg_372;
wire   [15:0] grp_fu_154_p2;
reg   [15:0] tmp12_reg_377;
reg   [15:0] tmp12_reg_377_pp0_iter8_reg;
reg   [15:0] tmp12_reg_377_pp0_iter9_reg;
reg   [15:0] tmp12_reg_377_pp0_iter10_reg;
reg   [15:0] tmp12_reg_377_pp0_iter11_reg;
wire   [15:0] grp_fu_158_p2;
reg   [15:0] tmp14_reg_382;
wire   [15:0] grp_fu_162_p2;
reg   [15:0] tmp_reg_387;
reg   [15:0] tmp_reg_387_pp0_iter12_reg;
reg   [15:0] tmp_reg_387_pp0_iter13_reg;
reg   [15:0] tmp_reg_387_pp0_iter14_reg;
reg   [15:0] tmp_reg_387_pp0_iter15_reg;
wire   [15:0] grp_fu_166_p2;
reg   [15:0] tmp13_reg_392;
wire   [15:0] grp_fu_170_p2;
reg   [15:0] tmp11_reg_397;
wire    ap_block_pp0_stage0;
wire   [15:0] grp_fu_174_p2;
reg   [15:0] input_regs_0_read_int_reg;
reg   [15:0] input_regs_1_read_int_reg;
reg   [15:0] input_regs_2_read_int_reg;
reg   [15:0] input_regs_3_read_int_reg;
reg   [15:0] input_regs_4_read_int_reg;
reg   [15:0] input_regs_5_read_int_reg;
reg   [15:0] input_regs_6_read_int_reg;
reg   [15:0] input_regs_7_read_int_reg;
reg   [15:0] input_regs_8_read_int_reg;
reg   [15:0] p_read_int_reg;
reg   [15:0] p_read1_int_reg;
reg   [15:0] p_read2_int_reg;
reg   [15:0] p_read3_int_reg;
reg   [15:0] p_read4_int_reg;
reg   [15:0] p_read5_int_reg;
reg   [15:0] p_read6_int_reg;
reg   [15:0] p_read7_int_reg;
reg   [15:0] p_read8_int_reg;

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U105(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_5_reg_322),
    .din1(tmp_5_0_1_reg_327),
    .ce(1'b1),
    .dout(grp_fu_146_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U106(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_5_0_2_reg_332),
    .din1(tmp_5_1_2_reg_347),
    .ce(1'b1),
    .dout(grp_fu_150_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U107(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_5_1_1_reg_342),
    .din1(tmp_5_1_reg_337),
    .ce(1'b1),
    .dout(grp_fu_154_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U108(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_5_2_1_reg_357),
    .din1(tmp_5_2_reg_352),
    .ce(1'b1),
    .dout(grp_fu_158_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U109(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp10_reg_372),
    .din1(tmp9_reg_367),
    .ce(1'b1),
    .dout(grp_fu_162_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U110(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp14_reg_382),
    .din1(tmp_5_2_2_reg_362_pp0_iter7_reg),
    .ce(1'b1),
    .dout(grp_fu_166_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U111(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp13_reg_392),
    .din1(tmp12_reg_377_pp0_iter11_reg),
    .ce(1'b1),
    .dout(grp_fu_170_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U112(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp11_reg_397),
    .din1(tmp_reg_387_pp0_iter15_reg),
    .ce(1'b1),
    .dout(grp_fu_174_p2)
);

moblie_net_hmul_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hmul_1cud_U113(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read_int_reg),
    .din1(input_regs_0_read_int_reg),
    .ce(1'b1),
    .dout(grp_fu_178_p2)
);

moblie_net_hmul_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hmul_1cud_U114(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read1_int_reg),
    .din1(input_regs_1_read_int_reg),
    .ce(1'b1),
    .dout(grp_fu_184_p2)
);

moblie_net_hmul_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hmul_1cud_U115(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read2_int_reg),
    .din1(input_regs_2_read_int_reg),
    .ce(1'b1),
    .dout(grp_fu_190_p2)
);

moblie_net_hmul_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hmul_1cud_U116(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read3_int_reg),
    .din1(input_regs_3_read_int_reg),
    .ce(1'b1),
    .dout(grp_fu_196_p2)
);

moblie_net_hmul_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hmul_1cud_U117(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read4_int_reg),
    .din1(input_regs_4_read_int_reg),
    .ce(1'b1),
    .dout(grp_fu_202_p2)
);

moblie_net_hmul_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hmul_1cud_U118(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read5_int_reg),
    .din1(input_regs_5_read_int_reg),
    .ce(1'b1),
    .dout(grp_fu_208_p2)
);

moblie_net_hmul_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hmul_1cud_U119(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read6_int_reg),
    .din1(input_regs_6_read_int_reg),
    .ce(1'b1),
    .dout(grp_fu_214_p2)
);

moblie_net_hmul_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hmul_1cud_U120(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read7_int_reg),
    .din1(input_regs_7_read_int_reg),
    .ce(1'b1),
    .dout(grp_fu_220_p2)
);

moblie_net_hmul_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hmul_1cud_U121(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read8_int_reg),
    .din1(input_regs_8_read_int_reg),
    .ce(1'b1),
    .dout(grp_fu_226_p2)
);

always @ (posedge ap_clk) begin
    input_regs_0_read_int_reg <= input_regs_0_read;
end

always @ (posedge ap_clk) begin
    input_regs_1_read_int_reg <= input_regs_1_read;
end

always @ (posedge ap_clk) begin
    input_regs_2_read_int_reg <= input_regs_2_read;
end

always @ (posedge ap_clk) begin
    input_regs_3_read_int_reg <= input_regs_3_read;
end

always @ (posedge ap_clk) begin
    input_regs_4_read_int_reg <= input_regs_4_read;
end

always @ (posedge ap_clk) begin
    input_regs_5_read_int_reg <= input_regs_5_read;
end

always @ (posedge ap_clk) begin
    input_regs_6_read_int_reg <= input_regs_6_read;
end

always @ (posedge ap_clk) begin
    input_regs_7_read_int_reg <= input_regs_7_read;
end

always @ (posedge ap_clk) begin
    input_regs_8_read_int_reg <= input_regs_8_read;
end

always @ (posedge ap_clk) begin
    p_read1_int_reg <= p_read1;
end

always @ (posedge ap_clk) begin
    p_read2_int_reg <= p_read2;
end

always @ (posedge ap_clk) begin
    p_read3_int_reg <= p_read3;
end

always @ (posedge ap_clk) begin
    p_read4_int_reg <= p_read4;
end

always @ (posedge ap_clk) begin
    p_read5_int_reg <= p_read5;
end

always @ (posedge ap_clk) begin
    p_read6_int_reg <= p_read6;
end

always @ (posedge ap_clk) begin
    p_read7_int_reg <= p_read7;
end

always @ (posedge ap_clk) begin
    p_read8_int_reg <= p_read8;
end

always @ (posedge ap_clk) begin
    p_read_int_reg <= p_read;
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        tmp10_reg_372 <= grp_fu_150_p2;
        tmp11_reg_397 <= grp_fu_170_p2;
        tmp12_reg_377 <= grp_fu_154_p2;
        tmp12_reg_377_pp0_iter10_reg <= tmp12_reg_377_pp0_iter9_reg;
        tmp12_reg_377_pp0_iter11_reg <= tmp12_reg_377_pp0_iter10_reg;
        tmp12_reg_377_pp0_iter8_reg <= tmp12_reg_377;
        tmp12_reg_377_pp0_iter9_reg <= tmp12_reg_377_pp0_iter8_reg;
        tmp13_reg_392 <= grp_fu_166_p2;
        tmp14_reg_382 <= grp_fu_158_p2;
        tmp9_reg_367 <= grp_fu_146_p2;
        tmp_5_0_1_reg_327 <= grp_fu_184_p2;
        tmp_5_0_2_reg_332 <= grp_fu_190_p2;
        tmp_5_1_1_reg_342 <= grp_fu_202_p2;
        tmp_5_1_2_reg_347 <= grp_fu_208_p2;
        tmp_5_1_reg_337 <= grp_fu_196_p2;
        tmp_5_2_1_reg_357 <= grp_fu_220_p2;
        tmp_5_2_2_reg_362 <= grp_fu_226_p2;
        tmp_5_2_2_reg_362_pp0_iter4_reg <= tmp_5_2_2_reg_362;
        tmp_5_2_2_reg_362_pp0_iter5_reg <= tmp_5_2_2_reg_362_pp0_iter4_reg;
        tmp_5_2_2_reg_362_pp0_iter6_reg <= tmp_5_2_2_reg_362_pp0_iter5_reg;
        tmp_5_2_2_reg_362_pp0_iter7_reg <= tmp_5_2_2_reg_362_pp0_iter6_reg;
        tmp_5_2_reg_352 <= grp_fu_214_p2;
        tmp_5_reg_322 <= grp_fu_178_p2;
        tmp_reg_387 <= grp_fu_162_p2;
        tmp_reg_387_pp0_iter12_reg <= tmp_reg_387;
        tmp_reg_387_pp0_iter13_reg <= tmp_reg_387_pp0_iter12_reg;
        tmp_reg_387_pp0_iter14_reg <= tmp_reg_387_pp0_iter13_reg;
        tmp_reg_387_pp0_iter15_reg <= tmp_reg_387_pp0_iter14_reg;
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_return = grp_fu_174_p2;

endmodule //mac_3_9_s
