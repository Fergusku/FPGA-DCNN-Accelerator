-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity output_result is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_outputs_AWVALID : OUT STD_LOGIC;
    m_axi_outputs_AWREADY : IN STD_LOGIC;
    m_axi_outputs_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_outputs_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_outputs_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_outputs_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_outputs_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_outputs_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_outputs_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_outputs_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_outputs_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_outputs_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_outputs_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_outputs_WVALID : OUT STD_LOGIC;
    m_axi_outputs_WREADY : IN STD_LOGIC;
    m_axi_outputs_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    m_axi_outputs_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_outputs_WLAST : OUT STD_LOGIC;
    m_axi_outputs_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_outputs_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_outputs_ARVALID : OUT STD_LOGIC;
    m_axi_outputs_ARREADY : IN STD_LOGIC;
    m_axi_outputs_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_outputs_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_outputs_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_outputs_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_outputs_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_outputs_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_outputs_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_outputs_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_outputs_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_outputs_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_outputs_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_outputs_RVALID : IN STD_LOGIC;
    m_axi_outputs_RREADY : OUT STD_LOGIC;
    m_axi_outputs_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    m_axi_outputs_RLAST : IN STD_LOGIC;
    m_axi_outputs_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_outputs_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_outputs_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_outputs_BVALID : IN STD_LOGIC;
    m_axi_outputs_BREADY : OUT STD_LOGIC;
    m_axi_outputs_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_outputs_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_outputs_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    outputs_offset_dout : IN STD_LOGIC_VECTOR (30 downto 0);
    outputs_offset_empty_n : IN STD_LOGIC;
    outputs_offset_read : OUT STD_LOGIC;
    outputs_offset_c_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    outputs_offset_c_empty_n : IN STD_LOGIC;
    outputs_offset_c_read : OUT STD_LOGIC;
    output_buffer_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_V_empty_n : IN STD_LOGIC;
    output_buffer_V_read : OUT STD_LOGIC;
    result_buffer_V_dout : IN STD_LOGIC;
    result_buffer_V_empty_n : IN STD_LOGIC;
    result_buffer_V_read : OUT STD_LOGIC;
    result_n_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    result_n_V_empty_n : IN STD_LOGIC;
    result_n_V_read : OUT STD_LOGIC;
    result_r_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    result_r_V_empty_n : IN STD_LOGIC;
    result_r_V_read : OUT STD_LOGIC;
    result_c_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    result_c_V_empty_n : IN STD_LOGIC;
    result_c_V_read : OUT STD_LOGIC;
    cntl_V_din : OUT STD_LOGIC;
    cntl_V_full_n : IN STD_LOGIC;
    cntl_V_write : OUT STD_LOGIC );
end;


architecture behav of output_result is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal outputs_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal outputs_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_13_i_i_i_reg_408 : STD_LOGIC_VECTOR (0 downto 0);
    signal outputs_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_reg_394 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp7_reg_398 : STD_LOGIC_VECTOR (0 downto 0);
    signal outputs_offset_blk_n : STD_LOGIC;
    signal outputs_offset_c_blk_n : STD_LOGIC;
    signal cntl_V_blk_n : STD_LOGIC;
    signal tmp_288_fu_343_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i_i_i_reg_169 : STD_LOGIC_VECTOR (3 downto 0);
    signal outputs_offset_cast_s_fu_180_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal outputs_offset_cast_s_reg_347 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal sext_cast_i_i_fu_184_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_cast_i_i_reg_352 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_285_reg_360 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_nbreadreq_fu_108_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_286_reg_366 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_287_reg_371 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_i_i_i_fu_200_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_i_i_i_reg_376 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_i_i_i_fu_206_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_i_i_i_reg_382 : STD_LOGIC_VECTOR (31 downto 0);
    signal nLoops_fu_223_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal nLoops_reg_388 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp7_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal outputs_addr_reg_402 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_i_i_i_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_outputs_WREADY : STD_LOGIC;
    signal ap_block_state7_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_fu_333_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_283_reg_417 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_ioackin_m_axi_outputs_AWREADY : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state6 : STD_LOGIC;
    signal sum_cast_i_i_fu_314_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_m_axi_outputs_AWREADY : STD_LOGIC := '0';
    signal ap_predicate_op88_writeresp_state12 : BOOLEAN;
    signal ap_block_state12 : BOOLEAN;
    signal ap_reg_ioackin_m_axi_outputs_WREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_i_i_i_fu_212_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_i_i_i_fu_217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_i_i_i_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_i_i_i_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rLoops_fu_236_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_i_i_i_fu_255_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_281_fu_260_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal cLoops_fu_248_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_i_i_i_fu_276_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_282_fu_281_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_12_cast_i_i_i_fu_297_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_19_i_i_fu_300_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_20_cast_i_i_fu_305_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sum_i_i_fu_309_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal i_0_i_cast_i_i_i_fu_324_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_484 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not((((m_axi_outputs_BVALID = ap_const_logic_0) and (ap_predicate_op88_writeresp_state12 = ap_const_boolean_1)) or ((tmp_288_fu_343_p1 = ap_const_lv1_0) and (cntl_V_full_n = ap_const_logic_0)))) and (tmp_288_fu_343_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_sig_ioackin_m_axi_outputs_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state6))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state6);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_sig_ioackin_m_axi_outputs_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_outputs_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_outputs_AWREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                    if ((ap_sig_ioackin_m_axi_outputs_AWREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_m_axi_outputs_AWREADY <= ap_const_logic_0;
                    elsif ((m_axi_outputs_AWREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_m_axi_outputs_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_outputs_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_outputs_WREADY <= ap_const_logic_0;
            else
                if ((ap_const_boolean_1 = ap_condition_484)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_m_axi_outputs_WREADY <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (m_axi_outputs_WREADY = ap_const_logic_1))) then 
                        ap_reg_ioackin_m_axi_outputs_WREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    i_0_i_i_i_i_reg_169_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sig_ioackin_m_axi_outputs_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                i_0_i_i_i_i_reg_169 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_13_i_i_i_fu_328_p2 = ap_const_lv1_1))) then 
                i_0_i_i_i_i_reg_169 <= i_fu_333_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_fu_270_p2 = ap_const_lv1_1))) then
                icmp7_reg_398 <= icmp7_fu_291_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                icmp_reg_394 <= icmp_fu_270_p2;
                nLoops_reg_388 <= nLoops_fu_223_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp7_fu_291_p2 = ap_const_lv1_1) and (icmp_fu_270_p2 = ap_const_lv1_1))) then
                outputs_addr_reg_402 <= sum_cast_i_i_fu_314_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((outputs_offset_c_empty_n = ap_const_logic_0) or (outputs_offset_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    outputs_offset_cast_s_reg_347(9 downto 0) <= outputs_offset_cast_s_fu_180_p1(9 downto 0);
                    sext_cast_i_i_reg_352(30 downto 0) <= sext_cast_i_i_fu_184_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_13_i_i_i_reg_408 <= tmp_13_i_i_i_fu_328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_13_i_i_i_fu_328_p2 = ap_const_lv1_1))) then
                tmp_283_reg_417 <= output_buffer_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1))) then
                tmp_285_reg_360 <= result_n_V_dout;
                tmp_286_reg_366 <= result_r_V_dout;
                tmp_287_reg_371 <= result_c_V_dout;
                tmp_4_i_i_i_reg_376 <= tmp_4_i_i_i_fu_200_p2;
                tmp_6_i_i_i_reg_382 <= tmp_6_i_i_i_fu_206_p2;
            end if;
        end if;
    end process;
    outputs_offset_cast_s_reg_347(32 downto 10) <= "00000000000000000000000";
    sext_cast_i_i_reg_352(33 downto 31) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, m_axi_outputs_BVALID, outputs_offset_empty_n, outputs_offset_c_empty_n, cntl_V_full_n, ap_CS_fsm_state5, ap_CS_fsm_state12, tmp_288_fu_343_p1, ap_CS_fsm_state3, tmp_nbreadreq_fu_108_p3, ap_CS_fsm_state4, icmp_fu_270_p2, icmp7_fu_291_p2, tmp_13_i_i_i_fu_328_p2, ap_enable_reg_pp0_iter0, ap_sig_ioackin_m_axi_outputs_AWREADY, ap_block_pp0_stage0_subdone, ap_predicate_op88_writeresp_state12)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((outputs_offset_c_empty_n = ap_const_logic_0) or (outputs_offset_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp7_fu_291_p2 = ap_const_lv1_1) and (icmp_fu_270_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_sig_ioackin_m_axi_outputs_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((tmp_13_i_i_i_fu_328_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((tmp_13_i_i_i_fu_328_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if ((not((((m_axi_outputs_BVALID = ap_const_logic_0) and (ap_predicate_op88_writeresp_state12 = ap_const_boolean_1)) or ((tmp_288_fu_343_p1 = ap_const_lv1_0) and (cntl_V_full_n = ap_const_logic_0)))) and (tmp_288_fu_343_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not((((m_axi_outputs_BVALID = ap_const_logic_0) and (ap_predicate_op88_writeresp_state12 = ap_const_boolean_1)) or ((tmp_288_fu_343_p1 = ap_const_lv1_0) and (cntl_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (tmp_288_fu_343_p1 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(10);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state7_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_const_boolean_1 = ap_block_state7_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state7_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_boolean_1 = ap_block_state7_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, outputs_offset_empty_n, outputs_offset_c_empty_n)
    begin
                ap_block_state1 <= ((outputs_offset_c_empty_n = ap_const_logic_0) or (outputs_offset_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state12_assign_proc : process(m_axi_outputs_BVALID, cntl_V_full_n, tmp_288_fu_343_p1, ap_predicate_op88_writeresp_state12)
    begin
                ap_block_state12 <= (((m_axi_outputs_BVALID = ap_const_logic_0) and (ap_predicate_op88_writeresp_state12 = ap_const_boolean_1)) or ((tmp_288_fu_343_p1 = ap_const_lv1_0) and (cntl_V_full_n = ap_const_logic_0)));
    end process;

        ap_block_state6_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_io_assign_proc : process(tmp_13_i_i_i_reg_408, ap_sig_ioackin_m_axi_outputs_WREADY)
    begin
                ap_block_state7_io <= ((ap_sig_ioackin_m_axi_outputs_WREADY = ap_const_logic_0) and (tmp_13_i_i_i_reg_408 = ap_const_lv1_1));
    end process;

        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_484_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_13_i_i_i_reg_408)
    begin
                ap_condition_484 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_13_i_i_i_reg_408 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state6_assign_proc : process(tmp_13_i_i_i_fu_328_p2)
    begin
        if ((tmp_13_i_i_i_fu_328_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, m_axi_outputs_BVALID, cntl_V_full_n, ap_CS_fsm_state12, tmp_288_fu_343_p1, ap_predicate_op88_writeresp_state12)
    begin
        if ((not((((m_axi_outputs_BVALID = ap_const_logic_0) and (ap_predicate_op88_writeresp_state12 = ap_const_boolean_1)) or ((tmp_288_fu_343_p1 = ap_const_lv1_0) and (cntl_V_full_n = ap_const_logic_0)))) and (tmp_288_fu_343_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op88_writeresp_state12_assign_proc : process(icmp_reg_394, icmp7_reg_398)
    begin
                ap_predicate_op88_writeresp_state12 <= ((icmp7_reg_398 = ap_const_lv1_1) and (icmp_reg_394 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(m_axi_outputs_BVALID, cntl_V_full_n, ap_CS_fsm_state12, tmp_288_fu_343_p1, ap_predicate_op88_writeresp_state12)
    begin
        if ((not((((m_axi_outputs_BVALID = ap_const_logic_0) and (ap_predicate_op88_writeresp_state12 = ap_const_boolean_1)) or ((tmp_288_fu_343_p1 = ap_const_lv1_0) and (cntl_V_full_n = ap_const_logic_0)))) and (tmp_288_fu_343_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_outputs_AWREADY_assign_proc : process(m_axi_outputs_AWREADY, ap_reg_ioackin_m_axi_outputs_AWREADY)
    begin
        if ((ap_reg_ioackin_m_axi_outputs_AWREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_m_axi_outputs_AWREADY <= m_axi_outputs_AWREADY;
        else 
            ap_sig_ioackin_m_axi_outputs_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_outputs_WREADY_assign_proc : process(m_axi_outputs_WREADY, ap_reg_ioackin_m_axi_outputs_WREADY)
    begin
        if ((ap_reg_ioackin_m_axi_outputs_WREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_m_axi_outputs_WREADY <= m_axi_outputs_WREADY;
        else 
            ap_sig_ioackin_m_axi_outputs_WREADY <= ap_const_logic_1;
        end if; 
    end process;

    cLoops_fu_248_p3 <= 
        ap_const_lv32_8 when (tmp_7_i_i_i_fu_243_p2(0) = '1') else 
        tmp_6_i_i_i_reg_382;

    cntl_V_blk_n_assign_proc : process(cntl_V_full_n, ap_CS_fsm_state12, tmp_288_fu_343_p1)
    begin
        if (((tmp_288_fu_343_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            cntl_V_blk_n <= cntl_V_full_n;
        else 
            cntl_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cntl_V_din <= ap_const_logic_0;

    cntl_V_write_assign_proc : process(m_axi_outputs_BVALID, cntl_V_full_n, ap_CS_fsm_state12, tmp_288_fu_343_p1, ap_predicate_op88_writeresp_state12)
    begin
        if ((not((((m_axi_outputs_BVALID = ap_const_logic_0) and (ap_predicate_op88_writeresp_state12 = ap_const_boolean_1)) or ((tmp_288_fu_343_p1 = ap_const_lv1_0) and (cntl_V_full_n = ap_const_logic_0)))) and (tmp_288_fu_343_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            cntl_V_write <= ap_const_logic_1;
        else 
            cntl_V_write <= ap_const_logic_0;
        end if; 
    end process;

    i_0_i_cast_i_i_i_fu_324_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_i_i_reg_169),32));
    i_fu_333_p2 <= std_logic_vector(unsigned(i_0_i_i_i_i_reg_169) + unsigned(ap_const_lv4_1));
    icmp7_fu_291_p2 <= "1" when (signed(tmp_282_fu_281_p4) > signed(ap_const_lv28_0)) else "0";
    icmp_fu_270_p2 <= "1" when (signed(tmp_281_fu_260_p4) > signed(ap_const_lv28_0)) else "0";
    m_axi_outputs_ARADDR <= ap_const_lv32_0;
    m_axi_outputs_ARBURST <= ap_const_lv2_0;
    m_axi_outputs_ARCACHE <= ap_const_lv4_0;
    m_axi_outputs_ARID <= ap_const_lv1_0;
    m_axi_outputs_ARLEN <= ap_const_lv32_0;
    m_axi_outputs_ARLOCK <= ap_const_lv2_0;
    m_axi_outputs_ARPROT <= ap_const_lv3_0;
    m_axi_outputs_ARQOS <= ap_const_lv4_0;
    m_axi_outputs_ARREGION <= ap_const_lv4_0;
    m_axi_outputs_ARSIZE <= ap_const_lv3_0;
    m_axi_outputs_ARUSER <= ap_const_lv1_0;
    m_axi_outputs_ARVALID <= ap_const_logic_0;
    m_axi_outputs_AWADDR <= outputs_addr_reg_402;
    m_axi_outputs_AWBURST <= ap_const_lv2_0;
    m_axi_outputs_AWCACHE <= ap_const_lv4_0;
    m_axi_outputs_AWID <= ap_const_lv1_0;
    m_axi_outputs_AWLEN <= nLoops_reg_388;
    m_axi_outputs_AWLOCK <= ap_const_lv2_0;
    m_axi_outputs_AWPROT <= ap_const_lv3_0;
    m_axi_outputs_AWQOS <= ap_const_lv4_0;
    m_axi_outputs_AWREGION <= ap_const_lv4_0;
    m_axi_outputs_AWSIZE <= ap_const_lv3_0;
    m_axi_outputs_AWUSER <= ap_const_lv1_0;

    m_axi_outputs_AWVALID_assign_proc : process(ap_CS_fsm_state5, ap_reg_ioackin_m_axi_outputs_AWREADY)
    begin
        if (((ap_reg_ioackin_m_axi_outputs_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            m_axi_outputs_AWVALID <= ap_const_logic_1;
        else 
            m_axi_outputs_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_outputs_BREADY_assign_proc : process(m_axi_outputs_BVALID, cntl_V_full_n, ap_CS_fsm_state12, tmp_288_fu_343_p1, ap_predicate_op88_writeresp_state12)
    begin
        if ((not((((m_axi_outputs_BVALID = ap_const_logic_0) and (ap_predicate_op88_writeresp_state12 = ap_const_boolean_1)) or ((tmp_288_fu_343_p1 = ap_const_lv1_0) and (cntl_V_full_n = ap_const_logic_0)))) and (ap_predicate_op88_writeresp_state12 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_outputs_BREADY <= ap_const_logic_1;
        else 
            m_axi_outputs_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_outputs_RREADY <= ap_const_logic_0;
    m_axi_outputs_WDATA <= tmp_283_reg_417;
    m_axi_outputs_WID <= ap_const_lv1_0;
    m_axi_outputs_WLAST <= ap_const_logic_0;
    m_axi_outputs_WSTRB <= ap_const_lv2_3;
    m_axi_outputs_WUSER <= ap_const_lv1_0;

    m_axi_outputs_WVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_13_i_i_i_reg_408, ap_reg_ioackin_m_axi_outputs_WREADY, ap_block_pp0_stage0_01001)
    begin
        if (((ap_reg_ioackin_m_axi_outputs_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_13_i_i_i_reg_408 = ap_const_lv1_1))) then 
            m_axi_outputs_WVALID <= ap_const_logic_1;
        else 
            m_axi_outputs_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    nLoops_fu_223_p3 <= 
        ap_const_lv32_8 when (tmp_3_i_i_i_fu_217_p2(0) = '1') else 
        tmp_i_i_i_fu_212_p2;

    output_buffer_V_read_assign_proc : process(output_buffer_V_empty_n, ap_CS_fsm_pp0_stage0, tmp_13_i_i_i_fu_328_p2, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (output_buffer_V_empty_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_13_i_i_i_fu_328_p2 = ap_const_lv1_1))) then 
            output_buffer_V_read <= ap_const_logic_1;
        else 
            output_buffer_V_read <= ap_const_logic_0;
        end if; 
    end process;


    outputs_blk_n_AW_assign_proc : process(m_axi_outputs_AWREADY, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            outputs_blk_n_AW <= m_axi_outputs_AWREADY;
        else 
            outputs_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    outputs_blk_n_B_assign_proc : process(m_axi_outputs_BVALID, ap_CS_fsm_state12, icmp_reg_394, icmp7_reg_398)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp7_reg_398 = ap_const_lv1_1) and (icmp_reg_394 = ap_const_lv1_1))) then 
            outputs_blk_n_B <= m_axi_outputs_BVALID;
        else 
            outputs_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    outputs_blk_n_W_assign_proc : process(m_axi_outputs_WREADY, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_13_i_i_i_reg_408)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_13_i_i_i_reg_408 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            outputs_blk_n_W <= m_axi_outputs_WREADY;
        else 
            outputs_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    outputs_offset_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, outputs_offset_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            outputs_offset_blk_n <= outputs_offset_empty_n;
        else 
            outputs_offset_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outputs_offset_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, outputs_offset_c_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            outputs_offset_c_blk_n <= outputs_offset_c_empty_n;
        else 
            outputs_offset_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outputs_offset_c_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, outputs_offset_empty_n, outputs_offset_c_empty_n)
    begin
        if ((not(((outputs_offset_c_empty_n = ap_const_logic_0) or (outputs_offset_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            outputs_offset_c_read <= ap_const_logic_1;
        else 
            outputs_offset_c_read <= ap_const_logic_0;
        end if; 
    end process;

    outputs_offset_cast_s_fu_180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(outputs_offset_c_dout),33));

    outputs_offset_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, outputs_offset_empty_n, outputs_offset_c_empty_n)
    begin
        if ((not(((outputs_offset_c_empty_n = ap_const_logic_0) or (outputs_offset_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            outputs_offset_read <= ap_const_logic_1;
        else 
            outputs_offset_read <= ap_const_logic_0;
        end if; 
    end process;

    rLoops_fu_236_p3 <= 
        ap_const_lv32_8 when (tmp_5_i_i_i_fu_231_p2(0) = '1') else 
        tmp_4_i_i_i_reg_376;

    result_buffer_V_read_assign_proc : process(m_axi_outputs_BVALID, result_buffer_V_empty_n, cntl_V_full_n, ap_CS_fsm_state12, tmp_288_fu_343_p1, ap_predicate_op88_writeresp_state12)
    begin
        if ((not((((m_axi_outputs_BVALID = ap_const_logic_0) and (ap_predicate_op88_writeresp_state12 = ap_const_boolean_1)) or ((tmp_288_fu_343_p1 = ap_const_lv1_0) and (cntl_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (result_buffer_V_empty_n = ap_const_logic_1))) then 
            result_buffer_V_read <= ap_const_logic_1;
        else 
            result_buffer_V_read <= ap_const_logic_0;
        end if; 
    end process;


    result_c_V_read_assign_proc : process(result_c_V_empty_n, ap_CS_fsm_state3, tmp_nbreadreq_fu_108_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (result_c_V_empty_n = ap_const_logic_1) and (tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1))) then 
            result_c_V_read <= ap_const_logic_1;
        else 
            result_c_V_read <= ap_const_logic_0;
        end if; 
    end process;


    result_n_V_read_assign_proc : process(result_n_V_empty_n, ap_CS_fsm_state3, tmp_nbreadreq_fu_108_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (result_n_V_empty_n = ap_const_logic_1) and (tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1))) then 
            result_n_V_read <= ap_const_logic_1;
        else 
            result_n_V_read <= ap_const_logic_0;
        end if; 
    end process;


    result_r_V_read_assign_proc : process(result_r_V_empty_n, ap_CS_fsm_state3, tmp_nbreadreq_fu_108_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (result_r_V_empty_n = ap_const_logic_1) and (tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1))) then 
            result_r_V_read <= ap_const_logic_1;
        else 
            result_r_V_read <= ap_const_logic_0;
        end if; 
    end process;

    sext_cast_i_i_fu_184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(outputs_offset_dout),34));
        sum_cast_i_i_fu_314_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_i_i_fu_309_p2),64));

    sum_i_i_fu_309_p2 <= std_logic_vector(unsigned(sext_cast_i_i_reg_352) + unsigned(tmp_20_cast_i_i_fu_305_p1));
    tmp_10_i_i_i_fu_276_p2 <= std_logic_vector(unsigned(tmp_287_reg_371) + unsigned(cLoops_fu_248_p3));
        tmp_12_cast_i_i_i_fu_297_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_285_reg_360),33));

    tmp_13_i_i_i_fu_328_p2 <= "1" when (signed(i_0_i_cast_i_i_i_fu_324_p1) < signed(nLoops_reg_388)) else "0";
    tmp_19_i_i_fu_300_p2 <= std_logic_vector(unsigned(outputs_offset_cast_s_reg_347) + unsigned(tmp_12_cast_i_i_i_fu_297_p1));
        tmp_20_cast_i_i_fu_305_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_19_i_i_fu_300_p2),34));

    tmp_281_fu_260_p4 <= tmp_8_i_i_i_fu_255_p2(31 downto 4);
    tmp_282_fu_281_p4 <= tmp_10_i_i_i_fu_276_p2(31 downto 4);
    tmp_288_fu_343_p1 <= (0=>result_buffer_V_dout, others=>'-');
    tmp_3_i_i_i_fu_217_p2 <= "1" when (signed(tmp_i_i_i_fu_212_p2) > signed(ap_const_lv32_8)) else "0";
    tmp_4_i_i_i_fu_200_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) - unsigned(result_r_V_dout));
    tmp_5_i_i_i_fu_231_p2 <= "1" when (signed(tmp_4_i_i_i_reg_376) > signed(ap_const_lv32_8)) else "0";
    tmp_6_i_i_i_fu_206_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) - unsigned(result_c_V_dout));
    tmp_7_i_i_i_fu_243_p2 <= "1" when (signed(tmp_6_i_i_i_reg_382) > signed(ap_const_lv32_8)) else "0";
    tmp_8_i_i_i_fu_255_p2 <= std_logic_vector(unsigned(tmp_286_reg_366) + unsigned(rLoops_fu_236_p3));
    tmp_i_i_i_fu_212_p2 <= std_logic_vector(unsigned(ap_const_lv32_200) - unsigned(tmp_285_reg_360));
    tmp_nbreadreq_fu_108_p3 <= (0=>result_buffer_V_empty_n, others=>'-');
end behav;
