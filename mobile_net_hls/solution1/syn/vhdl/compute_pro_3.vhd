-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_pro_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_buffer_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_V_empty_n : IN STD_LOGIC;
    input_buffer_V_read : OUT STD_LOGIC;
    weight_buffer_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buffer_0_V_empty_n : IN STD_LOGIC;
    weight_buffer_0_V_read : OUT STD_LOGIC;
    weight_buffer_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buffer_1_V_empty_n : IN STD_LOGIC;
    weight_buffer_1_V_read : OUT STD_LOGIC;
    weight_buffer_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buffer_2_V_empty_n : IN STD_LOGIC;
    weight_buffer_2_V_read : OUT STD_LOGIC;
    weight_buffer_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buffer_3_V_empty_n : IN STD_LOGIC;
    weight_buffer_3_V_read : OUT STD_LOGIC;
    weight_buffer_4_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buffer_4_V_empty_n : IN STD_LOGIC;
    weight_buffer_4_V_read : OUT STD_LOGIC;
    weight_buffer_5_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buffer_5_V_empty_n : IN STD_LOGIC;
    weight_buffer_5_V_read : OUT STD_LOGIC;
    weight_buffer_6_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buffer_6_V_empty_n : IN STD_LOGIC;
    weight_buffer_6_V_read : OUT STD_LOGIC;
    weight_buffer_7_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buffer_7_V_empty_n : IN STD_LOGIC;
    weight_buffer_7_V_read : OUT STD_LOGIC;
    weight_buffer_8_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buffer_8_V_empty_n : IN STD_LOGIC;
    weight_buffer_8_V_read : OUT STD_LOGIC;
    weight_buffer_9_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buffer_9_V_empty_n : IN STD_LOGIC;
    weight_buffer_9_V_read : OUT STD_LOGIC;
    weight_buffer_10_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buffer_10_V_empty_n : IN STD_LOGIC;
    weight_buffer_10_V_read : OUT STD_LOGIC;
    weight_buffer_11_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buffer_11_V_empty_n : IN STD_LOGIC;
    weight_buffer_11_V_read : OUT STD_LOGIC;
    weight_buffer_12_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buffer_12_V_empty_n : IN STD_LOGIC;
    weight_buffer_12_V_read : OUT STD_LOGIC;
    weight_buffer_13_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buffer_13_V_empty_n : IN STD_LOGIC;
    weight_buffer_13_V_read : OUT STD_LOGIC;
    weight_buffer_14_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buffer_14_V_empty_n : IN STD_LOGIC;
    weight_buffer_14_V_read : OUT STD_LOGIC;
    weight_buffer_15_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buffer_15_V_empty_n : IN STD_LOGIC;
    weight_buffer_15_V_read : OUT STD_LOGIC;
    beta_buffer_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    beta_buffer_0_V_empty_n : IN STD_LOGIC;
    beta_buffer_0_V_read : OUT STD_LOGIC;
    beta_buffer_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    beta_buffer_1_V_empty_n : IN STD_LOGIC;
    beta_buffer_1_V_read : OUT STD_LOGIC;
    beta_buffer_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    beta_buffer_2_V_empty_n : IN STD_LOGIC;
    beta_buffer_2_V_read : OUT STD_LOGIC;
    beta_buffer_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    beta_buffer_3_V_empty_n : IN STD_LOGIC;
    beta_buffer_3_V_read : OUT STD_LOGIC;
    beta_buffer_4_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    beta_buffer_4_V_empty_n : IN STD_LOGIC;
    beta_buffer_4_V_read : OUT STD_LOGIC;
    beta_buffer_5_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    beta_buffer_5_V_empty_n : IN STD_LOGIC;
    beta_buffer_5_V_read : OUT STD_LOGIC;
    beta_buffer_6_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    beta_buffer_6_V_empty_n : IN STD_LOGIC;
    beta_buffer_6_V_read : OUT STD_LOGIC;
    beta_buffer_7_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    beta_buffer_7_V_empty_n : IN STD_LOGIC;
    beta_buffer_7_V_read : OUT STD_LOGIC;
    beta_buffer_8_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    beta_buffer_8_V_empty_n : IN STD_LOGIC;
    beta_buffer_8_V_read : OUT STD_LOGIC;
    beta_buffer_9_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    beta_buffer_9_V_empty_n : IN STD_LOGIC;
    beta_buffer_9_V_read : OUT STD_LOGIC;
    beta_buffer_10_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    beta_buffer_10_V_empty_n : IN STD_LOGIC;
    beta_buffer_10_V_read : OUT STD_LOGIC;
    beta_buffer_11_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    beta_buffer_11_V_empty_n : IN STD_LOGIC;
    beta_buffer_11_V_read : OUT STD_LOGIC;
    beta_buffer_12_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    beta_buffer_12_V_empty_n : IN STD_LOGIC;
    beta_buffer_12_V_read : OUT STD_LOGIC;
    beta_buffer_13_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    beta_buffer_13_V_empty_n : IN STD_LOGIC;
    beta_buffer_13_V_read : OUT STD_LOGIC;
    beta_buffer_14_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    beta_buffer_14_V_empty_n : IN STD_LOGIC;
    beta_buffer_14_V_read : OUT STD_LOGIC;
    beta_buffer_15_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    beta_buffer_15_V_empty_n : IN STD_LOGIC;
    beta_buffer_15_V_read : OUT STD_LOGIC;
    output_buffer_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_0_V_full_n : IN STD_LOGIC;
    output_buffer_0_V_write : OUT STD_LOGIC;
    output_buffer_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_1_V_full_n : IN STD_LOGIC;
    output_buffer_1_V_write : OUT STD_LOGIC;
    output_buffer_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_2_V_full_n : IN STD_LOGIC;
    output_buffer_2_V_write : OUT STD_LOGIC;
    output_buffer_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_3_V_full_n : IN STD_LOGIC;
    output_buffer_3_V_write : OUT STD_LOGIC;
    output_buffer_4_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_4_V_full_n : IN STD_LOGIC;
    output_buffer_4_V_write : OUT STD_LOGIC;
    output_buffer_5_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_5_V_full_n : IN STD_LOGIC;
    output_buffer_5_V_write : OUT STD_LOGIC;
    output_buffer_6_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_6_V_full_n : IN STD_LOGIC;
    output_buffer_6_V_write : OUT STD_LOGIC;
    output_buffer_7_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_7_V_full_n : IN STD_LOGIC;
    output_buffer_7_V_write : OUT STD_LOGIC;
    output_buffer_8_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_8_V_full_n : IN STD_LOGIC;
    output_buffer_8_V_write : OUT STD_LOGIC;
    output_buffer_9_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_9_V_full_n : IN STD_LOGIC;
    output_buffer_9_V_write : OUT STD_LOGIC;
    output_buffer_10_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_10_V_full_n : IN STD_LOGIC;
    output_buffer_10_V_write : OUT STD_LOGIC;
    output_buffer_11_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_11_V_full_n : IN STD_LOGIC;
    output_buffer_11_V_write : OUT STD_LOGIC;
    output_buffer_12_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_12_V_full_n : IN STD_LOGIC;
    output_buffer_12_V_write : OUT STD_LOGIC;
    output_buffer_13_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_13_V_full_n : IN STD_LOGIC;
    output_buffer_13_V_write : OUT STD_LOGIC;
    output_buffer_14_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_14_V_full_n : IN STD_LOGIC;
    output_buffer_14_V_write : OUT STD_LOGIC;
    output_buffer_15_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_15_V_full_n : IN STD_LOGIC;
    output_buffer_15_V_write : OUT STD_LOGIC;
    data_buffer_V_dout : IN STD_LOGIC;
    data_buffer_V_empty_n : IN STD_LOGIC;
    data_buffer_V_read : OUT STD_LOGIC;
    result_buffer_V_din : OUT STD_LOGIC;
    result_buffer_V_full_n : IN STD_LOGIC;
    result_buffer_V_write : OUT STD_LOGIC;
    data_c_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_c_V_empty_n : IN STD_LOGIC;
    data_c_V_read : OUT STD_LOGIC;
    data_r_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_r_V_empty_n : IN STD_LOGIC;
    data_r_V_read : OUT STD_LOGIC;
    data_m_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_m_V_empty_n : IN STD_LOGIC;
    data_m_V_read : OUT STD_LOGIC;
    data_n_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_n_V_empty_n : IN STD_LOGIC;
    data_n_V_read : OUT STD_LOGIC;
    result_c_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_c_V_full_n : IN STD_LOGIC;
    result_c_V_write : OUT STD_LOGIC;
    result_r_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_r_V_full_n : IN STD_LOGIC;
    result_r_V_write : OUT STD_LOGIC;
    result_m_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_m_V_full_n : IN STD_LOGIC;
    result_m_V_write : OUT STD_LOGIC;
    result_n_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_n_V_full_n : IN STD_LOGIC;
    result_n_V_write : OUT STD_LOGIC );
end;


architecture behav of compute_pro_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1FE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111110";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tc_reg_1177 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1176_reg_3113 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_nbreadreq_fu_508_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_293_nbwritereq_fu_516_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1177_reg_3119 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1174_reg_3128 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_1175_reg_3133 : STD_LOGIC_VECTOR (31 downto 0);
    signal cLoops_fu_1458_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal cLoops_reg_3138 : STD_LOGIC_VECTOR (31 downto 0);
    signal rLoops_fu_1480_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal rLoops_reg_3143 : STD_LOGIC_VECTOR (31 downto 0);
    signal nLoops_fu_1518_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal nLoops_reg_3148 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_301_fu_1526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_301_reg_3154 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_1811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_3207 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp36_fu_1827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp36_reg_3212 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_2_fu_1833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_2_reg_3217 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp37_fu_1849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp37_reg_3222 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_4_fu_1855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_4_reg_3227 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_5_fu_1861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_5_reg_3232 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_6_fu_1867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_6_reg_3237 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp38_fu_1883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp38_reg_3242 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_8_fu_1889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_8_reg_3247 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_9_fu_1895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_9_reg_3252 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_s_fu_1901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_s_reg_3257 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_1_fu_1907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_1_reg_3262 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_3_fu_1913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_3_reg_3267 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_7_fu_1919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_7_reg_3272 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_10_fu_1925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_0_10_reg_3277 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp39_fu_1941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp39_reg_3282 : STD_LOGIC_VECTOR (0 downto 0);
    signal tn_22_fu_1956_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tn_22_reg_3290 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal or_cond_fu_2112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_3295 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_303_fu_1951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_309_fu_2122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_309_reg_3315 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_310_fu_2157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tr_8_fu_2162_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tr_8_reg_3329 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_604_cast_fu_2172_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_604_cast_reg_3334 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_330_fu_2184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_330_reg_3339 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state7_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tc_3_fu_2189_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_1212_reg_3348 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_479_fu_2203_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_479_reg_3368 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_479_reg_3368_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_479_reg_3368_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_479_reg_3368_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal weight_regs_0_0_2_we_fu_2304_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_regs_1_0_2_we_fu_2312_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_regs_2_0_2_we_fu_2320_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_regs_3_0_2_we_fu_2328_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_regs_4_0_2_we_fu_2336_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_regs_5_0_2_we_fu_2344_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_regs_6_0_2_we_fu_2352_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_regs_7_0_2_we_fu_2360_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_regs_8_0_2_we_fu_2368_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_regs_9_0_2_we_fu_2376_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_regs_10_0_2_w_fu_2384_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_regs_11_0_2_w_fu_2392_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_regs_12_0_2_w_fu_2400_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_regs_13_0_2_w_fu_2408_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_regs_14_0_2_w_fu_2416_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_regs_15_0_2_w_fu_2424_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_temp_0_addr_reg_3453 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_0_addr_reg_3453_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_0_addr_reg_3453_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_0_addr_reg_3453_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_0_addr_reg_3453_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_0_addr_reg_3453_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_1_addr_reg_3459 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_1_addr_reg_3459_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_1_addr_reg_3459_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_1_addr_reg_3459_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_1_addr_reg_3459_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_1_addr_reg_3459_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_2_addr_reg_3465 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_2_addr_reg_3465_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_2_addr_reg_3465_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_2_addr_reg_3465_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_2_addr_reg_3465_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_2_addr_reg_3465_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_3_addr_reg_3471 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_3_addr_reg_3471_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_3_addr_reg_3471_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_3_addr_reg_3471_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_3_addr_reg_3471_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_3_addr_reg_3471_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_4_addr_reg_3477 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_4_addr_reg_3477_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_4_addr_reg_3477_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_4_addr_reg_3477_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_4_addr_reg_3477_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_4_addr_reg_3477_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_5_addr_reg_3483 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_5_addr_reg_3483_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_5_addr_reg_3483_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_5_addr_reg_3483_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_5_addr_reg_3483_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_5_addr_reg_3483_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_6_addr_reg_3489 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_6_addr_reg_3489_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_6_addr_reg_3489_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_6_addr_reg_3489_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_6_addr_reg_3489_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_6_addr_reg_3489_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_7_addr_reg_3495 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_7_addr_reg_3495_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_7_addr_reg_3495_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_7_addr_reg_3495_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_7_addr_reg_3495_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_7_addr_reg_3495_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_8_addr_reg_3501 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_8_addr_reg_3501_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_8_addr_reg_3501_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_8_addr_reg_3501_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_8_addr_reg_3501_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_8_addr_reg_3501_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_9_addr_reg_3507 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_9_addr_reg_3507_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_9_addr_reg_3507_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_9_addr_reg_3507_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_9_addr_reg_3507_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_9_addr_reg_3507_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_10_addr_reg_3513 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_10_addr_reg_3513_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_10_addr_reg_3513_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_10_addr_reg_3513_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_10_addr_reg_3513_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_10_addr_reg_3513_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_11_addr_reg_3519 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_11_addr_reg_3519_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_11_addr_reg_3519_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_11_addr_reg_3519_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_11_addr_reg_3519_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_11_addr_reg_3519_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_12_addr_reg_3525 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_12_addr_reg_3525_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_12_addr_reg_3525_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_12_addr_reg_3525_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_12_addr_reg_3525_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_12_addr_reg_3525_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_13_addr_reg_3531 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_13_addr_reg_3531_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_13_addr_reg_3531_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_13_addr_reg_3531_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_13_addr_reg_3531_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_13_addr_reg_3531_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_14_addr_reg_3537 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_14_addr_reg_3537_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_14_addr_reg_3537_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_14_addr_reg_3537_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_14_addr_reg_3537_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_14_addr_reg_3537_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_15_addr_reg_3543 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_15_addr_reg_3543_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_15_addr_reg_3543_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_15_addr_reg_3543_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_15_addr_reg_3543_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_15_addr_reg_3543_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_mac_1_1_s_fu_1188_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_334_reg_3549 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_fu_2534_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_reg_3554 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1194_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_339_reg_3559 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_1_fu_2544_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_1_reg_3564 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1200_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_342_reg_3569 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_2_fu_2554_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_2_reg_3574 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1206_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_345_reg_3579 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_3_fu_2564_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_3_reg_3584 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1212_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_348_reg_3589 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_4_fu_2574_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_4_reg_3594 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1218_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_351_reg_3599 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_5_fu_2584_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_5_reg_3604 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1224_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_354_reg_3609 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_6_fu_2594_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_6_reg_3614 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1230_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_357_reg_3619 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_7_fu_2604_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_7_reg_3624 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1236_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_360_reg_3629 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_8_fu_2614_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_8_reg_3634 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1242_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_363_reg_3639 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_9_fu_2624_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_9_reg_3644 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1248_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_366_reg_3649 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_10_fu_2634_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_10_reg_3654 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1254_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_369_reg_3659 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_11_fu_2644_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_11_reg_3664 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1260_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_372_reg_3669 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_12_fu_2654_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_12_reg_3674 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1266_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_375_reg_3679 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_13_fu_2664_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_13_reg_3684 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1272_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_378_reg_3689 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_14_fu_2674_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_14_reg_3694 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1278_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_381_reg_3699 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_s_fu_2684_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_pn_s_reg_3704 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1284_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_reg_3709 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_reg_3709_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_reg_3709_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1288_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_1_reg_3716 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_1_reg_3716_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_1_reg_3716_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1292_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_2_reg_3723 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_2_reg_3723_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_2_reg_3723_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1296_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_3_reg_3730 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_3_reg_3730_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_3_reg_3730_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1300_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_4_reg_3737 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_4_reg_3737_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_4_reg_3737_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1304_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_5_reg_3744 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_5_reg_3744_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_5_reg_3744_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1308_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_6_reg_3751 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_6_reg_3751_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_6_reg_3751_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1312_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_7_reg_3758 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_7_reg_3758_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_7_reg_3758_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1316_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_8_reg_3765 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_8_reg_3765_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_8_reg_3765_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1320_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_9_reg_3772 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_9_reg_3772_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_9_reg_3772_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1324_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_10_reg_3779 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_10_reg_3779_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_10_reg_3779_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1328_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_11_reg_3786 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_11_reg_3786_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_11_reg_3786_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1332_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_12_reg_3793 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_12_reg_3793_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_12_reg_3793_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1336_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_13_reg_3800 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_13_reg_3800_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_13_reg_3800_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1340_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_14_reg_3807 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_14_reg_3807_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_14_reg_3807_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1344_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_s_reg_3814 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_s_reg_3814_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_dat_s_reg_3814_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state7 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal output_temp_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_0_ce0 : STD_LOGIC;
    signal output_temp_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_temp_0_ce1 : STD_LOGIC;
    signal output_temp_0_we1 : STD_LOGIC;
    signal output_temp_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_1_ce0 : STD_LOGIC;
    signal output_temp_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_temp_1_ce1 : STD_LOGIC;
    signal output_temp_1_we1 : STD_LOGIC;
    signal output_temp_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_2_ce0 : STD_LOGIC;
    signal output_temp_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_temp_2_ce1 : STD_LOGIC;
    signal output_temp_2_we1 : STD_LOGIC;
    signal output_temp_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_3_ce0 : STD_LOGIC;
    signal output_temp_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_temp_3_ce1 : STD_LOGIC;
    signal output_temp_3_we1 : STD_LOGIC;
    signal output_temp_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_4_ce0 : STD_LOGIC;
    signal output_temp_4_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_temp_4_ce1 : STD_LOGIC;
    signal output_temp_4_we1 : STD_LOGIC;
    signal output_temp_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_5_ce0 : STD_LOGIC;
    signal output_temp_5_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_temp_5_ce1 : STD_LOGIC;
    signal output_temp_5_we1 : STD_LOGIC;
    signal output_temp_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_6_ce0 : STD_LOGIC;
    signal output_temp_6_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_temp_6_ce1 : STD_LOGIC;
    signal output_temp_6_we1 : STD_LOGIC;
    signal output_temp_7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_7_ce0 : STD_LOGIC;
    signal output_temp_7_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_temp_7_ce1 : STD_LOGIC;
    signal output_temp_7_we1 : STD_LOGIC;
    signal output_temp_8_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_8_ce0 : STD_LOGIC;
    signal output_temp_8_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_temp_8_ce1 : STD_LOGIC;
    signal output_temp_8_we1 : STD_LOGIC;
    signal output_temp_9_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_9_ce0 : STD_LOGIC;
    signal output_temp_9_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_temp_9_ce1 : STD_LOGIC;
    signal output_temp_9_we1 : STD_LOGIC;
    signal output_temp_10_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_10_ce0 : STD_LOGIC;
    signal output_temp_10_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_temp_10_ce1 : STD_LOGIC;
    signal output_temp_10_we1 : STD_LOGIC;
    signal output_temp_11_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_11_ce0 : STD_LOGIC;
    signal output_temp_11_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_temp_11_ce1 : STD_LOGIC;
    signal output_temp_11_we1 : STD_LOGIC;
    signal output_temp_12_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_12_ce0 : STD_LOGIC;
    signal output_temp_12_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_temp_12_ce1 : STD_LOGIC;
    signal output_temp_12_we1 : STD_LOGIC;
    signal output_temp_13_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_13_ce0 : STD_LOGIC;
    signal output_temp_13_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_temp_13_ce1 : STD_LOGIC;
    signal output_temp_13_we1 : STD_LOGIC;
    signal output_temp_14_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_14_ce0 : STD_LOGIC;
    signal output_temp_14_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_temp_14_ce1 : STD_LOGIC;
    signal output_temp_14_we1 : STD_LOGIC;
    signal output_temp_15_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_temp_15_ce0 : STD_LOGIC;
    signal output_temp_15_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_temp_15_ce1 : STD_LOGIC;
    signal output_temp_15_we1 : STD_LOGIC;
    signal grp_mac_1_1_s_fu_1188_weight_regs_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1194_weight_regs_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1200_weight_regs_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1206_weight_regs_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1212_weight_regs_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1218_weight_regs_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1224_weight_regs_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1230_weight_regs_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1236_weight_regs_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1242_weight_regs_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1248_weight_regs_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1254_weight_regs_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1260_weight_regs_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1266_weight_regs_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1272_weight_regs_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mac_1_1_s_fu_1278_weight_regs_read : STD_LOGIC_VECTOR (15 downto 0);
    signal tn_reg_1155 : STD_LOGIC_VECTOR (1 downto 0);
    signal tr_reg_1166 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_605_cast_fu_2512_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_302_fu_1531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_1556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_639_2_fu_1571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp33_fu_1596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_639_4_fu_1611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_639_5_fu_1626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_639_6_fu_1641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp34_fu_1666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_639_8_fu_1681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_639_9_fu_1696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_639_s_fu_1711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_639_1_fu_1726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_639_3_fu_1741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_639_7_fu_1756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_639_10_fu_1771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp35_fu_1796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp40_fu_2147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1178_fu_2128_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_1130_fu_252 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1131_fu_256 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1132_fu_260 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1133_fu_264 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1134_fu_268 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1135_fu_272 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1136_fu_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1137_fu_280 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1138_fu_284 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1139_fu_288 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1140_fu_292 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1141_fu_296 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1142_fu_300 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1143_fu_304 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1144_fu_308 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1145_fu_312 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_0_0_fu_316 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_1_0_fu_320 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_2_0_fu_324 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_3_0_fu_328 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_4_0_fu_332 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_5_0_fu_336 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_6_0_fu_340 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_7_0_fu_344 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_8_0_fu_348 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_9_0_fu_352 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_10_0_fu_356 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_11_0_fu_360 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_12_0_fu_364 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_13_0_fu_368 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_14_0_fu_372 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_15_0_fu_376 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_15_0_s_fu_380 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_0_0_s_fu_384 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_1_0_s_fu_388 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_2_0_s_fu_392 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_3_0_s_fu_396 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_4_0_s_fu_400 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_5_0_s_fu_404 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_6_0_s_fu_408 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_7_0_s_fu_412 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_8_0_s_fu_416 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_9_0_s_fu_420 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_10_0_s_fu_424 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_11_0_s_fu_428 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_12_0_s_fu_432 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_13_0_s_fu_436 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_temp_14_0_s_fu_440 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1146_fu_1444_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_294_fu_1452_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1147_fu_1466_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_296_fu_1474_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_297_fu_1488_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_298_fu_1493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_299_fu_1507_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_300_fu_1512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mLoops_fu_1499_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1149_fu_1546_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1152_fu_1586_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_1157_fu_1656_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_1166_fu_1786_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_1168_fu_1817_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1169_fu_1839_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_1170_fu_1873_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_1171_fu_1931_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal tn_cast_fu_1947_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_307_fu_2106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_308_fu_2117_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_305_fu_2133_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1172_fu_2137_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal tr_cast_fu_2153_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1194_fu_2168_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tc_cast_fu_2180_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1195_fu_2199_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component mac_1_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        input_regs_read : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_regs_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component moblie_net_hadd_1bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component moblie_net_hcmp_1tde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component compute_pro_5_outdEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    output_temp_0_U : component compute_pro_5_outdEe
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_temp_0_address0,
        ce0 => output_temp_0_ce0,
        q0 => output_temp_0_q0,
        address1 => output_temp_0_addr_reg_3453_pp0_iter9_reg,
        ce1 => output_temp_0_ce1,
        we1 => output_temp_0_we1,
        d1 => acc_dat_reg_3709);

    output_temp_1_U : component compute_pro_5_outdEe
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_temp_1_address0,
        ce0 => output_temp_1_ce0,
        q0 => output_temp_1_q0,
        address1 => output_temp_1_addr_reg_3459_pp0_iter9_reg,
        ce1 => output_temp_1_ce1,
        we1 => output_temp_1_we1,
        d1 => acc_dat_1_reg_3716);

    output_temp_2_U : component compute_pro_5_outdEe
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_temp_2_address0,
        ce0 => output_temp_2_ce0,
        q0 => output_temp_2_q0,
        address1 => output_temp_2_addr_reg_3465_pp0_iter9_reg,
        ce1 => output_temp_2_ce1,
        we1 => output_temp_2_we1,
        d1 => acc_dat_2_reg_3723);

    output_temp_3_U : component compute_pro_5_outdEe
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_temp_3_address0,
        ce0 => output_temp_3_ce0,
        q0 => output_temp_3_q0,
        address1 => output_temp_3_addr_reg_3471_pp0_iter9_reg,
        ce1 => output_temp_3_ce1,
        we1 => output_temp_3_we1,
        d1 => acc_dat_3_reg_3730);

    output_temp_4_U : component compute_pro_5_outdEe
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_temp_4_address0,
        ce0 => output_temp_4_ce0,
        q0 => output_temp_4_q0,
        address1 => output_temp_4_addr_reg_3477_pp0_iter9_reg,
        ce1 => output_temp_4_ce1,
        we1 => output_temp_4_we1,
        d1 => acc_dat_4_reg_3737);

    output_temp_5_U : component compute_pro_5_outdEe
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_temp_5_address0,
        ce0 => output_temp_5_ce0,
        q0 => output_temp_5_q0,
        address1 => output_temp_5_addr_reg_3483_pp0_iter9_reg,
        ce1 => output_temp_5_ce1,
        we1 => output_temp_5_we1,
        d1 => acc_dat_5_reg_3744);

    output_temp_6_U : component compute_pro_5_outdEe
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_temp_6_address0,
        ce0 => output_temp_6_ce0,
        q0 => output_temp_6_q0,
        address1 => output_temp_6_addr_reg_3489_pp0_iter9_reg,
        ce1 => output_temp_6_ce1,
        we1 => output_temp_6_we1,
        d1 => acc_dat_6_reg_3751);

    output_temp_7_U : component compute_pro_5_outdEe
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_temp_7_address0,
        ce0 => output_temp_7_ce0,
        q0 => output_temp_7_q0,
        address1 => output_temp_7_addr_reg_3495_pp0_iter9_reg,
        ce1 => output_temp_7_ce1,
        we1 => output_temp_7_we1,
        d1 => acc_dat_7_reg_3758);

    output_temp_8_U : component compute_pro_5_outdEe
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_temp_8_address0,
        ce0 => output_temp_8_ce0,
        q0 => output_temp_8_q0,
        address1 => output_temp_8_addr_reg_3501_pp0_iter9_reg,
        ce1 => output_temp_8_ce1,
        we1 => output_temp_8_we1,
        d1 => acc_dat_8_reg_3765);

    output_temp_9_U : component compute_pro_5_outdEe
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_temp_9_address0,
        ce0 => output_temp_9_ce0,
        q0 => output_temp_9_q0,
        address1 => output_temp_9_addr_reg_3507_pp0_iter9_reg,
        ce1 => output_temp_9_ce1,
        we1 => output_temp_9_we1,
        d1 => acc_dat_9_reg_3772);

    output_temp_10_U : component compute_pro_5_outdEe
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_temp_10_address0,
        ce0 => output_temp_10_ce0,
        q0 => output_temp_10_q0,
        address1 => output_temp_10_addr_reg_3513_pp0_iter9_reg,
        ce1 => output_temp_10_ce1,
        we1 => output_temp_10_we1,
        d1 => acc_dat_10_reg_3779);

    output_temp_11_U : component compute_pro_5_outdEe
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_temp_11_address0,
        ce0 => output_temp_11_ce0,
        q0 => output_temp_11_q0,
        address1 => output_temp_11_addr_reg_3519_pp0_iter9_reg,
        ce1 => output_temp_11_ce1,
        we1 => output_temp_11_we1,
        d1 => acc_dat_11_reg_3786);

    output_temp_12_U : component compute_pro_5_outdEe
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_temp_12_address0,
        ce0 => output_temp_12_ce0,
        q0 => output_temp_12_q0,
        address1 => output_temp_12_addr_reg_3525_pp0_iter9_reg,
        ce1 => output_temp_12_ce1,
        we1 => output_temp_12_we1,
        d1 => acc_dat_12_reg_3793);

    output_temp_13_U : component compute_pro_5_outdEe
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_temp_13_address0,
        ce0 => output_temp_13_ce0,
        q0 => output_temp_13_q0,
        address1 => output_temp_13_addr_reg_3531_pp0_iter9_reg,
        ce1 => output_temp_13_ce1,
        we1 => output_temp_13_we1,
        d1 => acc_dat_13_reg_3800);

    output_temp_14_U : component compute_pro_5_outdEe
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_temp_14_address0,
        ce0 => output_temp_14_ce0,
        q0 => output_temp_14_q0,
        address1 => output_temp_14_addr_reg_3537_pp0_iter9_reg,
        ce1 => output_temp_14_ce1,
        we1 => output_temp_14_we1,
        d1 => acc_dat_14_reg_3807);

    output_temp_15_U : component compute_pro_5_outdEe
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_temp_15_address0,
        ce0 => output_temp_15_ce0,
        q0 => output_temp_15_q0,
        address1 => output_temp_15_addr_reg_3543_pp0_iter9_reg,
        ce1 => output_temp_15_ce1,
        we1 => output_temp_15_we1,
        d1 => acc_dat_s_reg_3814);

    grp_mac_1_1_s_fu_1188 : component mac_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_regs_read => tmp_1212_reg_3348,
        weight_regs_read => grp_mac_1_1_s_fu_1188_weight_regs_read,
        ap_return => grp_mac_1_1_s_fu_1188_ap_return);

    grp_mac_1_1_s_fu_1194 : component mac_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_regs_read => tmp_1212_reg_3348,
        weight_regs_read => grp_mac_1_1_s_fu_1194_weight_regs_read,
        ap_return => grp_mac_1_1_s_fu_1194_ap_return);

    grp_mac_1_1_s_fu_1200 : component mac_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_regs_read => tmp_1212_reg_3348,
        weight_regs_read => grp_mac_1_1_s_fu_1200_weight_regs_read,
        ap_return => grp_mac_1_1_s_fu_1200_ap_return);

    grp_mac_1_1_s_fu_1206 : component mac_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_regs_read => tmp_1212_reg_3348,
        weight_regs_read => grp_mac_1_1_s_fu_1206_weight_regs_read,
        ap_return => grp_mac_1_1_s_fu_1206_ap_return);

    grp_mac_1_1_s_fu_1212 : component mac_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_regs_read => tmp_1212_reg_3348,
        weight_regs_read => grp_mac_1_1_s_fu_1212_weight_regs_read,
        ap_return => grp_mac_1_1_s_fu_1212_ap_return);

    grp_mac_1_1_s_fu_1218 : component mac_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_regs_read => tmp_1212_reg_3348,
        weight_regs_read => grp_mac_1_1_s_fu_1218_weight_regs_read,
        ap_return => grp_mac_1_1_s_fu_1218_ap_return);

    grp_mac_1_1_s_fu_1224 : component mac_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_regs_read => tmp_1212_reg_3348,
        weight_regs_read => grp_mac_1_1_s_fu_1224_weight_regs_read,
        ap_return => grp_mac_1_1_s_fu_1224_ap_return);

    grp_mac_1_1_s_fu_1230 : component mac_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_regs_read => tmp_1212_reg_3348,
        weight_regs_read => grp_mac_1_1_s_fu_1230_weight_regs_read,
        ap_return => grp_mac_1_1_s_fu_1230_ap_return);

    grp_mac_1_1_s_fu_1236 : component mac_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_regs_read => tmp_1212_reg_3348,
        weight_regs_read => grp_mac_1_1_s_fu_1236_weight_regs_read,
        ap_return => grp_mac_1_1_s_fu_1236_ap_return);

    grp_mac_1_1_s_fu_1242 : component mac_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_regs_read => tmp_1212_reg_3348,
        weight_regs_read => grp_mac_1_1_s_fu_1242_weight_regs_read,
        ap_return => grp_mac_1_1_s_fu_1242_ap_return);

    grp_mac_1_1_s_fu_1248 : component mac_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_regs_read => tmp_1212_reg_3348,
        weight_regs_read => grp_mac_1_1_s_fu_1248_weight_regs_read,
        ap_return => grp_mac_1_1_s_fu_1248_ap_return);

    grp_mac_1_1_s_fu_1254 : component mac_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_regs_read => tmp_1212_reg_3348,
        weight_regs_read => grp_mac_1_1_s_fu_1254_weight_regs_read,
        ap_return => grp_mac_1_1_s_fu_1254_ap_return);

    grp_mac_1_1_s_fu_1260 : component mac_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_regs_read => tmp_1212_reg_3348,
        weight_regs_read => grp_mac_1_1_s_fu_1260_weight_regs_read,
        ap_return => grp_mac_1_1_s_fu_1260_ap_return);

    grp_mac_1_1_s_fu_1266 : component mac_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_regs_read => tmp_1212_reg_3348,
        weight_regs_read => grp_mac_1_1_s_fu_1266_weight_regs_read,
        ap_return => grp_mac_1_1_s_fu_1266_ap_return);

    grp_mac_1_1_s_fu_1272 : component mac_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_regs_read => tmp_1212_reg_3348,
        weight_regs_read => grp_mac_1_1_s_fu_1272_weight_regs_read,
        ap_return => grp_mac_1_1_s_fu_1272_ap_return);

    grp_mac_1_1_s_fu_1278 : component mac_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_regs_read => tmp_1212_reg_3348,
        weight_regs_read => grp_mac_1_1_s_fu_1278_weight_regs_read,
        ap_return => grp_mac_1_1_s_fu_1278_ap_return);

    moblie_net_hadd_1bkb_U2491 : component moblie_net_hadd_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_pn_reg_3554,
        din1 => tmp_334_reg_3549,
        ce => ap_const_logic_1,
        dout => grp_fu_1284_p2);

    moblie_net_hadd_1bkb_U2492 : component moblie_net_hadd_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_pn_1_reg_3564,
        din1 => tmp_339_reg_3559,
        ce => ap_const_logic_1,
        dout => grp_fu_1288_p2);

    moblie_net_hadd_1bkb_U2493 : component moblie_net_hadd_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_pn_2_reg_3574,
        din1 => tmp_342_reg_3569,
        ce => ap_const_logic_1,
        dout => grp_fu_1292_p2);

    moblie_net_hadd_1bkb_U2494 : component moblie_net_hadd_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_pn_3_reg_3584,
        din1 => tmp_345_reg_3579,
        ce => ap_const_logic_1,
        dout => grp_fu_1296_p2);

    moblie_net_hadd_1bkb_U2495 : component moblie_net_hadd_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_pn_4_reg_3594,
        din1 => tmp_348_reg_3589,
        ce => ap_const_logic_1,
        dout => grp_fu_1300_p2);

    moblie_net_hadd_1bkb_U2496 : component moblie_net_hadd_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_pn_5_reg_3604,
        din1 => tmp_351_reg_3599,
        ce => ap_const_logic_1,
        dout => grp_fu_1304_p2);

    moblie_net_hadd_1bkb_U2497 : component moblie_net_hadd_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_pn_6_reg_3614,
        din1 => tmp_354_reg_3609,
        ce => ap_const_logic_1,
        dout => grp_fu_1308_p2);

    moblie_net_hadd_1bkb_U2498 : component moblie_net_hadd_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_pn_7_reg_3624,
        din1 => tmp_357_reg_3619,
        ce => ap_const_logic_1,
        dout => grp_fu_1312_p2);

    moblie_net_hadd_1bkb_U2499 : component moblie_net_hadd_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_pn_8_reg_3634,
        din1 => tmp_360_reg_3629,
        ce => ap_const_logic_1,
        dout => grp_fu_1316_p2);

    moblie_net_hadd_1bkb_U2500 : component moblie_net_hadd_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_pn_9_reg_3644,
        din1 => tmp_363_reg_3639,
        ce => ap_const_logic_1,
        dout => grp_fu_1320_p2);

    moblie_net_hadd_1bkb_U2501 : component moblie_net_hadd_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_pn_10_reg_3654,
        din1 => tmp_366_reg_3649,
        ce => ap_const_logic_1,
        dout => grp_fu_1324_p2);

    moblie_net_hadd_1bkb_U2502 : component moblie_net_hadd_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_pn_11_reg_3664,
        din1 => tmp_369_reg_3659,
        ce => ap_const_logic_1,
        dout => grp_fu_1328_p2);

    moblie_net_hadd_1bkb_U2503 : component moblie_net_hadd_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_pn_12_reg_3674,
        din1 => tmp_372_reg_3669,
        ce => ap_const_logic_1,
        dout => grp_fu_1332_p2);

    moblie_net_hadd_1bkb_U2504 : component moblie_net_hadd_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_pn_13_reg_3684,
        din1 => tmp_375_reg_3679,
        ce => ap_const_logic_1,
        dout => grp_fu_1336_p2);

    moblie_net_hadd_1bkb_U2505 : component moblie_net_hadd_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_pn_14_reg_3694,
        din1 => tmp_378_reg_3689,
        ce => ap_const_logic_1,
        dout => grp_fu_1340_p2);

    moblie_net_hadd_1bkb_U2506 : component moblie_net_hadd_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_pn_s_reg_3704,
        din1 => tmp_381_reg_3699,
        ce => ap_const_logic_1,
        dout => grp_fu_1344_p2);

    moblie_net_hcmp_1tde_U2507 : component moblie_net_hcmp_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_dat_reg_3709,
        din1 => ap_const_lv16_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1348_p2);

    moblie_net_hcmp_1tde_U2508 : component moblie_net_hcmp_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_dat_1_reg_3716,
        din1 => ap_const_lv16_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1353_p2);

    moblie_net_hcmp_1tde_U2509 : component moblie_net_hcmp_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_dat_2_reg_3723,
        din1 => ap_const_lv16_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1358_p2);

    moblie_net_hcmp_1tde_U2510 : component moblie_net_hcmp_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_dat_3_reg_3730,
        din1 => ap_const_lv16_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1363_p2);

    moblie_net_hcmp_1tde_U2511 : component moblie_net_hcmp_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_dat_4_reg_3737,
        din1 => ap_const_lv16_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1368_p2);

    moblie_net_hcmp_1tde_U2512 : component moblie_net_hcmp_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_dat_5_reg_3744,
        din1 => ap_const_lv16_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1373_p2);

    moblie_net_hcmp_1tde_U2513 : component moblie_net_hcmp_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_dat_6_reg_3751,
        din1 => ap_const_lv16_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1378_p2);

    moblie_net_hcmp_1tde_U2514 : component moblie_net_hcmp_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_dat_7_reg_3758,
        din1 => ap_const_lv16_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1383_p2);

    moblie_net_hcmp_1tde_U2515 : component moblie_net_hcmp_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_dat_8_reg_3765,
        din1 => ap_const_lv16_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1388_p2);

    moblie_net_hcmp_1tde_U2516 : component moblie_net_hcmp_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_dat_9_reg_3772,
        din1 => ap_const_lv16_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1393_p2);

    moblie_net_hcmp_1tde_U2517 : component moblie_net_hcmp_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_dat_10_reg_3779,
        din1 => ap_const_lv16_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1398_p2);

    moblie_net_hcmp_1tde_U2518 : component moblie_net_hcmp_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_dat_11_reg_3786,
        din1 => ap_const_lv16_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1403_p2);

    moblie_net_hcmp_1tde_U2519 : component moblie_net_hcmp_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_dat_12_reg_3793,
        din1 => ap_const_lv16_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1408_p2);

    moblie_net_hcmp_1tde_U2520 : component moblie_net_hcmp_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_dat_13_reg_3800,
        din1 => ap_const_lv16_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1413_p2);

    moblie_net_hcmp_1tde_U2521 : component moblie_net_hcmp_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_dat_14_reg_3807,
        din1 => ap_const_lv16_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1418_p2);

    moblie_net_hcmp_1tde_U2522 : component moblie_net_hcmp_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_dat_s_reg_3814,
        din1 => ap_const_lv16_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1423_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((tmp_1178_fu_2128_p1 = ap_const_lv1_0) and (tmp_303_fu_1951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((tmp_310_fu_2157_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state7)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state7);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                elsif (((tmp_310_fu_2157_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    tc_reg_1177_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_330_fu_2184_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                tc_reg_1177 <= tc_3_fu_2189_p2;
            elsif (((tmp_310_fu_2157_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                tc_reg_1177 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    tn_reg_1155_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_310_fu_2157_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                tn_reg_1155 <= tn_22_reg_3290;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                tn_reg_1155 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    tr_reg_1166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                tr_reg_1166 <= tr_8_reg_3329;
            elsif (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                tr_reg_1166 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_665_0_0_s_reg_3257 = ap_const_lv1_1))) then
                acc_dat_10_reg_3779 <= grp_fu_1324_p2;
                p_pn_10_reg_3654 <= p_pn_10_fu_2634_p3;
                tmp_366_reg_3649 <= grp_mac_1_1_s_fu_1248_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                acc_dat_10_reg_3779_pp0_iter10_reg <= acc_dat_10_reg_3779;
                acc_dat_10_reg_3779_pp0_iter11_reg <= acc_dat_10_reg_3779_pp0_iter10_reg;
                acc_dat_11_reg_3786_pp0_iter10_reg <= acc_dat_11_reg_3786;
                acc_dat_11_reg_3786_pp0_iter11_reg <= acc_dat_11_reg_3786_pp0_iter10_reg;
                acc_dat_12_reg_3793_pp0_iter10_reg <= acc_dat_12_reg_3793;
                acc_dat_12_reg_3793_pp0_iter11_reg <= acc_dat_12_reg_3793_pp0_iter10_reg;
                acc_dat_13_reg_3800_pp0_iter10_reg <= acc_dat_13_reg_3800;
                acc_dat_13_reg_3800_pp0_iter11_reg <= acc_dat_13_reg_3800_pp0_iter10_reg;
                acc_dat_14_reg_3807_pp0_iter10_reg <= acc_dat_14_reg_3807;
                acc_dat_14_reg_3807_pp0_iter11_reg <= acc_dat_14_reg_3807_pp0_iter10_reg;
                acc_dat_1_reg_3716_pp0_iter10_reg <= acc_dat_1_reg_3716;
                acc_dat_1_reg_3716_pp0_iter11_reg <= acc_dat_1_reg_3716_pp0_iter10_reg;
                acc_dat_2_reg_3723_pp0_iter10_reg <= acc_dat_2_reg_3723;
                acc_dat_2_reg_3723_pp0_iter11_reg <= acc_dat_2_reg_3723_pp0_iter10_reg;
                acc_dat_3_reg_3730_pp0_iter10_reg <= acc_dat_3_reg_3730;
                acc_dat_3_reg_3730_pp0_iter11_reg <= acc_dat_3_reg_3730_pp0_iter10_reg;
                acc_dat_4_reg_3737_pp0_iter10_reg <= acc_dat_4_reg_3737;
                acc_dat_4_reg_3737_pp0_iter11_reg <= acc_dat_4_reg_3737_pp0_iter10_reg;
                acc_dat_5_reg_3744_pp0_iter10_reg <= acc_dat_5_reg_3744;
                acc_dat_5_reg_3744_pp0_iter11_reg <= acc_dat_5_reg_3744_pp0_iter10_reg;
                acc_dat_6_reg_3751_pp0_iter10_reg <= acc_dat_6_reg_3751;
                acc_dat_6_reg_3751_pp0_iter11_reg <= acc_dat_6_reg_3751_pp0_iter10_reg;
                acc_dat_7_reg_3758_pp0_iter10_reg <= acc_dat_7_reg_3758;
                acc_dat_7_reg_3758_pp0_iter11_reg <= acc_dat_7_reg_3758_pp0_iter10_reg;
                acc_dat_8_reg_3765_pp0_iter10_reg <= acc_dat_8_reg_3765;
                acc_dat_8_reg_3765_pp0_iter11_reg <= acc_dat_8_reg_3765_pp0_iter10_reg;
                acc_dat_9_reg_3772_pp0_iter10_reg <= acc_dat_9_reg_3772;
                acc_dat_9_reg_3772_pp0_iter11_reg <= acc_dat_9_reg_3772_pp0_iter10_reg;
                acc_dat_reg_3709_pp0_iter10_reg <= acc_dat_reg_3709;
                acc_dat_reg_3709_pp0_iter11_reg <= acc_dat_reg_3709_pp0_iter10_reg;
                acc_dat_s_reg_3814_pp0_iter10_reg <= acc_dat_s_reg_3814;
                acc_dat_s_reg_3814_pp0_iter11_reg <= acc_dat_s_reg_3814_pp0_iter10_reg;
                output_temp_0_addr_reg_3453 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);
                output_temp_0_addr_reg_3453_pp0_iter5_reg <= output_temp_0_addr_reg_3453;
                output_temp_0_addr_reg_3453_pp0_iter6_reg <= output_temp_0_addr_reg_3453_pp0_iter5_reg;
                output_temp_0_addr_reg_3453_pp0_iter7_reg <= output_temp_0_addr_reg_3453_pp0_iter6_reg;
                output_temp_0_addr_reg_3453_pp0_iter8_reg <= output_temp_0_addr_reg_3453_pp0_iter7_reg;
                output_temp_0_addr_reg_3453_pp0_iter9_reg <= output_temp_0_addr_reg_3453_pp0_iter8_reg;
                output_temp_10_addr_reg_3513 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);
                output_temp_10_addr_reg_3513_pp0_iter5_reg <= output_temp_10_addr_reg_3513;
                output_temp_10_addr_reg_3513_pp0_iter6_reg <= output_temp_10_addr_reg_3513_pp0_iter5_reg;
                output_temp_10_addr_reg_3513_pp0_iter7_reg <= output_temp_10_addr_reg_3513_pp0_iter6_reg;
                output_temp_10_addr_reg_3513_pp0_iter8_reg <= output_temp_10_addr_reg_3513_pp0_iter7_reg;
                output_temp_10_addr_reg_3513_pp0_iter9_reg <= output_temp_10_addr_reg_3513_pp0_iter8_reg;
                output_temp_11_addr_reg_3519 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);
                output_temp_11_addr_reg_3519_pp0_iter5_reg <= output_temp_11_addr_reg_3519;
                output_temp_11_addr_reg_3519_pp0_iter6_reg <= output_temp_11_addr_reg_3519_pp0_iter5_reg;
                output_temp_11_addr_reg_3519_pp0_iter7_reg <= output_temp_11_addr_reg_3519_pp0_iter6_reg;
                output_temp_11_addr_reg_3519_pp0_iter8_reg <= output_temp_11_addr_reg_3519_pp0_iter7_reg;
                output_temp_11_addr_reg_3519_pp0_iter9_reg <= output_temp_11_addr_reg_3519_pp0_iter8_reg;
                output_temp_12_addr_reg_3525 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);
                output_temp_12_addr_reg_3525_pp0_iter5_reg <= output_temp_12_addr_reg_3525;
                output_temp_12_addr_reg_3525_pp0_iter6_reg <= output_temp_12_addr_reg_3525_pp0_iter5_reg;
                output_temp_12_addr_reg_3525_pp0_iter7_reg <= output_temp_12_addr_reg_3525_pp0_iter6_reg;
                output_temp_12_addr_reg_3525_pp0_iter8_reg <= output_temp_12_addr_reg_3525_pp0_iter7_reg;
                output_temp_12_addr_reg_3525_pp0_iter9_reg <= output_temp_12_addr_reg_3525_pp0_iter8_reg;
                output_temp_13_addr_reg_3531 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);
                output_temp_13_addr_reg_3531_pp0_iter5_reg <= output_temp_13_addr_reg_3531;
                output_temp_13_addr_reg_3531_pp0_iter6_reg <= output_temp_13_addr_reg_3531_pp0_iter5_reg;
                output_temp_13_addr_reg_3531_pp0_iter7_reg <= output_temp_13_addr_reg_3531_pp0_iter6_reg;
                output_temp_13_addr_reg_3531_pp0_iter8_reg <= output_temp_13_addr_reg_3531_pp0_iter7_reg;
                output_temp_13_addr_reg_3531_pp0_iter9_reg <= output_temp_13_addr_reg_3531_pp0_iter8_reg;
                output_temp_14_addr_reg_3537 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);
                output_temp_14_addr_reg_3537_pp0_iter5_reg <= output_temp_14_addr_reg_3537;
                output_temp_14_addr_reg_3537_pp0_iter6_reg <= output_temp_14_addr_reg_3537_pp0_iter5_reg;
                output_temp_14_addr_reg_3537_pp0_iter7_reg <= output_temp_14_addr_reg_3537_pp0_iter6_reg;
                output_temp_14_addr_reg_3537_pp0_iter8_reg <= output_temp_14_addr_reg_3537_pp0_iter7_reg;
                output_temp_14_addr_reg_3537_pp0_iter9_reg <= output_temp_14_addr_reg_3537_pp0_iter8_reg;
                output_temp_15_addr_reg_3543 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);
                output_temp_15_addr_reg_3543_pp0_iter5_reg <= output_temp_15_addr_reg_3543;
                output_temp_15_addr_reg_3543_pp0_iter6_reg <= output_temp_15_addr_reg_3543_pp0_iter5_reg;
                output_temp_15_addr_reg_3543_pp0_iter7_reg <= output_temp_15_addr_reg_3543_pp0_iter6_reg;
                output_temp_15_addr_reg_3543_pp0_iter8_reg <= output_temp_15_addr_reg_3543_pp0_iter7_reg;
                output_temp_15_addr_reg_3543_pp0_iter9_reg <= output_temp_15_addr_reg_3543_pp0_iter8_reg;
                output_temp_1_addr_reg_3459 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);
                output_temp_1_addr_reg_3459_pp0_iter5_reg <= output_temp_1_addr_reg_3459;
                output_temp_1_addr_reg_3459_pp0_iter6_reg <= output_temp_1_addr_reg_3459_pp0_iter5_reg;
                output_temp_1_addr_reg_3459_pp0_iter7_reg <= output_temp_1_addr_reg_3459_pp0_iter6_reg;
                output_temp_1_addr_reg_3459_pp0_iter8_reg <= output_temp_1_addr_reg_3459_pp0_iter7_reg;
                output_temp_1_addr_reg_3459_pp0_iter9_reg <= output_temp_1_addr_reg_3459_pp0_iter8_reg;
                output_temp_2_addr_reg_3465 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);
                output_temp_2_addr_reg_3465_pp0_iter5_reg <= output_temp_2_addr_reg_3465;
                output_temp_2_addr_reg_3465_pp0_iter6_reg <= output_temp_2_addr_reg_3465_pp0_iter5_reg;
                output_temp_2_addr_reg_3465_pp0_iter7_reg <= output_temp_2_addr_reg_3465_pp0_iter6_reg;
                output_temp_2_addr_reg_3465_pp0_iter8_reg <= output_temp_2_addr_reg_3465_pp0_iter7_reg;
                output_temp_2_addr_reg_3465_pp0_iter9_reg <= output_temp_2_addr_reg_3465_pp0_iter8_reg;
                output_temp_3_addr_reg_3471 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);
                output_temp_3_addr_reg_3471_pp0_iter5_reg <= output_temp_3_addr_reg_3471;
                output_temp_3_addr_reg_3471_pp0_iter6_reg <= output_temp_3_addr_reg_3471_pp0_iter5_reg;
                output_temp_3_addr_reg_3471_pp0_iter7_reg <= output_temp_3_addr_reg_3471_pp0_iter6_reg;
                output_temp_3_addr_reg_3471_pp0_iter8_reg <= output_temp_3_addr_reg_3471_pp0_iter7_reg;
                output_temp_3_addr_reg_3471_pp0_iter9_reg <= output_temp_3_addr_reg_3471_pp0_iter8_reg;
                output_temp_4_addr_reg_3477 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);
                output_temp_4_addr_reg_3477_pp0_iter5_reg <= output_temp_4_addr_reg_3477;
                output_temp_4_addr_reg_3477_pp0_iter6_reg <= output_temp_4_addr_reg_3477_pp0_iter5_reg;
                output_temp_4_addr_reg_3477_pp0_iter7_reg <= output_temp_4_addr_reg_3477_pp0_iter6_reg;
                output_temp_4_addr_reg_3477_pp0_iter8_reg <= output_temp_4_addr_reg_3477_pp0_iter7_reg;
                output_temp_4_addr_reg_3477_pp0_iter9_reg <= output_temp_4_addr_reg_3477_pp0_iter8_reg;
                output_temp_5_addr_reg_3483 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);
                output_temp_5_addr_reg_3483_pp0_iter5_reg <= output_temp_5_addr_reg_3483;
                output_temp_5_addr_reg_3483_pp0_iter6_reg <= output_temp_5_addr_reg_3483_pp0_iter5_reg;
                output_temp_5_addr_reg_3483_pp0_iter7_reg <= output_temp_5_addr_reg_3483_pp0_iter6_reg;
                output_temp_5_addr_reg_3483_pp0_iter8_reg <= output_temp_5_addr_reg_3483_pp0_iter7_reg;
                output_temp_5_addr_reg_3483_pp0_iter9_reg <= output_temp_5_addr_reg_3483_pp0_iter8_reg;
                output_temp_6_addr_reg_3489 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);
                output_temp_6_addr_reg_3489_pp0_iter5_reg <= output_temp_6_addr_reg_3489;
                output_temp_6_addr_reg_3489_pp0_iter6_reg <= output_temp_6_addr_reg_3489_pp0_iter5_reg;
                output_temp_6_addr_reg_3489_pp0_iter7_reg <= output_temp_6_addr_reg_3489_pp0_iter6_reg;
                output_temp_6_addr_reg_3489_pp0_iter8_reg <= output_temp_6_addr_reg_3489_pp0_iter7_reg;
                output_temp_6_addr_reg_3489_pp0_iter9_reg <= output_temp_6_addr_reg_3489_pp0_iter8_reg;
                output_temp_7_addr_reg_3495 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);
                output_temp_7_addr_reg_3495_pp0_iter5_reg <= output_temp_7_addr_reg_3495;
                output_temp_7_addr_reg_3495_pp0_iter6_reg <= output_temp_7_addr_reg_3495_pp0_iter5_reg;
                output_temp_7_addr_reg_3495_pp0_iter7_reg <= output_temp_7_addr_reg_3495_pp0_iter6_reg;
                output_temp_7_addr_reg_3495_pp0_iter8_reg <= output_temp_7_addr_reg_3495_pp0_iter7_reg;
                output_temp_7_addr_reg_3495_pp0_iter9_reg <= output_temp_7_addr_reg_3495_pp0_iter8_reg;
                output_temp_8_addr_reg_3501 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);
                output_temp_8_addr_reg_3501_pp0_iter5_reg <= output_temp_8_addr_reg_3501;
                output_temp_8_addr_reg_3501_pp0_iter6_reg <= output_temp_8_addr_reg_3501_pp0_iter5_reg;
                output_temp_8_addr_reg_3501_pp0_iter7_reg <= output_temp_8_addr_reg_3501_pp0_iter6_reg;
                output_temp_8_addr_reg_3501_pp0_iter8_reg <= output_temp_8_addr_reg_3501_pp0_iter7_reg;
                output_temp_8_addr_reg_3501_pp0_iter9_reg <= output_temp_8_addr_reg_3501_pp0_iter8_reg;
                output_temp_9_addr_reg_3507 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);
                output_temp_9_addr_reg_3507_pp0_iter5_reg <= output_temp_9_addr_reg_3507;
                output_temp_9_addr_reg_3507_pp0_iter6_reg <= output_temp_9_addr_reg_3507_pp0_iter5_reg;
                output_temp_9_addr_reg_3507_pp0_iter7_reg <= output_temp_9_addr_reg_3507_pp0_iter6_reg;
                output_temp_9_addr_reg_3507_pp0_iter8_reg <= output_temp_9_addr_reg_3507_pp0_iter7_reg;
                output_temp_9_addr_reg_3507_pp0_iter9_reg <= output_temp_9_addr_reg_3507_pp0_iter8_reg;
                tmp_479_reg_3368_pp0_iter2_reg <= tmp_479_reg_3368_pp0_iter1_reg;
                tmp_479_reg_3368_pp0_iter3_reg <= tmp_479_reg_3368_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_665_0_0_1_reg_3262 = ap_const_lv1_1))) then
                acc_dat_11_reg_3786 <= grp_fu_1328_p2;
                p_pn_11_reg_3664 <= p_pn_11_fu_2644_p3;
                tmp_369_reg_3659 <= grp_mac_1_1_s_fu_1254_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_665_0_0_3_reg_3267 = ap_const_lv1_1))) then
                acc_dat_12_reg_3793 <= grp_fu_1332_p2;
                p_pn_12_reg_3674 <= p_pn_12_fu_2654_p3;
                tmp_372_reg_3669 <= grp_mac_1_1_s_fu_1260_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_665_0_0_7_reg_3272 = ap_const_lv1_1))) then
                acc_dat_13_reg_3800 <= grp_fu_1336_p2;
                p_pn_13_reg_3684 <= p_pn_13_fu_2664_p3;
                tmp_375_reg_3679 <= grp_mac_1_1_s_fu_1266_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_665_0_0_10_reg_3277 = ap_const_lv1_1))) then
                acc_dat_14_reg_3807 <= grp_fu_1340_p2;
                p_pn_14_reg_3694 <= p_pn_14_fu_2674_p3;
                tmp_378_reg_3689 <= grp_mac_1_1_s_fu_1272_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp36_reg_3212 = ap_const_lv1_1))) then
                acc_dat_1_reg_3716 <= grp_fu_1288_p2;
                p_pn_1_reg_3564 <= p_pn_1_fu_2544_p3;
                tmp_339_reg_3559 <= grp_mac_1_1_s_fu_1194_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_665_0_0_2_reg_3217 = ap_const_lv1_1))) then
                acc_dat_2_reg_3723 <= grp_fu_1292_p2;
                p_pn_2_reg_3574 <= p_pn_2_fu_2554_p3;
                tmp_342_reg_3569 <= grp_mac_1_1_s_fu_1200_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp37_reg_3222 = ap_const_lv1_1))) then
                acc_dat_3_reg_3730 <= grp_fu_1296_p2;
                p_pn_3_reg_3584 <= p_pn_3_fu_2564_p3;
                tmp_345_reg_3579 <= grp_mac_1_1_s_fu_1206_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_665_0_0_4_reg_3227 = ap_const_lv1_1))) then
                acc_dat_4_reg_3737 <= grp_fu_1300_p2;
                p_pn_4_reg_3594 <= p_pn_4_fu_2574_p3;
                tmp_348_reg_3589 <= grp_mac_1_1_s_fu_1212_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_665_0_0_5_reg_3232 = ap_const_lv1_1))) then
                acc_dat_5_reg_3744 <= grp_fu_1304_p2;
                p_pn_5_reg_3604 <= p_pn_5_fu_2584_p3;
                tmp_351_reg_3599 <= grp_mac_1_1_s_fu_1218_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_665_0_0_6_reg_3237 = ap_const_lv1_1))) then
                acc_dat_6_reg_3751 <= grp_fu_1308_p2;
                p_pn_6_reg_3614 <= p_pn_6_fu_2594_p3;
                tmp_354_reg_3609 <= grp_mac_1_1_s_fu_1224_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp38_reg_3242 = ap_const_lv1_1))) then
                acc_dat_7_reg_3758 <= grp_fu_1312_p2;
                p_pn_7_reg_3624 <= p_pn_7_fu_2604_p3;
                tmp_357_reg_3619 <= grp_mac_1_1_s_fu_1230_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_665_0_0_8_reg_3247 = ap_const_lv1_1))) then
                acc_dat_8_reg_3765 <= grp_fu_1316_p2;
                p_pn_8_reg_3634 <= p_pn_8_fu_2614_p3;
                tmp_360_reg_3629 <= grp_mac_1_1_s_fu_1236_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_665_0_0_9_reg_3252 = ap_const_lv1_1))) then
                acc_dat_9_reg_3772 <= grp_fu_1320_p2;
                p_pn_9_reg_3644 <= p_pn_9_fu_2624_p3;
                tmp_363_reg_3639 <= grp_mac_1_1_s_fu_1242_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_3207 = ap_const_lv1_1))) then
                acc_dat_reg_3709 <= grp_fu_1284_p2;
                p_pn_reg_3554 <= p_pn_fu_2534_p3;
                tmp_334_reg_3549 <= grp_mac_1_1_s_fu_1188_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp39_reg_3282 = ap_const_lv1_1))) then
                acc_dat_s_reg_3814 <= grp_fu_1344_p2;
                p_pn_s_reg_3704 <= p_pn_s_fu_2684_p3;
                tmp_381_reg_3699 <= grp_mac_1_1_s_fu_1278_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                cLoops_reg_3138 <= cLoops_fu_1458_p3;
                icmp36_reg_3212 <= icmp36_fu_1827_p2;
                icmp37_reg_3222 <= icmp37_fu_1849_p2;
                icmp38_reg_3242 <= icmp38_fu_1883_p2;
                icmp39_reg_3282 <= icmp39_fu_1941_p2;
                nLoops_reg_3148 <= nLoops_fu_1518_p3;
                rLoops_reg_3143 <= rLoops_fu_1480_p3;
                tmp_1174_reg_3128 <= data_c_V_dout;
                tmp_1175_reg_3133 <= data_r_V_dout;
                tmp_301_reg_3154 <= tmp_301_fu_1526_p2;
                tmp_665_0_0_10_reg_3277 <= tmp_665_0_0_10_fu_1925_p2;
                tmp_665_0_0_1_reg_3262 <= tmp_665_0_0_1_fu_1907_p2;
                tmp_665_0_0_2_reg_3217 <= tmp_665_0_0_2_fu_1833_p2;
                tmp_665_0_0_3_reg_3267 <= tmp_665_0_0_3_fu_1913_p2;
                tmp_665_0_0_4_reg_3227 <= tmp_665_0_0_4_fu_1855_p2;
                tmp_665_0_0_5_reg_3232 <= tmp_665_0_0_5_fu_1861_p2;
                tmp_665_0_0_6_reg_3237 <= tmp_665_0_0_6_fu_1867_p2;
                tmp_665_0_0_7_reg_3272 <= tmp_665_0_0_7_fu_1919_p2;
                tmp_665_0_0_8_reg_3247 <= tmp_665_0_0_8_fu_1889_p2;
                tmp_665_0_0_9_reg_3252 <= tmp_665_0_0_9_fu_1895_p2;
                tmp_665_0_0_s_reg_3257 <= tmp_665_0_0_s_fu_1901_p2;
                tmp_s_reg_3207 <= tmp_s_fu_1811_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                or_cond_reg_3295 <= or_cond_fu_2112_p2;
                tmp_309_reg_3315 <= tmp_309_fu_2122_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_302_fu_1531_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_1130_fu_252 <= beta_buffer_0_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (icmp_fu_1556_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_1131_fu_256 <= beta_buffer_1_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_2_fu_1571_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_1132_fu_260 <= beta_buffer_2_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (icmp33_fu_1596_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_1133_fu_264 <= beta_buffer_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_4_fu_1611_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_1134_fu_268 <= beta_buffer_4_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_5_fu_1626_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_1135_fu_272 <= beta_buffer_5_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_6_fu_1641_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_1136_fu_276 <= beta_buffer_6_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (icmp34_fu_1666_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_1137_fu_280 <= beta_buffer_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_8_fu_1681_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_1138_fu_284 <= beta_buffer_8_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_9_fu_1696_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_1139_fu_288 <= beta_buffer_9_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_s_fu_1711_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_1140_fu_292 <= beta_buffer_10_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_1_fu_1726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_1141_fu_296 <= beta_buffer_11_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_3_fu_1741_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_1142_fu_300 <= beta_buffer_12_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_7_fu_1756_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_1143_fu_304 <= beta_buffer_13_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_10_fu_1771_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_1144_fu_308 <= beta_buffer_14_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (icmp35_fu_1796_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_1145_fu_312 <= beta_buffer_15_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_293_nbwritereq_fu_516_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_508_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_1176_reg_3113 <= data_m_V_dout;
                tmp_1177_reg_3119 <= data_n_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_330_fu_2184_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_1212_reg_3348 <= input_buffer_V_dout;
                tmp_479_reg_3368 <= tmp_479_fu_2203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_330_reg_3339 <= tmp_330_fu_2184_p2;
                tmp_479_reg_3368_pp0_iter1_reg <= tmp_479_reg_3368;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_310_fu_2157_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    tmp_604_cast_reg_3334(9 downto 4) <= tmp_604_cast_fu_2172_p3(9 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                tn_22_reg_3290 <= tn_22_fu_1956_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                tr_8_reg_3329 <= tr_8_fu_2162_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_s_reg_3207 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                weight_temp_0_0_fu_316 <= weight_buffer_0_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_330_reg_3339 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                weight_temp_0_0_s_fu_384 <= weight_regs_0_0_2_we_fu_2304_p3;
                weight_temp_10_0_s_fu_424 <= weight_regs_10_0_2_w_fu_2384_p3;
                weight_temp_11_0_s_fu_428 <= weight_regs_11_0_2_w_fu_2392_p3;
                weight_temp_12_0_s_fu_432 <= weight_regs_12_0_2_w_fu_2400_p3;
                weight_temp_13_0_s_fu_436 <= weight_regs_13_0_2_w_fu_2408_p3;
                weight_temp_14_0_s_fu_440 <= weight_regs_14_0_2_w_fu_2416_p3;
                weight_temp_15_0_s_fu_380 <= weight_regs_15_0_2_w_fu_2424_p3;
                weight_temp_1_0_s_fu_388 <= weight_regs_1_0_2_we_fu_2312_p3;
                weight_temp_2_0_s_fu_392 <= weight_regs_2_0_2_we_fu_2320_p3;
                weight_temp_3_0_s_fu_396 <= weight_regs_3_0_2_we_fu_2328_p3;
                weight_temp_4_0_s_fu_400 <= weight_regs_4_0_2_we_fu_2336_p3;
                weight_temp_5_0_s_fu_404 <= weight_regs_5_0_2_we_fu_2344_p3;
                weight_temp_6_0_s_fu_408 <= weight_regs_6_0_2_we_fu_2352_p3;
                weight_temp_7_0_s_fu_412 <= weight_regs_7_0_2_we_fu_2360_p3;
                weight_temp_8_0_s_fu_416 <= weight_regs_8_0_2_we_fu_2368_p3;
                weight_temp_9_0_s_fu_420 <= weight_regs_9_0_2_we_fu_2376_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_s_reg_3257 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                weight_temp_10_0_fu_356 <= weight_buffer_10_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_1_reg_3262 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                weight_temp_11_0_fu_360 <= weight_buffer_11_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_3_reg_3267 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                weight_temp_12_0_fu_364 <= weight_buffer_12_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_7_reg_3272 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                weight_temp_13_0_fu_368 <= weight_buffer_13_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_10_reg_3277 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                weight_temp_14_0_fu_372 <= weight_buffer_14_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (icmp39_reg_3282 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                weight_temp_15_0_fu_376 <= weight_buffer_15_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (icmp36_reg_3212 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                weight_temp_1_0_fu_320 <= weight_buffer_1_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_2_reg_3217 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                weight_temp_2_0_fu_324 <= weight_buffer_2_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (icmp37_reg_3222 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                weight_temp_3_0_fu_328 <= weight_buffer_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_4_reg_3227 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                weight_temp_4_0_fu_332 <= weight_buffer_4_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_5_reg_3232 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                weight_temp_5_0_fu_336 <= weight_buffer_5_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_6_reg_3237 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                weight_temp_6_0_fu_340 <= weight_buffer_6_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (icmp38_reg_3242 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                weight_temp_7_0_fu_344 <= weight_buffer_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_8_reg_3247 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                weight_temp_8_0_fu_348 <= weight_buffer_8_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_9_reg_3252 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                weight_temp_9_0_fu_352 <= weight_buffer_9_V_dout;
            end if;
        end if;
    end process;
    tmp_604_cast_reg_3334(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, tmp_nbreadreq_fu_508_p3, tmp_293_nbwritereq_fu_516_p3, ap_CS_fsm_state5, tmp_303_fu_1951_p2, tmp_310_fu_2157_p2, ap_CS_fsm_state6, tmp_330_fu_2184_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, tmp_1178_fu_2128_p1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((tmp_293_nbwritereq_fu_516_p3 = ap_const_lv1_0) or (tmp_nbreadreq_fu_508_p3 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((tmp_1178_fu_2128_p1 = ap_const_lv1_0) and (tmp_303_fu_1951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((tmp_303_fu_1951_p2 = ap_const_lv1_0) and (tmp_1178_fu_2128_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((tmp_310_fu_2157_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_330_fu_2184_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_330_fu_2184_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state20 <= ap_CS_fsm(7);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state7_assign_proc : process(tmp_330_fu_2184_p2)
    begin
        if ((tmp_330_fu_2184_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state7 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state5, tmp_303_fu_1951_p2, tmp_1178_fu_2128_p1)
    begin
        if (((tmp_1178_fu_2128_p1 = ap_const_lv1_0) and (tmp_303_fu_1951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5, tmp_303_fu_1951_p2, tmp_1178_fu_2128_p1)
    begin
        if (((tmp_1178_fu_2128_p1 = ap_const_lv1_0) and (tmp_303_fu_1951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    beta_buffer_0_V_read_assign_proc : process(beta_buffer_0_V_empty_n, ap_CS_fsm_state4, tmp_301_fu_1526_p2, tmp_302_fu_1531_p2)
    begin
        if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_302_fu_1531_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (beta_buffer_0_V_empty_n = ap_const_logic_1))) then 
            beta_buffer_0_V_read <= ap_const_logic_1;
        else 
            beta_buffer_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    beta_buffer_10_V_read_assign_proc : process(beta_buffer_10_V_empty_n, ap_CS_fsm_state4, tmp_301_fu_1526_p2, tmp_639_s_fu_1711_p2)
    begin
        if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_s_fu_1711_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (beta_buffer_10_V_empty_n = ap_const_logic_1))) then 
            beta_buffer_10_V_read <= ap_const_logic_1;
        else 
            beta_buffer_10_V_read <= ap_const_logic_0;
        end if; 
    end process;


    beta_buffer_11_V_read_assign_proc : process(beta_buffer_11_V_empty_n, ap_CS_fsm_state4, tmp_301_fu_1526_p2, tmp_639_1_fu_1726_p2)
    begin
        if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_1_fu_1726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (beta_buffer_11_V_empty_n = ap_const_logic_1))) then 
            beta_buffer_11_V_read <= ap_const_logic_1;
        else 
            beta_buffer_11_V_read <= ap_const_logic_0;
        end if; 
    end process;


    beta_buffer_12_V_read_assign_proc : process(beta_buffer_12_V_empty_n, ap_CS_fsm_state4, tmp_301_fu_1526_p2, tmp_639_3_fu_1741_p2)
    begin
        if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_3_fu_1741_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (beta_buffer_12_V_empty_n = ap_const_logic_1))) then 
            beta_buffer_12_V_read <= ap_const_logic_1;
        else 
            beta_buffer_12_V_read <= ap_const_logic_0;
        end if; 
    end process;


    beta_buffer_13_V_read_assign_proc : process(beta_buffer_13_V_empty_n, ap_CS_fsm_state4, tmp_301_fu_1526_p2, tmp_639_7_fu_1756_p2)
    begin
        if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_7_fu_1756_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (beta_buffer_13_V_empty_n = ap_const_logic_1))) then 
            beta_buffer_13_V_read <= ap_const_logic_1;
        else 
            beta_buffer_13_V_read <= ap_const_logic_0;
        end if; 
    end process;


    beta_buffer_14_V_read_assign_proc : process(beta_buffer_14_V_empty_n, ap_CS_fsm_state4, tmp_301_fu_1526_p2, tmp_639_10_fu_1771_p2)
    begin
        if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_10_fu_1771_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (beta_buffer_14_V_empty_n = ap_const_logic_1))) then 
            beta_buffer_14_V_read <= ap_const_logic_1;
        else 
            beta_buffer_14_V_read <= ap_const_logic_0;
        end if; 
    end process;


    beta_buffer_15_V_read_assign_proc : process(beta_buffer_15_V_empty_n, ap_CS_fsm_state4, tmp_301_fu_1526_p2, icmp35_fu_1796_p2)
    begin
        if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (icmp35_fu_1796_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (beta_buffer_15_V_empty_n = ap_const_logic_1))) then 
            beta_buffer_15_V_read <= ap_const_logic_1;
        else 
            beta_buffer_15_V_read <= ap_const_logic_0;
        end if; 
    end process;


    beta_buffer_1_V_read_assign_proc : process(beta_buffer_1_V_empty_n, ap_CS_fsm_state4, tmp_301_fu_1526_p2, icmp_fu_1556_p2)
    begin
        if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (icmp_fu_1556_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (beta_buffer_1_V_empty_n = ap_const_logic_1))) then 
            beta_buffer_1_V_read <= ap_const_logic_1;
        else 
            beta_buffer_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    beta_buffer_2_V_read_assign_proc : process(beta_buffer_2_V_empty_n, ap_CS_fsm_state4, tmp_301_fu_1526_p2, tmp_639_2_fu_1571_p2)
    begin
        if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_2_fu_1571_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (beta_buffer_2_V_empty_n = ap_const_logic_1))) then 
            beta_buffer_2_V_read <= ap_const_logic_1;
        else 
            beta_buffer_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    beta_buffer_3_V_read_assign_proc : process(beta_buffer_3_V_empty_n, ap_CS_fsm_state4, tmp_301_fu_1526_p2, icmp33_fu_1596_p2)
    begin
        if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (icmp33_fu_1596_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (beta_buffer_3_V_empty_n = ap_const_logic_1))) then 
            beta_buffer_3_V_read <= ap_const_logic_1;
        else 
            beta_buffer_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    beta_buffer_4_V_read_assign_proc : process(beta_buffer_4_V_empty_n, ap_CS_fsm_state4, tmp_301_fu_1526_p2, tmp_639_4_fu_1611_p2)
    begin
        if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_4_fu_1611_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (beta_buffer_4_V_empty_n = ap_const_logic_1))) then 
            beta_buffer_4_V_read <= ap_const_logic_1;
        else 
            beta_buffer_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    beta_buffer_5_V_read_assign_proc : process(beta_buffer_5_V_empty_n, ap_CS_fsm_state4, tmp_301_fu_1526_p2, tmp_639_5_fu_1626_p2)
    begin
        if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_5_fu_1626_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (beta_buffer_5_V_empty_n = ap_const_logic_1))) then 
            beta_buffer_5_V_read <= ap_const_logic_1;
        else 
            beta_buffer_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    beta_buffer_6_V_read_assign_proc : process(beta_buffer_6_V_empty_n, ap_CS_fsm_state4, tmp_301_fu_1526_p2, tmp_639_6_fu_1641_p2)
    begin
        if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_6_fu_1641_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (beta_buffer_6_V_empty_n = ap_const_logic_1))) then 
            beta_buffer_6_V_read <= ap_const_logic_1;
        else 
            beta_buffer_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    beta_buffer_7_V_read_assign_proc : process(beta_buffer_7_V_empty_n, ap_CS_fsm_state4, tmp_301_fu_1526_p2, icmp34_fu_1666_p2)
    begin
        if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (icmp34_fu_1666_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (beta_buffer_7_V_empty_n = ap_const_logic_1))) then 
            beta_buffer_7_V_read <= ap_const_logic_1;
        else 
            beta_buffer_7_V_read <= ap_const_logic_0;
        end if; 
    end process;


    beta_buffer_8_V_read_assign_proc : process(beta_buffer_8_V_empty_n, ap_CS_fsm_state4, tmp_301_fu_1526_p2, tmp_639_8_fu_1681_p2)
    begin
        if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_8_fu_1681_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (beta_buffer_8_V_empty_n = ap_const_logic_1))) then 
            beta_buffer_8_V_read <= ap_const_logic_1;
        else 
            beta_buffer_8_V_read <= ap_const_logic_0;
        end if; 
    end process;


    beta_buffer_9_V_read_assign_proc : process(beta_buffer_9_V_empty_n, ap_CS_fsm_state4, tmp_301_fu_1526_p2, tmp_639_9_fu_1696_p2)
    begin
        if (((tmp_301_fu_1526_p2 = ap_const_lv1_1) and (tmp_639_9_fu_1696_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (beta_buffer_9_V_empty_n = ap_const_logic_1))) then 
            beta_buffer_9_V_read <= ap_const_logic_1;
        else 
            beta_buffer_9_V_read <= ap_const_logic_0;
        end if; 
    end process;

    cLoops_fu_1458_p3 <= 
        ap_const_lv32_10 when (tmp_1146_fu_1444_p3(0) = '1') else 
        tmp_294_fu_1452_p2;

    data_buffer_V_read_assign_proc : process(data_buffer_V_empty_n, ap_CS_fsm_state5, tmp_303_fu_1951_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (data_buffer_V_empty_n = ap_const_logic_1))) then 
            data_buffer_V_read <= ap_const_logic_1;
        else 
            data_buffer_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_c_V_read_assign_proc : process(data_c_V_empty_n, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (data_c_V_empty_n = ap_const_logic_1))) then 
            data_c_V_read <= ap_const_logic_1;
        else 
            data_c_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_m_V_read_assign_proc : process(data_m_V_empty_n, ap_CS_fsm_state3, tmp_nbreadreq_fu_508_p3, tmp_293_nbwritereq_fu_516_p3)
    begin
        if (((tmp_293_nbwritereq_fu_516_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_508_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (data_m_V_empty_n = ap_const_logic_1))) then 
            data_m_V_read <= ap_const_logic_1;
        else 
            data_m_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_n_V_read_assign_proc : process(data_n_V_empty_n, ap_CS_fsm_state3, tmp_nbreadreq_fu_508_p3, tmp_293_nbwritereq_fu_516_p3)
    begin
        if (((tmp_293_nbwritereq_fu_516_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_508_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (data_n_V_empty_n = ap_const_logic_1))) then 
            data_n_V_read <= ap_const_logic_1;
        else 
            data_n_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_r_V_read_assign_proc : process(data_r_V_empty_n, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (data_r_V_empty_n = ap_const_logic_1))) then 
            data_r_V_read <= ap_const_logic_1;
        else 
            data_r_V_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_mac_1_1_s_fu_1188_weight_regs_read <= 
        weight_temp_0_0_fu_316 when (tmp_s_reg_3207(0) = '1') else 
        weight_temp_0_0_s_fu_384;
    grp_mac_1_1_s_fu_1194_weight_regs_read <= 
        weight_temp_1_0_fu_320 when (icmp36_reg_3212(0) = '1') else 
        weight_temp_1_0_s_fu_388;
    grp_mac_1_1_s_fu_1200_weight_regs_read <= 
        weight_temp_2_0_fu_324 when (tmp_665_0_0_2_reg_3217(0) = '1') else 
        weight_temp_2_0_s_fu_392;
    grp_mac_1_1_s_fu_1206_weight_regs_read <= 
        weight_temp_3_0_fu_328 when (icmp37_reg_3222(0) = '1') else 
        weight_temp_3_0_s_fu_396;
    grp_mac_1_1_s_fu_1212_weight_regs_read <= 
        weight_temp_4_0_fu_332 when (tmp_665_0_0_4_reg_3227(0) = '1') else 
        weight_temp_4_0_s_fu_400;
    grp_mac_1_1_s_fu_1218_weight_regs_read <= 
        weight_temp_5_0_fu_336 when (tmp_665_0_0_5_reg_3232(0) = '1') else 
        weight_temp_5_0_s_fu_404;
    grp_mac_1_1_s_fu_1224_weight_regs_read <= 
        weight_temp_6_0_fu_340 when (tmp_665_0_0_6_reg_3237(0) = '1') else 
        weight_temp_6_0_s_fu_408;
    grp_mac_1_1_s_fu_1230_weight_regs_read <= 
        weight_temp_7_0_fu_344 when (icmp38_reg_3242(0) = '1') else 
        weight_temp_7_0_s_fu_412;
    grp_mac_1_1_s_fu_1236_weight_regs_read <= 
        weight_temp_8_0_fu_348 when (tmp_665_0_0_8_reg_3247(0) = '1') else 
        weight_temp_8_0_s_fu_416;
    grp_mac_1_1_s_fu_1242_weight_regs_read <= 
        weight_temp_9_0_fu_352 when (tmp_665_0_0_9_reg_3252(0) = '1') else 
        weight_temp_9_0_s_fu_420;
    grp_mac_1_1_s_fu_1248_weight_regs_read <= 
        weight_temp_10_0_fu_356 when (tmp_665_0_0_s_reg_3257(0) = '1') else 
        weight_temp_10_0_s_fu_424;
    grp_mac_1_1_s_fu_1254_weight_regs_read <= 
        weight_temp_11_0_fu_360 when (tmp_665_0_0_1_reg_3262(0) = '1') else 
        weight_temp_11_0_s_fu_428;
    grp_mac_1_1_s_fu_1260_weight_regs_read <= 
        weight_temp_12_0_fu_364 when (tmp_665_0_0_3_reg_3267(0) = '1') else 
        weight_temp_12_0_s_fu_432;
    grp_mac_1_1_s_fu_1266_weight_regs_read <= 
        weight_temp_13_0_fu_368 when (tmp_665_0_0_7_reg_3272(0) = '1') else 
        weight_temp_13_0_s_fu_436;
    grp_mac_1_1_s_fu_1272_weight_regs_read <= 
        weight_temp_14_0_fu_372 when (tmp_665_0_0_10_reg_3277(0) = '1') else 
        weight_temp_14_0_s_fu_440;
    grp_mac_1_1_s_fu_1278_weight_regs_read <= 
        weight_temp_15_0_fu_376 when (icmp39_reg_3282(0) = '1') else 
        weight_temp_15_0_s_fu_380;
    icmp33_fu_1596_p2 <= "1" when (signed(tmp_1152_fu_1586_p4) > signed(ap_const_lv30_0)) else "0";
    icmp34_fu_1666_p2 <= "1" when (signed(tmp_1157_fu_1656_p4) > signed(ap_const_lv29_0)) else "0";
    icmp35_fu_1796_p2 <= "1" when (signed(tmp_1166_fu_1786_p4) > signed(ap_const_lv28_0)) else "0";
    icmp36_fu_1827_p2 <= "1" when (signed(tmp_1168_fu_1817_p4) > signed(ap_const_lv31_0)) else "0";
    icmp37_fu_1849_p2 <= "1" when (signed(tmp_1169_fu_1839_p4) > signed(ap_const_lv30_0)) else "0";
    icmp38_fu_1883_p2 <= "1" when (signed(tmp_1170_fu_1873_p4) > signed(ap_const_lv29_0)) else "0";
    icmp39_fu_1941_p2 <= "1" when (signed(tmp_1171_fu_1931_p4) > signed(ap_const_lv28_0)) else "0";
    icmp40_fu_2147_p2 <= "1" when (signed(tmp_1172_fu_2137_p4) > signed(ap_const_lv23_0)) else "0";
    icmp_fu_1556_p2 <= "1" when (signed(tmp_1149_fu_1546_p4) > signed(ap_const_lv31_0)) else "0";

    input_buffer_V_read_assign_proc : process(input_buffer_V_empty_n, tmp_330_fu_2184_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_330_fu_2184_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (input_buffer_V_empty_n = ap_const_logic_1))) then 
            input_buffer_V_read <= ap_const_logic_1;
        else 
            input_buffer_V_read <= ap_const_logic_0;
        end if; 
    end process;

    mLoops_fu_1499_p3 <= 
        ap_const_lv32_10 when (tmp_298_fu_1493_p2(0) = '1') else 
        tmp_297_fu_1488_p2;
    nLoops_fu_1518_p3 <= 
        ap_const_lv32_2 when (tmp_300_fu_1512_p2(0) = '1') else 
        tmp_299_fu_1507_p2;
    or_cond_fu_2112_p2 <= (tmp_307_fu_2106_p2 and tmp_301_reg_3154);
    output_buffer_0_V_din <= 
        ap_const_lv16_0 when (grp_fu_1348_p2(0) = '1') else 
        acc_dat_reg_3709_pp0_iter11_reg;

    output_buffer_0_V_write_assign_proc : process(output_buffer_0_V_full_n, tmp_s_reg_3207, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_1) and (tmp_s_reg_3207 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (output_buffer_0_V_full_n = ap_const_logic_1))) then 
            output_buffer_0_V_write <= ap_const_logic_1;
        else 
            output_buffer_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_10_V_din <= 
        ap_const_lv16_0 when (grp_fu_1398_p2(0) = '1') else 
        acc_dat_10_reg_3779_pp0_iter11_reg;

    output_buffer_10_V_write_assign_proc : process(output_buffer_10_V_full_n, tmp_665_0_0_s_reg_3257, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_1) and (tmp_665_0_0_s_reg_3257 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (output_buffer_10_V_full_n = ap_const_logic_1))) then 
            output_buffer_10_V_write <= ap_const_logic_1;
        else 
            output_buffer_10_V_write <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_11_V_din <= 
        ap_const_lv16_0 when (grp_fu_1403_p2(0) = '1') else 
        acc_dat_11_reg_3786_pp0_iter11_reg;

    output_buffer_11_V_write_assign_proc : process(output_buffer_11_V_full_n, tmp_665_0_0_1_reg_3262, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_1) and (tmp_665_0_0_1_reg_3262 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (output_buffer_11_V_full_n = ap_const_logic_1))) then 
            output_buffer_11_V_write <= ap_const_logic_1;
        else 
            output_buffer_11_V_write <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_12_V_din <= 
        ap_const_lv16_0 when (grp_fu_1408_p2(0) = '1') else 
        acc_dat_12_reg_3793_pp0_iter11_reg;

    output_buffer_12_V_write_assign_proc : process(output_buffer_12_V_full_n, tmp_665_0_0_3_reg_3267, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_1) and (tmp_665_0_0_3_reg_3267 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (output_buffer_12_V_full_n = ap_const_logic_1))) then 
            output_buffer_12_V_write <= ap_const_logic_1;
        else 
            output_buffer_12_V_write <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_13_V_din <= 
        ap_const_lv16_0 when (grp_fu_1413_p2(0) = '1') else 
        acc_dat_13_reg_3800_pp0_iter11_reg;

    output_buffer_13_V_write_assign_proc : process(output_buffer_13_V_full_n, tmp_665_0_0_7_reg_3272, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_1) and (tmp_665_0_0_7_reg_3272 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (output_buffer_13_V_full_n = ap_const_logic_1))) then 
            output_buffer_13_V_write <= ap_const_logic_1;
        else 
            output_buffer_13_V_write <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_14_V_din <= 
        ap_const_lv16_0 when (grp_fu_1418_p2(0) = '1') else 
        acc_dat_14_reg_3807_pp0_iter11_reg;

    output_buffer_14_V_write_assign_proc : process(output_buffer_14_V_full_n, tmp_665_0_0_10_reg_3277, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_1) and (tmp_665_0_0_10_reg_3277 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (output_buffer_14_V_full_n = ap_const_logic_1))) then 
            output_buffer_14_V_write <= ap_const_logic_1;
        else 
            output_buffer_14_V_write <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_15_V_din <= 
        ap_const_lv16_0 when (grp_fu_1423_p2(0) = '1') else 
        acc_dat_s_reg_3814_pp0_iter11_reg;

    output_buffer_15_V_write_assign_proc : process(output_buffer_15_V_full_n, icmp39_reg_3282, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_1) and (icmp39_reg_3282 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (output_buffer_15_V_full_n = ap_const_logic_1))) then 
            output_buffer_15_V_write <= ap_const_logic_1;
        else 
            output_buffer_15_V_write <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_1_V_din <= 
        ap_const_lv16_0 when (grp_fu_1353_p2(0) = '1') else 
        acc_dat_1_reg_3716_pp0_iter11_reg;

    output_buffer_1_V_write_assign_proc : process(output_buffer_1_V_full_n, icmp36_reg_3212, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_1) and (icmp36_reg_3212 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (output_buffer_1_V_full_n = ap_const_logic_1))) then 
            output_buffer_1_V_write <= ap_const_logic_1;
        else 
            output_buffer_1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_2_V_din <= 
        ap_const_lv16_0 when (grp_fu_1358_p2(0) = '1') else 
        acc_dat_2_reg_3723_pp0_iter11_reg;

    output_buffer_2_V_write_assign_proc : process(output_buffer_2_V_full_n, tmp_665_0_0_2_reg_3217, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_1) and (tmp_665_0_0_2_reg_3217 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (output_buffer_2_V_full_n = ap_const_logic_1))) then 
            output_buffer_2_V_write <= ap_const_logic_1;
        else 
            output_buffer_2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_3_V_din <= 
        ap_const_lv16_0 when (grp_fu_1363_p2(0) = '1') else 
        acc_dat_3_reg_3730_pp0_iter11_reg;

    output_buffer_3_V_write_assign_proc : process(output_buffer_3_V_full_n, icmp37_reg_3222, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_1) and (icmp37_reg_3222 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (output_buffer_3_V_full_n = ap_const_logic_1))) then 
            output_buffer_3_V_write <= ap_const_logic_1;
        else 
            output_buffer_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_4_V_din <= 
        ap_const_lv16_0 when (grp_fu_1368_p2(0) = '1') else 
        acc_dat_4_reg_3737_pp0_iter11_reg;

    output_buffer_4_V_write_assign_proc : process(output_buffer_4_V_full_n, tmp_665_0_0_4_reg_3227, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_1) and (tmp_665_0_0_4_reg_3227 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (output_buffer_4_V_full_n = ap_const_logic_1))) then 
            output_buffer_4_V_write <= ap_const_logic_1;
        else 
            output_buffer_4_V_write <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_5_V_din <= 
        ap_const_lv16_0 when (grp_fu_1373_p2(0) = '1') else 
        acc_dat_5_reg_3744_pp0_iter11_reg;

    output_buffer_5_V_write_assign_proc : process(output_buffer_5_V_full_n, tmp_665_0_0_5_reg_3232, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_1) and (tmp_665_0_0_5_reg_3232 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (output_buffer_5_V_full_n = ap_const_logic_1))) then 
            output_buffer_5_V_write <= ap_const_logic_1;
        else 
            output_buffer_5_V_write <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_6_V_din <= 
        ap_const_lv16_0 when (grp_fu_1378_p2(0) = '1') else 
        acc_dat_6_reg_3751_pp0_iter11_reg;

    output_buffer_6_V_write_assign_proc : process(output_buffer_6_V_full_n, tmp_665_0_0_6_reg_3237, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_1) and (tmp_665_0_0_6_reg_3237 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (output_buffer_6_V_full_n = ap_const_logic_1))) then 
            output_buffer_6_V_write <= ap_const_logic_1;
        else 
            output_buffer_6_V_write <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_7_V_din <= 
        ap_const_lv16_0 when (grp_fu_1383_p2(0) = '1') else 
        acc_dat_7_reg_3758_pp0_iter11_reg;

    output_buffer_7_V_write_assign_proc : process(output_buffer_7_V_full_n, icmp38_reg_3242, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_1) and (icmp38_reg_3242 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (output_buffer_7_V_full_n = ap_const_logic_1))) then 
            output_buffer_7_V_write <= ap_const_logic_1;
        else 
            output_buffer_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_8_V_din <= 
        ap_const_lv16_0 when (grp_fu_1388_p2(0) = '1') else 
        acc_dat_8_reg_3765_pp0_iter11_reg;

    output_buffer_8_V_write_assign_proc : process(output_buffer_8_V_full_n, tmp_665_0_0_8_reg_3247, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_1) and (tmp_665_0_0_8_reg_3247 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (output_buffer_8_V_full_n = ap_const_logic_1))) then 
            output_buffer_8_V_write <= ap_const_logic_1;
        else 
            output_buffer_8_V_write <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_9_V_din <= 
        ap_const_lv16_0 when (grp_fu_1393_p2(0) = '1') else 
        acc_dat_9_reg_3772_pp0_iter11_reg;

    output_buffer_9_V_write_assign_proc : process(output_buffer_9_V_full_n, tmp_665_0_0_9_reg_3252, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_1) and (tmp_665_0_0_9_reg_3252 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (output_buffer_9_V_full_n = ap_const_logic_1))) then 
            output_buffer_9_V_write <= ap_const_logic_1;
        else 
            output_buffer_9_V_write <= ap_const_logic_0;
        end if; 
    end process;

    output_temp_0_address0 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);

    output_temp_0_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_temp_0_ce0 <= ap_const_logic_1;
        else 
            output_temp_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_0_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_0_ce1 <= ap_const_logic_1;
        else 
            output_temp_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_0_we1_assign_proc : process(tmp_s_reg_3207, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_0) and (tmp_s_reg_3207 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_0_we1 <= ap_const_logic_1;
        else 
            output_temp_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_temp_10_address0 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);

    output_temp_10_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_temp_10_ce0 <= ap_const_logic_1;
        else 
            output_temp_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_10_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_10_ce1 <= ap_const_logic_1;
        else 
            output_temp_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_10_we1_assign_proc : process(tmp_665_0_0_s_reg_3257, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_0) and (tmp_665_0_0_s_reg_3257 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_10_we1 <= ap_const_logic_1;
        else 
            output_temp_10_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_temp_11_address0 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);

    output_temp_11_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_temp_11_ce0 <= ap_const_logic_1;
        else 
            output_temp_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_11_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_11_ce1 <= ap_const_logic_1;
        else 
            output_temp_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_11_we1_assign_proc : process(tmp_665_0_0_1_reg_3262, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_0) and (tmp_665_0_0_1_reg_3262 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_11_we1 <= ap_const_logic_1;
        else 
            output_temp_11_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_temp_12_address0 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);

    output_temp_12_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_temp_12_ce0 <= ap_const_logic_1;
        else 
            output_temp_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_12_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_12_ce1 <= ap_const_logic_1;
        else 
            output_temp_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_12_we1_assign_proc : process(tmp_665_0_0_3_reg_3267, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_0) and (tmp_665_0_0_3_reg_3267 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_12_we1 <= ap_const_logic_1;
        else 
            output_temp_12_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_temp_13_address0 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);

    output_temp_13_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_temp_13_ce0 <= ap_const_logic_1;
        else 
            output_temp_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_13_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_13_ce1 <= ap_const_logic_1;
        else 
            output_temp_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_13_we1_assign_proc : process(tmp_665_0_0_7_reg_3272, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_0) and (tmp_665_0_0_7_reg_3272 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_13_we1 <= ap_const_logic_1;
        else 
            output_temp_13_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_temp_14_address0 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);

    output_temp_14_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_temp_14_ce0 <= ap_const_logic_1;
        else 
            output_temp_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_14_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_14_ce1 <= ap_const_logic_1;
        else 
            output_temp_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_14_we1_assign_proc : process(tmp_665_0_0_10_reg_3277, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_0) and (tmp_665_0_0_10_reg_3277 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_14_we1 <= ap_const_logic_1;
        else 
            output_temp_14_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_temp_15_address0 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);

    output_temp_15_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_temp_15_ce0 <= ap_const_logic_1;
        else 
            output_temp_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_15_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_15_ce1 <= ap_const_logic_1;
        else 
            output_temp_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_15_we1_assign_proc : process(icmp39_reg_3282, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_0) and (icmp39_reg_3282 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_15_we1 <= ap_const_logic_1;
        else 
            output_temp_15_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_temp_1_address0 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);

    output_temp_1_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_temp_1_ce0 <= ap_const_logic_1;
        else 
            output_temp_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_1_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_1_ce1 <= ap_const_logic_1;
        else 
            output_temp_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_1_we1_assign_proc : process(icmp36_reg_3212, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_0) and (icmp36_reg_3212 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_1_we1 <= ap_const_logic_1;
        else 
            output_temp_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_temp_2_address0 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);

    output_temp_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_temp_2_ce0 <= ap_const_logic_1;
        else 
            output_temp_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_2_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_2_ce1 <= ap_const_logic_1;
        else 
            output_temp_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_2_we1_assign_proc : process(tmp_665_0_0_2_reg_3217, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_0) and (tmp_665_0_0_2_reg_3217 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_2_we1 <= ap_const_logic_1;
        else 
            output_temp_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_temp_3_address0 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);

    output_temp_3_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_temp_3_ce0 <= ap_const_logic_1;
        else 
            output_temp_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_3_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_3_ce1 <= ap_const_logic_1;
        else 
            output_temp_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_3_we1_assign_proc : process(icmp37_reg_3222, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_0) and (icmp37_reg_3222 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_3_we1 <= ap_const_logic_1;
        else 
            output_temp_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_temp_4_address0 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);

    output_temp_4_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_temp_4_ce0 <= ap_const_logic_1;
        else 
            output_temp_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_4_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_4_ce1 <= ap_const_logic_1;
        else 
            output_temp_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_4_we1_assign_proc : process(tmp_665_0_0_4_reg_3227, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_0) and (tmp_665_0_0_4_reg_3227 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_4_we1 <= ap_const_logic_1;
        else 
            output_temp_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_temp_5_address0 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);

    output_temp_5_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_temp_5_ce0 <= ap_const_logic_1;
        else 
            output_temp_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_5_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_5_ce1 <= ap_const_logic_1;
        else 
            output_temp_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_5_we1_assign_proc : process(tmp_665_0_0_5_reg_3232, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_0) and (tmp_665_0_0_5_reg_3232 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_5_we1 <= ap_const_logic_1;
        else 
            output_temp_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_temp_6_address0 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);

    output_temp_6_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_temp_6_ce0 <= ap_const_logic_1;
        else 
            output_temp_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_6_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_6_ce1 <= ap_const_logic_1;
        else 
            output_temp_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_6_we1_assign_proc : process(tmp_665_0_0_6_reg_3237, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_0) and (tmp_665_0_0_6_reg_3237 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_6_we1 <= ap_const_logic_1;
        else 
            output_temp_6_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_temp_7_address0 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);

    output_temp_7_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_temp_7_ce0 <= ap_const_logic_1;
        else 
            output_temp_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_7_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_7_ce1 <= ap_const_logic_1;
        else 
            output_temp_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_7_we1_assign_proc : process(icmp38_reg_3242, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_0) and (icmp38_reg_3242 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_7_we1 <= ap_const_logic_1;
        else 
            output_temp_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_temp_8_address0 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);

    output_temp_8_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_temp_8_ce0 <= ap_const_logic_1;
        else 
            output_temp_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_8_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_8_ce1 <= ap_const_logic_1;
        else 
            output_temp_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_8_we1_assign_proc : process(tmp_665_0_0_8_reg_3247, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_0) and (tmp_665_0_0_8_reg_3247 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_8_we1 <= ap_const_logic_1;
        else 
            output_temp_8_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_temp_9_address0 <= tmp_605_cast_fu_2512_p1(8 - 1 downto 0);

    output_temp_9_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_temp_9_ce0 <= ap_const_logic_1;
        else 
            output_temp_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_9_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_9_ce1 <= ap_const_logic_1;
        else 
            output_temp_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_temp_9_we1_assign_proc : process(tmp_665_0_0_9_reg_3252, tmp_309_reg_3315, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_309_reg_3315 = ap_const_lv1_0) and (tmp_665_0_0_9_reg_3252 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            output_temp_9_we1 <= ap_const_logic_1;
        else 
            output_temp_9_we1 <= ap_const_logic_0;
        end if; 
    end process;

    p_pn_10_fu_2634_p3 <= 
        tmp_1140_fu_292 when (or_cond_reg_3295(0) = '1') else 
        output_temp_10_q0;
    p_pn_11_fu_2644_p3 <= 
        tmp_1141_fu_296 when (or_cond_reg_3295(0) = '1') else 
        output_temp_11_q0;
    p_pn_12_fu_2654_p3 <= 
        tmp_1142_fu_300 when (or_cond_reg_3295(0) = '1') else 
        output_temp_12_q0;
    p_pn_13_fu_2664_p3 <= 
        tmp_1143_fu_304 when (or_cond_reg_3295(0) = '1') else 
        output_temp_13_q0;
    p_pn_14_fu_2674_p3 <= 
        tmp_1144_fu_308 when (or_cond_reg_3295(0) = '1') else 
        output_temp_14_q0;
    p_pn_1_fu_2544_p3 <= 
        tmp_1131_fu_256 when (or_cond_reg_3295(0) = '1') else 
        output_temp_1_q0;
    p_pn_2_fu_2554_p3 <= 
        tmp_1132_fu_260 when (or_cond_reg_3295(0) = '1') else 
        output_temp_2_q0;
    p_pn_3_fu_2564_p3 <= 
        tmp_1133_fu_264 when (or_cond_reg_3295(0) = '1') else 
        output_temp_3_q0;
    p_pn_4_fu_2574_p3 <= 
        tmp_1134_fu_268 when (or_cond_reg_3295(0) = '1') else 
        output_temp_4_q0;
    p_pn_5_fu_2584_p3 <= 
        tmp_1135_fu_272 when (or_cond_reg_3295(0) = '1') else 
        output_temp_5_q0;
    p_pn_6_fu_2594_p3 <= 
        tmp_1136_fu_276 when (or_cond_reg_3295(0) = '1') else 
        output_temp_6_q0;
    p_pn_7_fu_2604_p3 <= 
        tmp_1137_fu_280 when (or_cond_reg_3295(0) = '1') else 
        output_temp_7_q0;
    p_pn_8_fu_2614_p3 <= 
        tmp_1138_fu_284 when (or_cond_reg_3295(0) = '1') else 
        output_temp_8_q0;
    p_pn_9_fu_2624_p3 <= 
        tmp_1139_fu_288 when (or_cond_reg_3295(0) = '1') else 
        output_temp_9_q0;
    p_pn_fu_2534_p3 <= 
        tmp_1130_fu_252 when (or_cond_reg_3295(0) = '1') else 
        output_temp_0_q0;
    p_pn_s_fu_2684_p3 <= 
        tmp_1145_fu_312 when (or_cond_reg_3295(0) = '1') else 
        output_temp_15_q0;
    rLoops_fu_1480_p3 <= 
        ap_const_lv32_10 when (tmp_1147_fu_1466_p3(0) = '1') else 
        tmp_296_fu_1474_p2;
    result_buffer_V_din <= data_buffer_V_dout;

    result_buffer_V_write_assign_proc : process(result_buffer_V_full_n, ap_CS_fsm_state5, tmp_303_fu_1951_p2, icmp40_fu_2147_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_0) and (icmp40_fu_2147_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (result_buffer_V_full_n = ap_const_logic_1))) then 
            result_buffer_V_write <= ap_const_logic_1;
        else 
            result_buffer_V_write <= ap_const_logic_0;
        end if; 
    end process;

    result_c_V_din <= tmp_1174_reg_3128;

    result_c_V_write_assign_proc : process(result_c_V_full_n, ap_CS_fsm_state5, tmp_303_fu_1951_p2, icmp40_fu_2147_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_0) and (icmp40_fu_2147_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (result_c_V_full_n = ap_const_logic_1))) then 
            result_c_V_write <= ap_const_logic_1;
        else 
            result_c_V_write <= ap_const_logic_0;
        end if; 
    end process;

    result_m_V_din <= tmp_1176_reg_3113;

    result_m_V_write_assign_proc : process(result_m_V_full_n, ap_CS_fsm_state5, tmp_303_fu_1951_p2, icmp40_fu_2147_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_0) and (icmp40_fu_2147_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (result_m_V_full_n = ap_const_logic_1))) then 
            result_m_V_write <= ap_const_logic_1;
        else 
            result_m_V_write <= ap_const_logic_0;
        end if; 
    end process;

    result_n_V_din <= tmp_1177_reg_3119;

    result_n_V_write_assign_proc : process(result_n_V_full_n, ap_CS_fsm_state5, tmp_303_fu_1951_p2, icmp40_fu_2147_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_0) and (icmp40_fu_2147_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (result_n_V_full_n = ap_const_logic_1))) then 
            result_n_V_write <= ap_const_logic_1;
        else 
            result_n_V_write <= ap_const_logic_0;
        end if; 
    end process;

    result_r_V_din <= tmp_1175_reg_3133;

    result_r_V_write_assign_proc : process(result_r_V_full_n, ap_CS_fsm_state5, tmp_303_fu_1951_p2, icmp40_fu_2147_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_0) and (icmp40_fu_2147_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (result_r_V_full_n = ap_const_logic_1))) then 
            result_r_V_write <= ap_const_logic_1;
        else 
            result_r_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tc_3_fu_2189_p2 <= std_logic_vector(unsigned(tc_reg_1177) + unsigned(ap_const_lv31_1));
    tc_cast_fu_2180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tc_reg_1177),32));
    tmp_1146_fu_1444_p3 <= data_c_V_dout(31 downto 31);
    tmp_1147_fu_1466_p3 <= data_r_V_dout(31 downto 31);
    tmp_1149_fu_1546_p4 <= mLoops_fu_1499_p3(31 downto 1);
    tmp_1152_fu_1586_p4 <= mLoops_fu_1499_p3(31 downto 2);
    tmp_1157_fu_1656_p4 <= mLoops_fu_1499_p3(31 downto 3);
    tmp_1166_fu_1786_p4 <= mLoops_fu_1499_p3(31 downto 4);
    tmp_1168_fu_1817_p4 <= mLoops_fu_1499_p3(31 downto 1);
    tmp_1169_fu_1839_p4 <= mLoops_fu_1499_p3(31 downto 2);
    tmp_1170_fu_1873_p4 <= mLoops_fu_1499_p3(31 downto 3);
    tmp_1171_fu_1931_p4 <= mLoops_fu_1499_p3(31 downto 4);
    tmp_1172_fu_2137_p4 <= tmp_305_fu_2133_p2(31 downto 9);
    tmp_1178_fu_2128_p1 <= (0=>data_buffer_V_dout, others=>'-');
    tmp_1194_fu_2168_p1 <= tr_reg_1166(6 - 1 downto 0);
    tmp_1195_fu_2199_p1 <= tc_reg_1177(10 - 1 downto 0);
    tmp_293_nbwritereq_fu_516_p3 <= (0=>result_buffer_V_full_n, others=>'-');
    tmp_294_fu_1452_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) - unsigned(data_c_V_dout));
    tmp_296_fu_1474_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) - unsigned(data_r_V_dout));
    tmp_297_fu_1488_p2 <= std_logic_vector(unsigned(ap_const_lv32_100) - unsigned(tmp_1176_reg_3113));
    tmp_298_fu_1493_p2 <= "1" when (signed(tmp_297_fu_1488_p2) > signed(ap_const_lv32_10)) else "0";
    tmp_299_fu_1507_p2 <= std_logic_vector(unsigned(ap_const_lv32_200) - unsigned(tmp_1177_reg_3119));
    tmp_300_fu_1512_p2 <= "1" when (signed(tmp_299_fu_1507_p2) > signed(ap_const_lv32_2)) else "0";
    tmp_301_fu_1526_p2 <= "1" when (signed(tmp_1177_reg_3119) < signed(ap_const_lv32_1)) else "0";
    tmp_302_fu_1531_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_0)) else "0";
    tmp_303_fu_1951_p2 <= "1" when (signed(tn_cast_fu_1947_p1) < signed(nLoops_reg_3148)) else "0";
    tmp_305_fu_2133_p2 <= std_logic_vector(unsigned(tmp_1177_reg_3119) + unsigned(nLoops_reg_3148));
    tmp_307_fu_2106_p2 <= "1" when (tn_reg_1155 = ap_const_lv2_0) else "0";
    tmp_308_fu_2117_p2 <= std_logic_vector(unsigned(tmp_1177_reg_3119) + unsigned(tn_cast_fu_1947_p1));
    tmp_309_fu_2122_p2 <= "1" when (signed(tmp_308_fu_2117_p2) > signed(ap_const_lv32_1FE)) else "0";
    tmp_310_fu_2157_p2 <= "1" when (signed(tr_cast_fu_2153_p1) < signed(rLoops_reg_3143)) else "0";
    tmp_330_fu_2184_p2 <= "1" when (signed(tc_cast_fu_2180_p1) < signed(cLoops_reg_3138)) else "0";
    tmp_479_fu_2203_p2 <= std_logic_vector(unsigned(tmp_604_cast_reg_3334) + unsigned(tmp_1195_fu_2199_p1));
    tmp_604_cast_fu_2172_p3 <= (tmp_1194_fu_2168_p1 & ap_const_lv4_0);
    tmp_605_cast_fu_2512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_479_reg_3368_pp0_iter3_reg),64));
    tmp_639_10_fu_1771_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_E)) else "0";
    tmp_639_1_fu_1726_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_B)) else "0";
    tmp_639_2_fu_1571_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_2)) else "0";
    tmp_639_3_fu_1741_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_C)) else "0";
    tmp_639_4_fu_1611_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_4)) else "0";
    tmp_639_5_fu_1626_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_5)) else "0";
    tmp_639_6_fu_1641_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_6)) else "0";
    tmp_639_7_fu_1756_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_D)) else "0";
    tmp_639_8_fu_1681_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_8)) else "0";
    tmp_639_9_fu_1696_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_9)) else "0";
    tmp_639_s_fu_1711_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_A)) else "0";
    tmp_665_0_0_10_fu_1925_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_E)) else "0";
    tmp_665_0_0_1_fu_1907_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_B)) else "0";
    tmp_665_0_0_2_fu_1833_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_2)) else "0";
    tmp_665_0_0_3_fu_1913_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_C)) else "0";
    tmp_665_0_0_4_fu_1855_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_4)) else "0";
    tmp_665_0_0_5_fu_1861_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_5)) else "0";
    tmp_665_0_0_6_fu_1867_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_6)) else "0";
    tmp_665_0_0_7_fu_1919_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_D)) else "0";
    tmp_665_0_0_8_fu_1889_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_8)) else "0";
    tmp_665_0_0_9_fu_1895_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_9)) else "0";
    tmp_665_0_0_s_fu_1901_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_A)) else "0";
    tmp_nbreadreq_fu_508_p3 <= (0=>data_buffer_V_empty_n, others=>'-');
    tmp_s_fu_1811_p2 <= "1" when (signed(mLoops_fu_1499_p3) > signed(ap_const_lv32_0)) else "0";
    tn_22_fu_1956_p2 <= std_logic_vector(unsigned(tn_reg_1155) + unsigned(ap_const_lv2_1));
    tn_cast_fu_1947_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tn_reg_1155),32));
    tr_8_fu_2162_p2 <= std_logic_vector(unsigned(tr_reg_1166) + unsigned(ap_const_lv31_1));
    tr_cast_fu_2153_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tr_reg_1166),32));

    weight_buffer_0_V_read_assign_proc : process(weight_buffer_0_V_empty_n, tmp_s_reg_3207, ap_CS_fsm_state5, tmp_303_fu_1951_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_s_reg_3207 = ap_const_lv1_1) and (weight_buffer_0_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            weight_buffer_0_V_read <= ap_const_logic_1;
        else 
            weight_buffer_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_10_V_read_assign_proc : process(weight_buffer_10_V_empty_n, tmp_665_0_0_s_reg_3257, ap_CS_fsm_state5, tmp_303_fu_1951_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_s_reg_3257 = ap_const_lv1_1) and (weight_buffer_10_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            weight_buffer_10_V_read <= ap_const_logic_1;
        else 
            weight_buffer_10_V_read <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_11_V_read_assign_proc : process(weight_buffer_11_V_empty_n, tmp_665_0_0_1_reg_3262, ap_CS_fsm_state5, tmp_303_fu_1951_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_1_reg_3262 = ap_const_lv1_1) and (weight_buffer_11_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            weight_buffer_11_V_read <= ap_const_logic_1;
        else 
            weight_buffer_11_V_read <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_12_V_read_assign_proc : process(weight_buffer_12_V_empty_n, tmp_665_0_0_3_reg_3267, ap_CS_fsm_state5, tmp_303_fu_1951_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_3_reg_3267 = ap_const_lv1_1) and (weight_buffer_12_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            weight_buffer_12_V_read <= ap_const_logic_1;
        else 
            weight_buffer_12_V_read <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_13_V_read_assign_proc : process(weight_buffer_13_V_empty_n, tmp_665_0_0_7_reg_3272, ap_CS_fsm_state5, tmp_303_fu_1951_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_7_reg_3272 = ap_const_lv1_1) and (weight_buffer_13_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            weight_buffer_13_V_read <= ap_const_logic_1;
        else 
            weight_buffer_13_V_read <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_14_V_read_assign_proc : process(weight_buffer_14_V_empty_n, tmp_665_0_0_10_reg_3277, ap_CS_fsm_state5, tmp_303_fu_1951_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_10_reg_3277 = ap_const_lv1_1) and (weight_buffer_14_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            weight_buffer_14_V_read <= ap_const_logic_1;
        else 
            weight_buffer_14_V_read <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_15_V_read_assign_proc : process(weight_buffer_15_V_empty_n, icmp39_reg_3282, ap_CS_fsm_state5, tmp_303_fu_1951_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (icmp39_reg_3282 = ap_const_lv1_1) and (weight_buffer_15_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            weight_buffer_15_V_read <= ap_const_logic_1;
        else 
            weight_buffer_15_V_read <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_1_V_read_assign_proc : process(weight_buffer_1_V_empty_n, icmp36_reg_3212, ap_CS_fsm_state5, tmp_303_fu_1951_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (icmp36_reg_3212 = ap_const_lv1_1) and (weight_buffer_1_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            weight_buffer_1_V_read <= ap_const_logic_1;
        else 
            weight_buffer_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_2_V_read_assign_proc : process(weight_buffer_2_V_empty_n, tmp_665_0_0_2_reg_3217, ap_CS_fsm_state5, tmp_303_fu_1951_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_2_reg_3217 = ap_const_lv1_1) and (weight_buffer_2_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            weight_buffer_2_V_read <= ap_const_logic_1;
        else 
            weight_buffer_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_3_V_read_assign_proc : process(weight_buffer_3_V_empty_n, icmp37_reg_3222, ap_CS_fsm_state5, tmp_303_fu_1951_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (icmp37_reg_3222 = ap_const_lv1_1) and (weight_buffer_3_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            weight_buffer_3_V_read <= ap_const_logic_1;
        else 
            weight_buffer_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_4_V_read_assign_proc : process(weight_buffer_4_V_empty_n, tmp_665_0_0_4_reg_3227, ap_CS_fsm_state5, tmp_303_fu_1951_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_4_reg_3227 = ap_const_lv1_1) and (weight_buffer_4_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            weight_buffer_4_V_read <= ap_const_logic_1;
        else 
            weight_buffer_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_5_V_read_assign_proc : process(weight_buffer_5_V_empty_n, tmp_665_0_0_5_reg_3232, ap_CS_fsm_state5, tmp_303_fu_1951_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_5_reg_3232 = ap_const_lv1_1) and (weight_buffer_5_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            weight_buffer_5_V_read <= ap_const_logic_1;
        else 
            weight_buffer_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_6_V_read_assign_proc : process(weight_buffer_6_V_empty_n, tmp_665_0_0_6_reg_3237, ap_CS_fsm_state5, tmp_303_fu_1951_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_6_reg_3237 = ap_const_lv1_1) and (weight_buffer_6_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            weight_buffer_6_V_read <= ap_const_logic_1;
        else 
            weight_buffer_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_7_V_read_assign_proc : process(weight_buffer_7_V_empty_n, icmp38_reg_3242, ap_CS_fsm_state5, tmp_303_fu_1951_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (icmp38_reg_3242 = ap_const_lv1_1) and (weight_buffer_7_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            weight_buffer_7_V_read <= ap_const_logic_1;
        else 
            weight_buffer_7_V_read <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_8_V_read_assign_proc : process(weight_buffer_8_V_empty_n, tmp_665_0_0_8_reg_3247, ap_CS_fsm_state5, tmp_303_fu_1951_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_8_reg_3247 = ap_const_lv1_1) and (weight_buffer_8_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            weight_buffer_8_V_read <= ap_const_logic_1;
        else 
            weight_buffer_8_V_read <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_9_V_read_assign_proc : process(weight_buffer_9_V_empty_n, tmp_665_0_0_9_reg_3252, ap_CS_fsm_state5, tmp_303_fu_1951_p2)
    begin
        if (((tmp_303_fu_1951_p2 = ap_const_lv1_1) and (tmp_665_0_0_9_reg_3252 = ap_const_lv1_1) and (weight_buffer_9_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            weight_buffer_9_V_read <= ap_const_logic_1;
        else 
            weight_buffer_9_V_read <= ap_const_logic_0;
        end if; 
    end process;

    weight_regs_0_0_2_we_fu_2304_p3 <= 
        weight_temp_0_0_fu_316 when (tmp_s_reg_3207(0) = '1') else 
        weight_temp_0_0_s_fu_384;
    weight_regs_10_0_2_w_fu_2384_p3 <= 
        weight_temp_10_0_fu_356 when (tmp_665_0_0_s_reg_3257(0) = '1') else 
        weight_temp_10_0_s_fu_424;
    weight_regs_11_0_2_w_fu_2392_p3 <= 
        weight_temp_11_0_fu_360 when (tmp_665_0_0_1_reg_3262(0) = '1') else 
        weight_temp_11_0_s_fu_428;
    weight_regs_12_0_2_w_fu_2400_p3 <= 
        weight_temp_12_0_fu_364 when (tmp_665_0_0_3_reg_3267(0) = '1') else 
        weight_temp_12_0_s_fu_432;
    weight_regs_13_0_2_w_fu_2408_p3 <= 
        weight_temp_13_0_fu_368 when (tmp_665_0_0_7_reg_3272(0) = '1') else 
        weight_temp_13_0_s_fu_436;
    weight_regs_14_0_2_w_fu_2416_p3 <= 
        weight_temp_14_0_fu_372 when (tmp_665_0_0_10_reg_3277(0) = '1') else 
        weight_temp_14_0_s_fu_440;
    weight_regs_15_0_2_w_fu_2424_p3 <= 
        weight_temp_15_0_fu_376 when (icmp39_reg_3282(0) = '1') else 
        weight_temp_15_0_s_fu_380;
    weight_regs_1_0_2_we_fu_2312_p3 <= 
        weight_temp_1_0_fu_320 when (icmp36_reg_3212(0) = '1') else 
        weight_temp_1_0_s_fu_388;
    weight_regs_2_0_2_we_fu_2320_p3 <= 
        weight_temp_2_0_fu_324 when (tmp_665_0_0_2_reg_3217(0) = '1') else 
        weight_temp_2_0_s_fu_392;
    weight_regs_3_0_2_we_fu_2328_p3 <= 
        weight_temp_3_0_fu_328 when (icmp37_reg_3222(0) = '1') else 
        weight_temp_3_0_s_fu_396;
    weight_regs_4_0_2_we_fu_2336_p3 <= 
        weight_temp_4_0_fu_332 when (tmp_665_0_0_4_reg_3227(0) = '1') else 
        weight_temp_4_0_s_fu_400;
    weight_regs_5_0_2_we_fu_2344_p3 <= 
        weight_temp_5_0_fu_336 when (tmp_665_0_0_5_reg_3232(0) = '1') else 
        weight_temp_5_0_s_fu_404;
    weight_regs_6_0_2_we_fu_2352_p3 <= 
        weight_temp_6_0_fu_340 when (tmp_665_0_0_6_reg_3237(0) = '1') else 
        weight_temp_6_0_s_fu_408;
    weight_regs_7_0_2_we_fu_2360_p3 <= 
        weight_temp_7_0_fu_344 when (icmp38_reg_3242(0) = '1') else 
        weight_temp_7_0_s_fu_412;
    weight_regs_8_0_2_we_fu_2368_p3 <= 
        weight_temp_8_0_fu_348 when (tmp_665_0_0_8_reg_3247(0) = '1') else 
        weight_temp_8_0_s_fu_416;
    weight_regs_9_0_2_we_fu_2376_p3 <= 
        weight_temp_9_0_fu_352 when (tmp_665_0_0_9_reg_3252(0) = '1') else 
        weight_temp_9_0_s_fu_420;
end behav;
