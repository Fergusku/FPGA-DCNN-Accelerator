// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module compute_pro_7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        input_buffer_V_dout,
        input_buffer_V_empty_n,
        input_buffer_V_read,
        weight_buffer_0_V_dout,
        weight_buffer_0_V_empty_n,
        weight_buffer_0_V_read,
        weight_buffer_1_V_dout,
        weight_buffer_1_V_empty_n,
        weight_buffer_1_V_read,
        weight_buffer_2_V_dout,
        weight_buffer_2_V_empty_n,
        weight_buffer_2_V_read,
        weight_buffer_3_V_dout,
        weight_buffer_3_V_empty_n,
        weight_buffer_3_V_read,
        weight_buffer_4_V_dout,
        weight_buffer_4_V_empty_n,
        weight_buffer_4_V_read,
        weight_buffer_5_V_dout,
        weight_buffer_5_V_empty_n,
        weight_buffer_5_V_read,
        weight_buffer_6_V_dout,
        weight_buffer_6_V_empty_n,
        weight_buffer_6_V_read,
        weight_buffer_7_V_dout,
        weight_buffer_7_V_empty_n,
        weight_buffer_7_V_read,
        weight_buffer_8_V_dout,
        weight_buffer_8_V_empty_n,
        weight_buffer_8_V_read,
        weight_buffer_9_V_dout,
        weight_buffer_9_V_empty_n,
        weight_buffer_9_V_read,
        weight_buffer_10_V_dout,
        weight_buffer_10_V_empty_n,
        weight_buffer_10_V_read,
        weight_buffer_11_V_dout,
        weight_buffer_11_V_empty_n,
        weight_buffer_11_V_read,
        weight_buffer_12_V_dout,
        weight_buffer_12_V_empty_n,
        weight_buffer_12_V_read,
        weight_buffer_13_V_dout,
        weight_buffer_13_V_empty_n,
        weight_buffer_13_V_read,
        weight_buffer_14_V_dout,
        weight_buffer_14_V_empty_n,
        weight_buffer_14_V_read,
        weight_buffer_15_V_dout,
        weight_buffer_15_V_empty_n,
        weight_buffer_15_V_read,
        beta_buffer_0_V_dout,
        beta_buffer_0_V_empty_n,
        beta_buffer_0_V_read,
        beta_buffer_1_V_dout,
        beta_buffer_1_V_empty_n,
        beta_buffer_1_V_read,
        beta_buffer_2_V_dout,
        beta_buffer_2_V_empty_n,
        beta_buffer_2_V_read,
        beta_buffer_3_V_dout,
        beta_buffer_3_V_empty_n,
        beta_buffer_3_V_read,
        beta_buffer_4_V_dout,
        beta_buffer_4_V_empty_n,
        beta_buffer_4_V_read,
        beta_buffer_5_V_dout,
        beta_buffer_5_V_empty_n,
        beta_buffer_5_V_read,
        beta_buffer_6_V_dout,
        beta_buffer_6_V_empty_n,
        beta_buffer_6_V_read,
        beta_buffer_7_V_dout,
        beta_buffer_7_V_empty_n,
        beta_buffer_7_V_read,
        beta_buffer_8_V_dout,
        beta_buffer_8_V_empty_n,
        beta_buffer_8_V_read,
        beta_buffer_9_V_dout,
        beta_buffer_9_V_empty_n,
        beta_buffer_9_V_read,
        beta_buffer_10_V_dout,
        beta_buffer_10_V_empty_n,
        beta_buffer_10_V_read,
        beta_buffer_11_V_dout,
        beta_buffer_11_V_empty_n,
        beta_buffer_11_V_read,
        beta_buffer_12_V_dout,
        beta_buffer_12_V_empty_n,
        beta_buffer_12_V_read,
        beta_buffer_13_V_dout,
        beta_buffer_13_V_empty_n,
        beta_buffer_13_V_read,
        beta_buffer_14_V_dout,
        beta_buffer_14_V_empty_n,
        beta_buffer_14_V_read,
        beta_buffer_15_V_dout,
        beta_buffer_15_V_empty_n,
        beta_buffer_15_V_read,
        output_buffer_0_V_din,
        output_buffer_0_V_full_n,
        output_buffer_0_V_write,
        output_buffer_1_V_din,
        output_buffer_1_V_full_n,
        output_buffer_1_V_write,
        output_buffer_2_V_din,
        output_buffer_2_V_full_n,
        output_buffer_2_V_write,
        output_buffer_3_V_din,
        output_buffer_3_V_full_n,
        output_buffer_3_V_write,
        output_buffer_4_V_din,
        output_buffer_4_V_full_n,
        output_buffer_4_V_write,
        output_buffer_5_V_din,
        output_buffer_5_V_full_n,
        output_buffer_5_V_write,
        output_buffer_6_V_din,
        output_buffer_6_V_full_n,
        output_buffer_6_V_write,
        output_buffer_7_V_din,
        output_buffer_7_V_full_n,
        output_buffer_7_V_write,
        output_buffer_8_V_din,
        output_buffer_8_V_full_n,
        output_buffer_8_V_write,
        output_buffer_9_V_din,
        output_buffer_9_V_full_n,
        output_buffer_9_V_write,
        output_buffer_10_V_din,
        output_buffer_10_V_full_n,
        output_buffer_10_V_write,
        output_buffer_11_V_din,
        output_buffer_11_V_full_n,
        output_buffer_11_V_write,
        output_buffer_12_V_din,
        output_buffer_12_V_full_n,
        output_buffer_12_V_write,
        output_buffer_13_V_din,
        output_buffer_13_V_full_n,
        output_buffer_13_V_write,
        output_buffer_14_V_din,
        output_buffer_14_V_full_n,
        output_buffer_14_V_write,
        output_buffer_15_V_din,
        output_buffer_15_V_full_n,
        output_buffer_15_V_write,
        data_buffer_V_dout,
        data_buffer_V_empty_n,
        data_buffer_V_read,
        result_buffer_V_din,
        result_buffer_V_full_n,
        result_buffer_V_write,
        data_c_V_dout,
        data_c_V_empty_n,
        data_c_V_read,
        data_r_V_dout,
        data_r_V_empty_n,
        data_r_V_read,
        data_m_V_dout,
        data_m_V_empty_n,
        data_m_V_read,
        data_n_V_dout,
        data_n_V_empty_n,
        data_n_V_read,
        result_c_V_din,
        result_c_V_full_n,
        result_c_V_write,
        result_r_V_din,
        result_r_V_full_n,
        result_r_V_write,
        result_m_V_din,
        result_m_V_full_n,
        result_m_V_write,
        result_n_V_din,
        result_n_V_full_n,
        result_n_V_write
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_pp0_stage0 = 8'd64;
parameter    ap_ST_fsm_state20 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] input_buffer_V_dout;
input   input_buffer_V_empty_n;
output   input_buffer_V_read;
input  [15:0] weight_buffer_0_V_dout;
input   weight_buffer_0_V_empty_n;
output   weight_buffer_0_V_read;
input  [15:0] weight_buffer_1_V_dout;
input   weight_buffer_1_V_empty_n;
output   weight_buffer_1_V_read;
input  [15:0] weight_buffer_2_V_dout;
input   weight_buffer_2_V_empty_n;
output   weight_buffer_2_V_read;
input  [15:0] weight_buffer_3_V_dout;
input   weight_buffer_3_V_empty_n;
output   weight_buffer_3_V_read;
input  [15:0] weight_buffer_4_V_dout;
input   weight_buffer_4_V_empty_n;
output   weight_buffer_4_V_read;
input  [15:0] weight_buffer_5_V_dout;
input   weight_buffer_5_V_empty_n;
output   weight_buffer_5_V_read;
input  [15:0] weight_buffer_6_V_dout;
input   weight_buffer_6_V_empty_n;
output   weight_buffer_6_V_read;
input  [15:0] weight_buffer_7_V_dout;
input   weight_buffer_7_V_empty_n;
output   weight_buffer_7_V_read;
input  [15:0] weight_buffer_8_V_dout;
input   weight_buffer_8_V_empty_n;
output   weight_buffer_8_V_read;
input  [15:0] weight_buffer_9_V_dout;
input   weight_buffer_9_V_empty_n;
output   weight_buffer_9_V_read;
input  [15:0] weight_buffer_10_V_dout;
input   weight_buffer_10_V_empty_n;
output   weight_buffer_10_V_read;
input  [15:0] weight_buffer_11_V_dout;
input   weight_buffer_11_V_empty_n;
output   weight_buffer_11_V_read;
input  [15:0] weight_buffer_12_V_dout;
input   weight_buffer_12_V_empty_n;
output   weight_buffer_12_V_read;
input  [15:0] weight_buffer_13_V_dout;
input   weight_buffer_13_V_empty_n;
output   weight_buffer_13_V_read;
input  [15:0] weight_buffer_14_V_dout;
input   weight_buffer_14_V_empty_n;
output   weight_buffer_14_V_read;
input  [15:0] weight_buffer_15_V_dout;
input   weight_buffer_15_V_empty_n;
output   weight_buffer_15_V_read;
input  [15:0] beta_buffer_0_V_dout;
input   beta_buffer_0_V_empty_n;
output   beta_buffer_0_V_read;
input  [15:0] beta_buffer_1_V_dout;
input   beta_buffer_1_V_empty_n;
output   beta_buffer_1_V_read;
input  [15:0] beta_buffer_2_V_dout;
input   beta_buffer_2_V_empty_n;
output   beta_buffer_2_V_read;
input  [15:0] beta_buffer_3_V_dout;
input   beta_buffer_3_V_empty_n;
output   beta_buffer_3_V_read;
input  [15:0] beta_buffer_4_V_dout;
input   beta_buffer_4_V_empty_n;
output   beta_buffer_4_V_read;
input  [15:0] beta_buffer_5_V_dout;
input   beta_buffer_5_V_empty_n;
output   beta_buffer_5_V_read;
input  [15:0] beta_buffer_6_V_dout;
input   beta_buffer_6_V_empty_n;
output   beta_buffer_6_V_read;
input  [15:0] beta_buffer_7_V_dout;
input   beta_buffer_7_V_empty_n;
output   beta_buffer_7_V_read;
input  [15:0] beta_buffer_8_V_dout;
input   beta_buffer_8_V_empty_n;
output   beta_buffer_8_V_read;
input  [15:0] beta_buffer_9_V_dout;
input   beta_buffer_9_V_empty_n;
output   beta_buffer_9_V_read;
input  [15:0] beta_buffer_10_V_dout;
input   beta_buffer_10_V_empty_n;
output   beta_buffer_10_V_read;
input  [15:0] beta_buffer_11_V_dout;
input   beta_buffer_11_V_empty_n;
output   beta_buffer_11_V_read;
input  [15:0] beta_buffer_12_V_dout;
input   beta_buffer_12_V_empty_n;
output   beta_buffer_12_V_read;
input  [15:0] beta_buffer_13_V_dout;
input   beta_buffer_13_V_empty_n;
output   beta_buffer_13_V_read;
input  [15:0] beta_buffer_14_V_dout;
input   beta_buffer_14_V_empty_n;
output   beta_buffer_14_V_read;
input  [15:0] beta_buffer_15_V_dout;
input   beta_buffer_15_V_empty_n;
output   beta_buffer_15_V_read;
output  [15:0] output_buffer_0_V_din;
input   output_buffer_0_V_full_n;
output   output_buffer_0_V_write;
output  [15:0] output_buffer_1_V_din;
input   output_buffer_1_V_full_n;
output   output_buffer_1_V_write;
output  [15:0] output_buffer_2_V_din;
input   output_buffer_2_V_full_n;
output   output_buffer_2_V_write;
output  [15:0] output_buffer_3_V_din;
input   output_buffer_3_V_full_n;
output   output_buffer_3_V_write;
output  [15:0] output_buffer_4_V_din;
input   output_buffer_4_V_full_n;
output   output_buffer_4_V_write;
output  [15:0] output_buffer_5_V_din;
input   output_buffer_5_V_full_n;
output   output_buffer_5_V_write;
output  [15:0] output_buffer_6_V_din;
input   output_buffer_6_V_full_n;
output   output_buffer_6_V_write;
output  [15:0] output_buffer_7_V_din;
input   output_buffer_7_V_full_n;
output   output_buffer_7_V_write;
output  [15:0] output_buffer_8_V_din;
input   output_buffer_8_V_full_n;
output   output_buffer_8_V_write;
output  [15:0] output_buffer_9_V_din;
input   output_buffer_9_V_full_n;
output   output_buffer_9_V_write;
output  [15:0] output_buffer_10_V_din;
input   output_buffer_10_V_full_n;
output   output_buffer_10_V_write;
output  [15:0] output_buffer_11_V_din;
input   output_buffer_11_V_full_n;
output   output_buffer_11_V_write;
output  [15:0] output_buffer_12_V_din;
input   output_buffer_12_V_full_n;
output   output_buffer_12_V_write;
output  [15:0] output_buffer_13_V_din;
input   output_buffer_13_V_full_n;
output   output_buffer_13_V_write;
output  [15:0] output_buffer_14_V_din;
input   output_buffer_14_V_full_n;
output   output_buffer_14_V_write;
output  [15:0] output_buffer_15_V_din;
input   output_buffer_15_V_full_n;
output   output_buffer_15_V_write;
input   data_buffer_V_dout;
input   data_buffer_V_empty_n;
output   data_buffer_V_read;
output   result_buffer_V_din;
input   result_buffer_V_full_n;
output   result_buffer_V_write;
input  [31:0] data_c_V_dout;
input   data_c_V_empty_n;
output   data_c_V_read;
input  [31:0] data_r_V_dout;
input   data_r_V_empty_n;
output   data_r_V_read;
input  [31:0] data_m_V_dout;
input   data_m_V_empty_n;
output   data_m_V_read;
input  [31:0] data_n_V_dout;
input   data_n_V_empty_n;
output   data_n_V_read;
output  [31:0] result_c_V_din;
input   result_c_V_full_n;
output   result_c_V_write;
output  [31:0] result_r_V_din;
input   result_r_V_full_n;
output   result_r_V_write;
output  [31:0] result_m_V_din;
input   result_m_V_full_n;
output   result_m_V_write;
output  [31:0] result_n_V_din;
input   result_n_V_full_n;
output   result_n_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_buffer_V_read;
reg weight_buffer_0_V_read;
reg weight_buffer_1_V_read;
reg weight_buffer_2_V_read;
reg weight_buffer_3_V_read;
reg weight_buffer_4_V_read;
reg weight_buffer_5_V_read;
reg weight_buffer_6_V_read;
reg weight_buffer_7_V_read;
reg weight_buffer_8_V_read;
reg weight_buffer_9_V_read;
reg weight_buffer_10_V_read;
reg weight_buffer_11_V_read;
reg weight_buffer_12_V_read;
reg weight_buffer_13_V_read;
reg weight_buffer_14_V_read;
reg weight_buffer_15_V_read;
reg beta_buffer_0_V_read;
reg beta_buffer_1_V_read;
reg beta_buffer_2_V_read;
reg beta_buffer_3_V_read;
reg beta_buffer_4_V_read;
reg beta_buffer_5_V_read;
reg beta_buffer_6_V_read;
reg beta_buffer_7_V_read;
reg beta_buffer_8_V_read;
reg beta_buffer_9_V_read;
reg beta_buffer_10_V_read;
reg beta_buffer_11_V_read;
reg beta_buffer_12_V_read;
reg beta_buffer_13_V_read;
reg beta_buffer_14_V_read;
reg beta_buffer_15_V_read;
reg output_buffer_0_V_write;
reg output_buffer_1_V_write;
reg output_buffer_2_V_write;
reg output_buffer_3_V_write;
reg output_buffer_4_V_write;
reg output_buffer_5_V_write;
reg output_buffer_6_V_write;
reg output_buffer_7_V_write;
reg output_buffer_8_V_write;
reg output_buffer_9_V_write;
reg output_buffer_10_V_write;
reg output_buffer_11_V_write;
reg output_buffer_12_V_write;
reg output_buffer_13_V_write;
reg output_buffer_14_V_write;
reg output_buffer_15_V_write;
reg data_buffer_V_read;
reg result_buffer_V_write;
reg data_c_V_read;
reg data_r_V_read;
reg data_m_V_read;
reg data_n_V_read;
reg result_c_V_write;
reg result_r_V_write;
reg result_m_V_write;
reg result_n_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] tc_reg_1179;
reg   [31:0] tmp_704_reg_3109;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_nbreadreq_fu_510_p3;
wire   [0:0] tmp_231_nbwritereq_fu_518_p3;
reg   [31:0] tmp_705_reg_3115;
reg   [31:0] tmp_706_reg_3121;
reg   [31:0] tmp_707_reg_3127;
wire   [31:0] cLoops_fu_1457_p3;
reg   [31:0] cLoops_reg_3136;
wire    ap_CS_fsm_state4;
wire   [31:0] rLoops_fu_1476_p3;
reg   [31:0] rLoops_reg_3141;
wire   [31:0] nLoops_fu_1514_p3;
reg   [31:0] nLoops_reg_3146;
wire   [0:0] tmp_239_fu_1522_p2;
reg   [0:0] tmp_239_reg_3152;
wire   [0:0] tmp_241_fu_1807_p2;
reg   [0:0] tmp_241_reg_3205;
wire   [0:0] icmp4_fu_1823_p2;
reg   [0:0] icmp4_reg_3210;
wire   [0:0] tmp_948_0_0_2_fu_1829_p2;
reg   [0:0] tmp_948_0_0_2_reg_3215;
wire   [0:0] icmp5_fu_1845_p2;
reg   [0:0] icmp5_reg_3220;
wire   [0:0] tmp_948_0_0_4_fu_1851_p2;
reg   [0:0] tmp_948_0_0_4_reg_3225;
wire   [0:0] tmp_948_0_0_5_fu_1857_p2;
reg   [0:0] tmp_948_0_0_5_reg_3230;
wire   [0:0] tmp_948_0_0_6_fu_1863_p2;
reg   [0:0] tmp_948_0_0_6_reg_3235;
wire   [0:0] icmp6_fu_1879_p2;
reg   [0:0] icmp6_reg_3240;
wire   [0:0] tmp_948_0_0_8_fu_1885_p2;
reg   [0:0] tmp_948_0_0_8_reg_3245;
wire   [0:0] tmp_948_0_0_9_fu_1891_p2;
reg   [0:0] tmp_948_0_0_9_reg_3250;
wire   [0:0] tmp_948_0_0_s_fu_1897_p2;
reg   [0:0] tmp_948_0_0_s_reg_3255;
wire   [0:0] tmp_948_0_0_1_fu_1903_p2;
reg   [0:0] tmp_948_0_0_1_reg_3260;
wire   [0:0] tmp_948_0_0_3_fu_1909_p2;
reg   [0:0] tmp_948_0_0_3_reg_3265;
wire   [0:0] tmp_948_0_0_7_fu_1915_p2;
reg   [0:0] tmp_948_0_0_7_reg_3270;
wire   [0:0] tmp_948_0_0_10_fu_1921_p2;
reg   [0:0] tmp_948_0_0_10_reg_3275;
wire   [0:0] icmp7_fu_1937_p2;
reg   [0:0] icmp7_reg_3280;
wire   [1:0] tn_18_fu_1952_p2;
reg   [1:0] tn_18_reg_3288;
wire    ap_CS_fsm_state5;
wire   [0:0] or_cond_fu_2108_p2;
reg   [0:0] or_cond_reg_3293;
wire   [0:0] tmp_242_fu_1947_p2;
wire   [0:0] tmp_247_fu_2118_p2;
reg   [0:0] tmp_247_reg_3313;
wire   [0:0] tmp_248_fu_2153_p2;
wire    ap_CS_fsm_state6;
wire   [4:0] tr_9_fu_2158_p2;
reg   [4:0] tr_9_reg_3327;
wire   [9:0] tmp_532_cast_fu_2172_p1;
reg   [9:0] tmp_532_cast_reg_3332;
wire   [0:0] tmp_251_fu_2180_p2;
reg   [0:0] tmp_251_reg_3337;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state7_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state11_pp0_stage0_iter4;
wire    ap_block_state12_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state14_pp0_stage0_iter7;
wire    ap_block_state15_pp0_stage0_iter8;
wire    ap_block_state16_pp0_stage0_iter9;
wire    ap_block_state17_pp0_stage0_iter10;
wire    ap_block_state18_pp0_stage0_iter11;
wire    ap_block_state19_pp0_stage0_iter12;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] tc_2_fu_2185_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [15:0] tmp_740_reg_3346;
wire   [9:0] tmp_253_fu_2199_p2;
reg   [9:0] tmp_253_reg_3366;
reg   [9:0] tmp_253_reg_3366_pp0_iter1_reg;
reg   [9:0] tmp_253_reg_3366_pp0_iter2_reg;
reg   [9:0] tmp_253_reg_3366_pp0_iter3_reg;
wire   [15:0] weight_regs_0_0_2_we_fu_2300_p3;
wire   [15:0] weight_regs_1_0_2_we_fu_2308_p3;
wire   [15:0] weight_regs_2_0_2_we_fu_2316_p3;
wire   [15:0] weight_regs_3_0_2_we_fu_2324_p3;
wire   [15:0] weight_regs_4_0_2_we_fu_2332_p3;
wire   [15:0] weight_regs_5_0_2_we_fu_2340_p3;
wire   [15:0] weight_regs_6_0_2_we_fu_2348_p3;
wire   [15:0] weight_regs_7_0_2_we_fu_2356_p3;
wire   [15:0] weight_regs_8_0_2_we_fu_2364_p3;
wire   [15:0] weight_regs_9_0_2_we_fu_2372_p3;
wire   [15:0] weight_regs_10_0_2_w_fu_2380_p3;
wire   [15:0] weight_regs_11_0_2_w_fu_2388_p3;
wire   [15:0] weight_regs_12_0_2_w_fu_2396_p3;
wire   [15:0] weight_regs_13_0_2_w_fu_2404_p3;
wire   [15:0] weight_regs_14_0_2_w_fu_2412_p3;
wire   [15:0] weight_regs_15_0_2_w_fu_2420_p3;
reg   [7:0] output_temp_0_addr_reg_3451;
reg   [7:0] output_temp_0_addr_reg_3451_pp0_iter5_reg;
reg   [7:0] output_temp_0_addr_reg_3451_pp0_iter6_reg;
reg   [7:0] output_temp_0_addr_reg_3451_pp0_iter7_reg;
reg   [7:0] output_temp_0_addr_reg_3451_pp0_iter8_reg;
reg   [7:0] output_temp_0_addr_reg_3451_pp0_iter9_reg;
reg   [7:0] output_temp_1_addr_reg_3457;
reg   [7:0] output_temp_1_addr_reg_3457_pp0_iter5_reg;
reg   [7:0] output_temp_1_addr_reg_3457_pp0_iter6_reg;
reg   [7:0] output_temp_1_addr_reg_3457_pp0_iter7_reg;
reg   [7:0] output_temp_1_addr_reg_3457_pp0_iter8_reg;
reg   [7:0] output_temp_1_addr_reg_3457_pp0_iter9_reg;
reg   [7:0] output_temp_2_addr_reg_3463;
reg   [7:0] output_temp_2_addr_reg_3463_pp0_iter5_reg;
reg   [7:0] output_temp_2_addr_reg_3463_pp0_iter6_reg;
reg   [7:0] output_temp_2_addr_reg_3463_pp0_iter7_reg;
reg   [7:0] output_temp_2_addr_reg_3463_pp0_iter8_reg;
reg   [7:0] output_temp_2_addr_reg_3463_pp0_iter9_reg;
reg   [7:0] output_temp_3_addr_reg_3469;
reg   [7:0] output_temp_3_addr_reg_3469_pp0_iter5_reg;
reg   [7:0] output_temp_3_addr_reg_3469_pp0_iter6_reg;
reg   [7:0] output_temp_3_addr_reg_3469_pp0_iter7_reg;
reg   [7:0] output_temp_3_addr_reg_3469_pp0_iter8_reg;
reg   [7:0] output_temp_3_addr_reg_3469_pp0_iter9_reg;
reg   [7:0] output_temp_4_addr_reg_3475;
reg   [7:0] output_temp_4_addr_reg_3475_pp0_iter5_reg;
reg   [7:0] output_temp_4_addr_reg_3475_pp0_iter6_reg;
reg   [7:0] output_temp_4_addr_reg_3475_pp0_iter7_reg;
reg   [7:0] output_temp_4_addr_reg_3475_pp0_iter8_reg;
reg   [7:0] output_temp_4_addr_reg_3475_pp0_iter9_reg;
reg   [7:0] output_temp_5_addr_reg_3481;
reg   [7:0] output_temp_5_addr_reg_3481_pp0_iter5_reg;
reg   [7:0] output_temp_5_addr_reg_3481_pp0_iter6_reg;
reg   [7:0] output_temp_5_addr_reg_3481_pp0_iter7_reg;
reg   [7:0] output_temp_5_addr_reg_3481_pp0_iter8_reg;
reg   [7:0] output_temp_5_addr_reg_3481_pp0_iter9_reg;
reg   [7:0] output_temp_6_addr_reg_3487;
reg   [7:0] output_temp_6_addr_reg_3487_pp0_iter5_reg;
reg   [7:0] output_temp_6_addr_reg_3487_pp0_iter6_reg;
reg   [7:0] output_temp_6_addr_reg_3487_pp0_iter7_reg;
reg   [7:0] output_temp_6_addr_reg_3487_pp0_iter8_reg;
reg   [7:0] output_temp_6_addr_reg_3487_pp0_iter9_reg;
reg   [7:0] output_temp_7_addr_reg_3493;
reg   [7:0] output_temp_7_addr_reg_3493_pp0_iter5_reg;
reg   [7:0] output_temp_7_addr_reg_3493_pp0_iter6_reg;
reg   [7:0] output_temp_7_addr_reg_3493_pp0_iter7_reg;
reg   [7:0] output_temp_7_addr_reg_3493_pp0_iter8_reg;
reg   [7:0] output_temp_7_addr_reg_3493_pp0_iter9_reg;
reg   [7:0] output_temp_8_addr_reg_3499;
reg   [7:0] output_temp_8_addr_reg_3499_pp0_iter5_reg;
reg   [7:0] output_temp_8_addr_reg_3499_pp0_iter6_reg;
reg   [7:0] output_temp_8_addr_reg_3499_pp0_iter7_reg;
reg   [7:0] output_temp_8_addr_reg_3499_pp0_iter8_reg;
reg   [7:0] output_temp_8_addr_reg_3499_pp0_iter9_reg;
reg   [7:0] output_temp_9_addr_reg_3505;
reg   [7:0] output_temp_9_addr_reg_3505_pp0_iter5_reg;
reg   [7:0] output_temp_9_addr_reg_3505_pp0_iter6_reg;
reg   [7:0] output_temp_9_addr_reg_3505_pp0_iter7_reg;
reg   [7:0] output_temp_9_addr_reg_3505_pp0_iter8_reg;
reg   [7:0] output_temp_9_addr_reg_3505_pp0_iter9_reg;
reg   [7:0] output_temp_10_addr_reg_3511;
reg   [7:0] output_temp_10_addr_reg_3511_pp0_iter5_reg;
reg   [7:0] output_temp_10_addr_reg_3511_pp0_iter6_reg;
reg   [7:0] output_temp_10_addr_reg_3511_pp0_iter7_reg;
reg   [7:0] output_temp_10_addr_reg_3511_pp0_iter8_reg;
reg   [7:0] output_temp_10_addr_reg_3511_pp0_iter9_reg;
reg   [7:0] output_temp_11_addr_reg_3517;
reg   [7:0] output_temp_11_addr_reg_3517_pp0_iter5_reg;
reg   [7:0] output_temp_11_addr_reg_3517_pp0_iter6_reg;
reg   [7:0] output_temp_11_addr_reg_3517_pp0_iter7_reg;
reg   [7:0] output_temp_11_addr_reg_3517_pp0_iter8_reg;
reg   [7:0] output_temp_11_addr_reg_3517_pp0_iter9_reg;
reg   [7:0] output_temp_12_addr_reg_3523;
reg   [7:0] output_temp_12_addr_reg_3523_pp0_iter5_reg;
reg   [7:0] output_temp_12_addr_reg_3523_pp0_iter6_reg;
reg   [7:0] output_temp_12_addr_reg_3523_pp0_iter7_reg;
reg   [7:0] output_temp_12_addr_reg_3523_pp0_iter8_reg;
reg   [7:0] output_temp_12_addr_reg_3523_pp0_iter9_reg;
reg   [7:0] output_temp_13_addr_reg_3529;
reg   [7:0] output_temp_13_addr_reg_3529_pp0_iter5_reg;
reg   [7:0] output_temp_13_addr_reg_3529_pp0_iter6_reg;
reg   [7:0] output_temp_13_addr_reg_3529_pp0_iter7_reg;
reg   [7:0] output_temp_13_addr_reg_3529_pp0_iter8_reg;
reg   [7:0] output_temp_13_addr_reg_3529_pp0_iter9_reg;
reg   [7:0] output_temp_14_addr_reg_3535;
reg   [7:0] output_temp_14_addr_reg_3535_pp0_iter5_reg;
reg   [7:0] output_temp_14_addr_reg_3535_pp0_iter6_reg;
reg   [7:0] output_temp_14_addr_reg_3535_pp0_iter7_reg;
reg   [7:0] output_temp_14_addr_reg_3535_pp0_iter8_reg;
reg   [7:0] output_temp_14_addr_reg_3535_pp0_iter9_reg;
reg   [7:0] output_temp_15_addr_reg_3541;
reg   [7:0] output_temp_15_addr_reg_3541_pp0_iter5_reg;
reg   [7:0] output_temp_15_addr_reg_3541_pp0_iter6_reg;
reg   [7:0] output_temp_15_addr_reg_3541_pp0_iter7_reg;
reg   [7:0] output_temp_15_addr_reg_3541_pp0_iter8_reg;
reg   [7:0] output_temp_15_addr_reg_3541_pp0_iter9_reg;
wire   [15:0] grp_mac_1_1_s_fu_1190_ap_return;
reg   [15:0] tmp_254_reg_3547;
wire   [15:0] p_pn_fu_2530_p3;
reg   [15:0] p_pn_reg_3552;
wire   [15:0] grp_mac_1_1_s_fu_1196_ap_return;
reg   [15:0] tmp_258_reg_3557;
wire   [15:0] p_pn_1_fu_2540_p3;
reg   [15:0] p_pn_1_reg_3562;
wire   [15:0] grp_mac_1_1_s_fu_1202_ap_return;
reg   [15:0] tmp_261_reg_3567;
wire   [15:0] p_pn_2_fu_2550_p3;
reg   [15:0] p_pn_2_reg_3572;
wire   [15:0] grp_mac_1_1_s_fu_1208_ap_return;
reg   [15:0] tmp_264_reg_3577;
wire   [15:0] p_pn_3_fu_2560_p3;
reg   [15:0] p_pn_3_reg_3582;
wire   [15:0] grp_mac_1_1_s_fu_1214_ap_return;
reg   [15:0] tmp_267_reg_3587;
wire   [15:0] p_pn_4_fu_2570_p3;
reg   [15:0] p_pn_4_reg_3592;
wire   [15:0] grp_mac_1_1_s_fu_1220_ap_return;
reg   [15:0] tmp_270_reg_3597;
wire   [15:0] p_pn_5_fu_2580_p3;
reg   [15:0] p_pn_5_reg_3602;
wire   [15:0] grp_mac_1_1_s_fu_1226_ap_return;
reg   [15:0] tmp_273_reg_3607;
wire   [15:0] p_pn_6_fu_2590_p3;
reg   [15:0] p_pn_6_reg_3612;
wire   [15:0] grp_mac_1_1_s_fu_1232_ap_return;
reg   [15:0] tmp_276_reg_3617;
wire   [15:0] p_pn_7_fu_2600_p3;
reg   [15:0] p_pn_7_reg_3622;
wire   [15:0] grp_mac_1_1_s_fu_1238_ap_return;
reg   [15:0] tmp_279_reg_3627;
wire   [15:0] p_pn_8_fu_2610_p3;
reg   [15:0] p_pn_8_reg_3632;
wire   [15:0] grp_mac_1_1_s_fu_1244_ap_return;
reg   [15:0] tmp_282_reg_3637;
wire   [15:0] p_pn_9_fu_2620_p3;
reg   [15:0] p_pn_9_reg_3642;
wire   [15:0] grp_mac_1_1_s_fu_1250_ap_return;
reg   [15:0] tmp_285_reg_3647;
wire   [15:0] p_pn_10_fu_2630_p3;
reg   [15:0] p_pn_10_reg_3652;
wire   [15:0] grp_mac_1_1_s_fu_1256_ap_return;
reg   [15:0] tmp_288_reg_3657;
wire   [15:0] p_pn_11_fu_2640_p3;
reg   [15:0] p_pn_11_reg_3662;
wire   [15:0] grp_mac_1_1_s_fu_1262_ap_return;
reg   [15:0] tmp_291_reg_3667;
wire   [15:0] p_pn_12_fu_2650_p3;
reg   [15:0] p_pn_12_reg_3672;
wire   [15:0] grp_mac_1_1_s_fu_1268_ap_return;
reg   [15:0] tmp_294_reg_3677;
wire   [15:0] p_pn_13_fu_2660_p3;
reg   [15:0] p_pn_13_reg_3682;
wire   [15:0] grp_mac_1_1_s_fu_1274_ap_return;
reg   [15:0] tmp_297_reg_3687;
wire   [15:0] p_pn_14_fu_2670_p3;
reg   [15:0] p_pn_14_reg_3692;
wire   [15:0] grp_mac_1_1_s_fu_1280_ap_return;
reg   [15:0] tmp_300_reg_3697;
wire   [15:0] p_pn_s_fu_2680_p3;
reg   [15:0] p_pn_s_reg_3702;
wire   [15:0] grp_fu_1286_p2;
reg   [15:0] acc_dat_reg_3707;
reg   [15:0] acc_dat_reg_3707_pp0_iter10_reg;
reg   [15:0] acc_dat_reg_3707_pp0_iter11_reg;
wire   [15:0] grp_fu_1290_p2;
reg   [15:0] acc_dat_1_reg_3714;
reg   [15:0] acc_dat_1_reg_3714_pp0_iter10_reg;
reg   [15:0] acc_dat_1_reg_3714_pp0_iter11_reg;
wire   [15:0] grp_fu_1294_p2;
reg   [15:0] acc_dat_2_reg_3721;
reg   [15:0] acc_dat_2_reg_3721_pp0_iter10_reg;
reg   [15:0] acc_dat_2_reg_3721_pp0_iter11_reg;
wire   [15:0] grp_fu_1298_p2;
reg   [15:0] acc_dat_3_reg_3728;
reg   [15:0] acc_dat_3_reg_3728_pp0_iter10_reg;
reg   [15:0] acc_dat_3_reg_3728_pp0_iter11_reg;
wire   [15:0] grp_fu_1302_p2;
reg   [15:0] acc_dat_4_reg_3735;
reg   [15:0] acc_dat_4_reg_3735_pp0_iter10_reg;
reg   [15:0] acc_dat_4_reg_3735_pp0_iter11_reg;
wire   [15:0] grp_fu_1306_p2;
reg   [15:0] acc_dat_5_reg_3742;
reg   [15:0] acc_dat_5_reg_3742_pp0_iter10_reg;
reg   [15:0] acc_dat_5_reg_3742_pp0_iter11_reg;
wire   [15:0] grp_fu_1310_p2;
reg   [15:0] acc_dat_6_reg_3749;
reg   [15:0] acc_dat_6_reg_3749_pp0_iter10_reg;
reg   [15:0] acc_dat_6_reg_3749_pp0_iter11_reg;
wire   [15:0] grp_fu_1314_p2;
reg   [15:0] acc_dat_7_reg_3756;
reg   [15:0] acc_dat_7_reg_3756_pp0_iter10_reg;
reg   [15:0] acc_dat_7_reg_3756_pp0_iter11_reg;
wire   [15:0] grp_fu_1318_p2;
reg   [15:0] acc_dat_8_reg_3763;
reg   [15:0] acc_dat_8_reg_3763_pp0_iter10_reg;
reg   [15:0] acc_dat_8_reg_3763_pp0_iter11_reg;
wire   [15:0] grp_fu_1322_p2;
reg   [15:0] acc_dat_9_reg_3770;
reg   [15:0] acc_dat_9_reg_3770_pp0_iter10_reg;
reg   [15:0] acc_dat_9_reg_3770_pp0_iter11_reg;
wire   [15:0] grp_fu_1326_p2;
reg   [15:0] acc_dat_10_reg_3777;
reg   [15:0] acc_dat_10_reg_3777_pp0_iter10_reg;
reg   [15:0] acc_dat_10_reg_3777_pp0_iter11_reg;
wire   [15:0] grp_fu_1330_p2;
reg   [15:0] acc_dat_11_reg_3784;
reg   [15:0] acc_dat_11_reg_3784_pp0_iter10_reg;
reg   [15:0] acc_dat_11_reg_3784_pp0_iter11_reg;
wire   [15:0] grp_fu_1334_p2;
reg   [15:0] acc_dat_12_reg_3791;
reg   [15:0] acc_dat_12_reg_3791_pp0_iter10_reg;
reg   [15:0] acc_dat_12_reg_3791_pp0_iter11_reg;
wire   [15:0] grp_fu_1338_p2;
reg   [15:0] acc_dat_13_reg_3798;
reg   [15:0] acc_dat_13_reg_3798_pp0_iter10_reg;
reg   [15:0] acc_dat_13_reg_3798_pp0_iter11_reg;
wire   [15:0] grp_fu_1342_p2;
reg   [15:0] acc_dat_14_reg_3805;
reg   [15:0] acc_dat_14_reg_3805_pp0_iter10_reg;
reg   [15:0] acc_dat_14_reg_3805_pp0_iter11_reg;
wire   [15:0] grp_fu_1346_p2;
reg   [15:0] acc_dat_s_reg_3812;
reg   [15:0] acc_dat_s_reg_3812_pp0_iter10_reg;
reg   [15:0] acc_dat_s_reg_3812_pp0_iter11_reg;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state7;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
wire   [7:0] output_temp_0_address0;
reg    output_temp_0_ce0;
wire   [15:0] output_temp_0_q0;
reg    output_temp_0_ce1;
reg    output_temp_0_we1;
wire   [7:0] output_temp_1_address0;
reg    output_temp_1_ce0;
wire   [15:0] output_temp_1_q0;
reg    output_temp_1_ce1;
reg    output_temp_1_we1;
wire   [7:0] output_temp_2_address0;
reg    output_temp_2_ce0;
wire   [15:0] output_temp_2_q0;
reg    output_temp_2_ce1;
reg    output_temp_2_we1;
wire   [7:0] output_temp_3_address0;
reg    output_temp_3_ce0;
wire   [15:0] output_temp_3_q0;
reg    output_temp_3_ce1;
reg    output_temp_3_we1;
wire   [7:0] output_temp_4_address0;
reg    output_temp_4_ce0;
wire   [15:0] output_temp_4_q0;
reg    output_temp_4_ce1;
reg    output_temp_4_we1;
wire   [7:0] output_temp_5_address0;
reg    output_temp_5_ce0;
wire   [15:0] output_temp_5_q0;
reg    output_temp_5_ce1;
reg    output_temp_5_we1;
wire   [7:0] output_temp_6_address0;
reg    output_temp_6_ce0;
wire   [15:0] output_temp_6_q0;
reg    output_temp_6_ce1;
reg    output_temp_6_we1;
wire   [7:0] output_temp_7_address0;
reg    output_temp_7_ce0;
wire   [15:0] output_temp_7_q0;
reg    output_temp_7_ce1;
reg    output_temp_7_we1;
wire   [7:0] output_temp_8_address0;
reg    output_temp_8_ce0;
wire   [15:0] output_temp_8_q0;
reg    output_temp_8_ce1;
reg    output_temp_8_we1;
wire   [7:0] output_temp_9_address0;
reg    output_temp_9_ce0;
wire   [15:0] output_temp_9_q0;
reg    output_temp_9_ce1;
reg    output_temp_9_we1;
wire   [7:0] output_temp_10_address0;
reg    output_temp_10_ce0;
wire   [15:0] output_temp_10_q0;
reg    output_temp_10_ce1;
reg    output_temp_10_we1;
wire   [7:0] output_temp_11_address0;
reg    output_temp_11_ce0;
wire   [15:0] output_temp_11_q0;
reg    output_temp_11_ce1;
reg    output_temp_11_we1;
wire   [7:0] output_temp_12_address0;
reg    output_temp_12_ce0;
wire   [15:0] output_temp_12_q0;
reg    output_temp_12_ce1;
reg    output_temp_12_we1;
wire   [7:0] output_temp_13_address0;
reg    output_temp_13_ce0;
wire   [15:0] output_temp_13_q0;
reg    output_temp_13_ce1;
reg    output_temp_13_we1;
wire   [7:0] output_temp_14_address0;
reg    output_temp_14_ce0;
wire   [15:0] output_temp_14_q0;
reg    output_temp_14_ce1;
reg    output_temp_14_we1;
wire   [7:0] output_temp_15_address0;
reg    output_temp_15_ce0;
wire   [15:0] output_temp_15_q0;
reg    output_temp_15_ce1;
reg    output_temp_15_we1;
wire   [15:0] grp_mac_1_1_s_fu_1190_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1196_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1202_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1208_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1214_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1220_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1226_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1232_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1238_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1244_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1250_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1256_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1262_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1268_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1274_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1280_weight_regs_read;
reg   [1:0] tn_reg_1157;
reg   [4:0] tr_reg_1168;
wire    ap_CS_fsm_state20;
wire    ap_block_pp0_stage0;
wire   [63:0] tmp_534_cast_fu_2508_p1;
wire   [0:0] tmp_240_fu_1527_p2;
wire   [0:0] icmp_fu_1552_p2;
wire   [0:0] tmp_922_2_fu_1567_p2;
wire   [0:0] icmp1_fu_1592_p2;
wire   [0:0] tmp_922_4_fu_1607_p2;
wire   [0:0] tmp_922_5_fu_1622_p2;
wire   [0:0] tmp_922_6_fu_1637_p2;
wire   [0:0] icmp2_fu_1662_p2;
wire   [0:0] tmp_922_8_fu_1677_p2;
wire   [0:0] tmp_922_9_fu_1692_p2;
wire   [0:0] tmp_922_s_fu_1707_p2;
wire   [0:0] tmp_922_1_fu_1722_p2;
wire   [0:0] tmp_922_3_fu_1737_p2;
wire   [0:0] tmp_922_7_fu_1752_p2;
wire   [0:0] tmp_922_10_fu_1767_p2;
wire   [0:0] icmp3_fu_1792_p2;
wire   [0:0] icmp8_fu_2143_p2;
wire   [0:0] tmp_708_fu_2124_p1;
wire    ap_block_pp0_stage0_01001;
reg   [15:0] tmp_662_fu_254;
reg   [15:0] tmp_663_fu_258;
reg   [15:0] tmp_664_fu_262;
reg   [15:0] tmp_665_fu_266;
reg   [15:0] tmp_666_fu_270;
reg   [15:0] tmp_667_fu_274;
reg   [15:0] tmp_668_fu_278;
reg   [15:0] tmp_669_fu_282;
reg   [15:0] tmp_670_fu_286;
reg   [15:0] tmp_671_fu_290;
reg   [15:0] tmp_672_fu_294;
reg   [15:0] tmp_673_fu_298;
reg   [15:0] tmp_674_fu_302;
reg   [15:0] tmp_675_fu_306;
reg   [15:0] tmp_676_fu_310;
reg   [15:0] tmp_677_fu_314;
reg   [15:0] weight_temp_0_0_fu_318;
reg   [15:0] weight_temp_1_0_fu_322;
reg   [15:0] weight_temp_2_0_fu_326;
reg   [15:0] weight_temp_3_0_fu_330;
reg   [15:0] weight_temp_4_0_fu_334;
reg   [15:0] weight_temp_5_0_fu_338;
reg   [15:0] weight_temp_6_0_fu_342;
reg   [15:0] weight_temp_7_0_fu_346;
reg   [15:0] weight_temp_8_0_fu_350;
reg   [15:0] weight_temp_9_0_fu_354;
reg   [15:0] weight_temp_10_0_fu_358;
reg   [15:0] weight_temp_11_0_fu_362;
reg   [15:0] weight_temp_12_0_fu_366;
reg   [15:0] weight_temp_13_0_fu_370;
reg   [15:0] weight_temp_14_0_fu_374;
reg   [15:0] weight_temp_15_0_fu_378;
reg   [15:0] weight_temp_15_0_s_fu_382;
reg   [15:0] weight_temp_0_0_s_fu_386;
reg   [15:0] weight_temp_1_0_s_fu_390;
reg   [15:0] weight_temp_2_0_s_fu_394;
reg   [15:0] weight_temp_3_0_s_fu_398;
reg   [15:0] weight_temp_4_0_s_fu_402;
reg   [15:0] weight_temp_5_0_s_fu_406;
reg   [15:0] weight_temp_6_0_s_fu_410;
reg   [15:0] weight_temp_7_0_s_fu_414;
reg   [15:0] weight_temp_8_0_s_fu_418;
reg   [15:0] weight_temp_9_0_s_fu_422;
reg   [15:0] weight_temp_10_0_s_fu_426;
reg   [15:0] weight_temp_11_0_s_fu_430;
reg   [15:0] weight_temp_12_0_s_fu_434;
reg   [15:0] weight_temp_13_0_s_fu_438;
reg   [15:0] weight_temp_14_0_s_fu_442;
wire   [31:0] tmp_s_fu_1446_p2;
wire   [0:0] tmp_232_fu_1451_p2;
wire   [31:0] tmp_233_fu_1465_p2;
wire   [0:0] tmp_234_fu_1470_p2;
wire   [31:0] tmp_235_fu_1484_p2;
wire   [0:0] tmp_236_fu_1489_p2;
wire   [31:0] tmp_237_fu_1503_p2;
wire   [0:0] tmp_238_fu_1508_p2;
wire   [31:0] mLoops_fu_1495_p3;
wire   [30:0] tmp_679_fu_1542_p4;
wire   [29:0] tmp_682_fu_1582_p4;
wire   [28:0] tmp_687_fu_1652_p4;
wire   [27:0] tmp_696_fu_1782_p4;
wire   [30:0] tmp_698_fu_1813_p4;
wire   [29:0] tmp_699_fu_1835_p4;
wire   [28:0] tmp_700_fu_1869_p4;
wire   [27:0] tmp_701_fu_1927_p4;
wire   [31:0] tn_cast_fu_1943_p1;
wire   [0:0] tmp_245_fu_2102_p2;
wire   [31:0] tmp_246_fu_2113_p2;
wire   [31:0] tmp_244_fu_2129_p2;
wire   [24:0] tmp_702_fu_2133_p4;
wire   [31:0] tr_cast_fu_2149_p1;
wire   [8:0] tmp_250_fu_2164_p3;
wire   [31:0] tc_cast_fu_2176_p1;
wire   [9:0] tmp_371_cast_fu_2195_p1;
wire   [0:0] grp_fu_1350_p2;
wire   [0:0] grp_fu_1355_p2;
wire   [0:0] grp_fu_1360_p2;
wire   [0:0] grp_fu_1365_p2;
wire   [0:0] grp_fu_1370_p2;
wire   [0:0] grp_fu_1375_p2;
wire   [0:0] grp_fu_1380_p2;
wire   [0:0] grp_fu_1385_p2;
wire   [0:0] grp_fu_1390_p2;
wire   [0:0] grp_fu_1395_p2;
wire   [0:0] grp_fu_1400_p2;
wire   [0:0] grp_fu_1405_p2;
wire   [0:0] grp_fu_1410_p2;
wire   [0:0] grp_fu_1415_p2;
wire   [0:0] grp_fu_1420_p2;
wire   [0:0] grp_fu_1425_p2;
wire    ap_block_pp0_stage0_00001;
reg   [7:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
end

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_0_address0),
    .ce0(output_temp_0_ce0),
    .q0(output_temp_0_q0),
    .address1(output_temp_0_addr_reg_3451_pp0_iter9_reg),
    .ce1(output_temp_0_ce1),
    .we1(output_temp_0_we1),
    .d1(acc_dat_reg_3707)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_1_address0),
    .ce0(output_temp_1_ce0),
    .q0(output_temp_1_q0),
    .address1(output_temp_1_addr_reg_3457_pp0_iter9_reg),
    .ce1(output_temp_1_ce1),
    .we1(output_temp_1_we1),
    .d1(acc_dat_1_reg_3714)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_2_address0),
    .ce0(output_temp_2_ce0),
    .q0(output_temp_2_q0),
    .address1(output_temp_2_addr_reg_3463_pp0_iter9_reg),
    .ce1(output_temp_2_ce1),
    .we1(output_temp_2_we1),
    .d1(acc_dat_2_reg_3721)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_3_address0),
    .ce0(output_temp_3_ce0),
    .q0(output_temp_3_q0),
    .address1(output_temp_3_addr_reg_3469_pp0_iter9_reg),
    .ce1(output_temp_3_ce1),
    .we1(output_temp_3_we1),
    .d1(acc_dat_3_reg_3728)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_4_address0),
    .ce0(output_temp_4_ce0),
    .q0(output_temp_4_q0),
    .address1(output_temp_4_addr_reg_3475_pp0_iter9_reg),
    .ce1(output_temp_4_ce1),
    .we1(output_temp_4_we1),
    .d1(acc_dat_4_reg_3735)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_5_address0),
    .ce0(output_temp_5_ce0),
    .q0(output_temp_5_q0),
    .address1(output_temp_5_addr_reg_3481_pp0_iter9_reg),
    .ce1(output_temp_5_ce1),
    .we1(output_temp_5_we1),
    .d1(acc_dat_5_reg_3742)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_6_address0),
    .ce0(output_temp_6_ce0),
    .q0(output_temp_6_q0),
    .address1(output_temp_6_addr_reg_3487_pp0_iter9_reg),
    .ce1(output_temp_6_ce1),
    .we1(output_temp_6_we1),
    .d1(acc_dat_6_reg_3749)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_7_address0),
    .ce0(output_temp_7_ce0),
    .q0(output_temp_7_q0),
    .address1(output_temp_7_addr_reg_3493_pp0_iter9_reg),
    .ce1(output_temp_7_ce1),
    .we1(output_temp_7_we1),
    .d1(acc_dat_7_reg_3756)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_8_address0),
    .ce0(output_temp_8_ce0),
    .q0(output_temp_8_q0),
    .address1(output_temp_8_addr_reg_3499_pp0_iter9_reg),
    .ce1(output_temp_8_ce1),
    .we1(output_temp_8_we1),
    .d1(acc_dat_8_reg_3763)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_9_address0),
    .ce0(output_temp_9_ce0),
    .q0(output_temp_9_q0),
    .address1(output_temp_9_addr_reg_3505_pp0_iter9_reg),
    .ce1(output_temp_9_ce1),
    .we1(output_temp_9_we1),
    .d1(acc_dat_9_reg_3770)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_10_address0),
    .ce0(output_temp_10_ce0),
    .q0(output_temp_10_q0),
    .address1(output_temp_10_addr_reg_3511_pp0_iter9_reg),
    .ce1(output_temp_10_ce1),
    .we1(output_temp_10_we1),
    .d1(acc_dat_10_reg_3777)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_11_address0),
    .ce0(output_temp_11_ce0),
    .q0(output_temp_11_q0),
    .address1(output_temp_11_addr_reg_3517_pp0_iter9_reg),
    .ce1(output_temp_11_ce1),
    .we1(output_temp_11_we1),
    .d1(acc_dat_11_reg_3784)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_12_address0),
    .ce0(output_temp_12_ce0),
    .q0(output_temp_12_q0),
    .address1(output_temp_12_addr_reg_3523_pp0_iter9_reg),
    .ce1(output_temp_12_ce1),
    .we1(output_temp_12_we1),
    .d1(acc_dat_12_reg_3791)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_13_address0),
    .ce0(output_temp_13_ce0),
    .q0(output_temp_13_q0),
    .address1(output_temp_13_addr_reg_3529_pp0_iter9_reg),
    .ce1(output_temp_13_ce1),
    .we1(output_temp_13_we1),
    .d1(acc_dat_13_reg_3798)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_14_address0),
    .ce0(output_temp_14_ce0),
    .q0(output_temp_14_q0),
    .address1(output_temp_14_addr_reg_3535_pp0_iter9_reg),
    .ce1(output_temp_14_ce1),
    .we1(output_temp_14_we1),
    .d1(acc_dat_14_reg_3805)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_15_address0),
    .ce0(output_temp_15_ce0),
    .q0(output_temp_15_q0),
    .address1(output_temp_15_addr_reg_3541_pp0_iter9_reg),
    .ce1(output_temp_15_ce1),
    .we1(output_temp_15_we1),
    .d1(acc_dat_s_reg_3812)
);

mac_1_1_s grp_mac_1_1_s_fu_1190(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_740_reg_3346),
    .weight_regs_read(grp_mac_1_1_s_fu_1190_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1190_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1196(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_740_reg_3346),
    .weight_regs_read(grp_mac_1_1_s_fu_1196_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1196_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1202(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_740_reg_3346),
    .weight_regs_read(grp_mac_1_1_s_fu_1202_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1202_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1208(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_740_reg_3346),
    .weight_regs_read(grp_mac_1_1_s_fu_1208_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1208_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1214(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_740_reg_3346),
    .weight_regs_read(grp_mac_1_1_s_fu_1214_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1214_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1220(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_740_reg_3346),
    .weight_regs_read(grp_mac_1_1_s_fu_1220_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1220_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1226(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_740_reg_3346),
    .weight_regs_read(grp_mac_1_1_s_fu_1226_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1226_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1232(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_740_reg_3346),
    .weight_regs_read(grp_mac_1_1_s_fu_1232_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1232_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1238(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_740_reg_3346),
    .weight_regs_read(grp_mac_1_1_s_fu_1238_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1238_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1244(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_740_reg_3346),
    .weight_regs_read(grp_mac_1_1_s_fu_1244_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1244_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1250(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_740_reg_3346),
    .weight_regs_read(grp_mac_1_1_s_fu_1250_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1250_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1256(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_740_reg_3346),
    .weight_regs_read(grp_mac_1_1_s_fu_1256_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1256_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1262(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_740_reg_3346),
    .weight_regs_read(grp_mac_1_1_s_fu_1262_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1262_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1268(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_740_reg_3346),
    .weight_regs_read(grp_mac_1_1_s_fu_1268_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1268_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1274(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_740_reg_3346),
    .weight_regs_read(grp_mac_1_1_s_fu_1274_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1274_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1280(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_740_reg_3346),
    .weight_regs_read(grp_mac_1_1_s_fu_1280_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1280_ap_return)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1634(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_reg_3552),
    .din1(tmp_254_reg_3547),
    .ce(1'b1),
    .dout(grp_fu_1286_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1635(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_1_reg_3562),
    .din1(tmp_258_reg_3557),
    .ce(1'b1),
    .dout(grp_fu_1290_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1636(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_2_reg_3572),
    .din1(tmp_261_reg_3567),
    .ce(1'b1),
    .dout(grp_fu_1294_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1637(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_3_reg_3582),
    .din1(tmp_264_reg_3577),
    .ce(1'b1),
    .dout(grp_fu_1298_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1638(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_4_reg_3592),
    .din1(tmp_267_reg_3587),
    .ce(1'b1),
    .dout(grp_fu_1302_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1639(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_5_reg_3602),
    .din1(tmp_270_reg_3597),
    .ce(1'b1),
    .dout(grp_fu_1306_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1640(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_6_reg_3612),
    .din1(tmp_273_reg_3607),
    .ce(1'b1),
    .dout(grp_fu_1310_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1641(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_7_reg_3622),
    .din1(tmp_276_reg_3617),
    .ce(1'b1),
    .dout(grp_fu_1314_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1642(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_8_reg_3632),
    .din1(tmp_279_reg_3627),
    .ce(1'b1),
    .dout(grp_fu_1318_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1643(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_9_reg_3642),
    .din1(tmp_282_reg_3637),
    .ce(1'b1),
    .dout(grp_fu_1322_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1644(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_10_reg_3652),
    .din1(tmp_285_reg_3647),
    .ce(1'b1),
    .dout(grp_fu_1326_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1645(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_11_reg_3662),
    .din1(tmp_288_reg_3657),
    .ce(1'b1),
    .dout(grp_fu_1330_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1646(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_12_reg_3672),
    .din1(tmp_291_reg_3667),
    .ce(1'b1),
    .dout(grp_fu_1334_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1647(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_13_reg_3682),
    .din1(tmp_294_reg_3677),
    .ce(1'b1),
    .dout(grp_fu_1338_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1648(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_14_reg_3692),
    .din1(tmp_297_reg_3687),
    .ce(1'b1),
    .dout(grp_fu_1342_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1649(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_s_reg_3702),
    .din1(tmp_300_reg_3697),
    .ce(1'b1),
    .dout(grp_fu_1346_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1650(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_reg_3707),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1350_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1651(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_1_reg_3714),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1355_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1652(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_2_reg_3721),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1360_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1653(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_3_reg_3728),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1365_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1654(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_4_reg_3735),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1370_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1655(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_5_reg_3742),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1375_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1656(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_6_reg_3749),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1380_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1657(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_7_reg_3756),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1385_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1658(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_8_reg_3763),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1390_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1659(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_9_reg_3770),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1395_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1660(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_10_reg_3777),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1400_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1661(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_11_reg_3784),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1405_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1662(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_12_reg_3791),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1410_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1663(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_13_reg_3798),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1415_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1664(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_14_reg_3805),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1420_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1665(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_s_reg_3812),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1425_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((tmp_708_fu_2124_p1 == 1'd0) & (tmp_242_fu_1947_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((tmp_248_fu_2153_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state7)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state7);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end else if (((tmp_248_fu_2153_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_251_fu_2180_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tc_reg_1179 <= tc_2_fu_2185_p2;
    end else if (((tmp_248_fu_2153_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        tc_reg_1179 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_248_fu_2153_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        tn_reg_1157 <= tn_18_reg_3288;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tn_reg_1157 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tr_reg_1168 <= tr_9_reg_3327;
    end else if (((tmp_242_fu_1947_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        tr_reg_1168 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_948_0_0_s_reg_3255 == 1'd1))) begin
        acc_dat_10_reg_3777 <= grp_fu_1326_p2;
        p_pn_10_reg_3652 <= p_pn_10_fu_2630_p3;
        tmp_285_reg_3647 <= grp_mac_1_1_s_fu_1250_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        acc_dat_10_reg_3777_pp0_iter10_reg <= acc_dat_10_reg_3777;
        acc_dat_10_reg_3777_pp0_iter11_reg <= acc_dat_10_reg_3777_pp0_iter10_reg;
        acc_dat_11_reg_3784_pp0_iter10_reg <= acc_dat_11_reg_3784;
        acc_dat_11_reg_3784_pp0_iter11_reg <= acc_dat_11_reg_3784_pp0_iter10_reg;
        acc_dat_12_reg_3791_pp0_iter10_reg <= acc_dat_12_reg_3791;
        acc_dat_12_reg_3791_pp0_iter11_reg <= acc_dat_12_reg_3791_pp0_iter10_reg;
        acc_dat_13_reg_3798_pp0_iter10_reg <= acc_dat_13_reg_3798;
        acc_dat_13_reg_3798_pp0_iter11_reg <= acc_dat_13_reg_3798_pp0_iter10_reg;
        acc_dat_14_reg_3805_pp0_iter10_reg <= acc_dat_14_reg_3805;
        acc_dat_14_reg_3805_pp0_iter11_reg <= acc_dat_14_reg_3805_pp0_iter10_reg;
        acc_dat_1_reg_3714_pp0_iter10_reg <= acc_dat_1_reg_3714;
        acc_dat_1_reg_3714_pp0_iter11_reg <= acc_dat_1_reg_3714_pp0_iter10_reg;
        acc_dat_2_reg_3721_pp0_iter10_reg <= acc_dat_2_reg_3721;
        acc_dat_2_reg_3721_pp0_iter11_reg <= acc_dat_2_reg_3721_pp0_iter10_reg;
        acc_dat_3_reg_3728_pp0_iter10_reg <= acc_dat_3_reg_3728;
        acc_dat_3_reg_3728_pp0_iter11_reg <= acc_dat_3_reg_3728_pp0_iter10_reg;
        acc_dat_4_reg_3735_pp0_iter10_reg <= acc_dat_4_reg_3735;
        acc_dat_4_reg_3735_pp0_iter11_reg <= acc_dat_4_reg_3735_pp0_iter10_reg;
        acc_dat_5_reg_3742_pp0_iter10_reg <= acc_dat_5_reg_3742;
        acc_dat_5_reg_3742_pp0_iter11_reg <= acc_dat_5_reg_3742_pp0_iter10_reg;
        acc_dat_6_reg_3749_pp0_iter10_reg <= acc_dat_6_reg_3749;
        acc_dat_6_reg_3749_pp0_iter11_reg <= acc_dat_6_reg_3749_pp0_iter10_reg;
        acc_dat_7_reg_3756_pp0_iter10_reg <= acc_dat_7_reg_3756;
        acc_dat_7_reg_3756_pp0_iter11_reg <= acc_dat_7_reg_3756_pp0_iter10_reg;
        acc_dat_8_reg_3763_pp0_iter10_reg <= acc_dat_8_reg_3763;
        acc_dat_8_reg_3763_pp0_iter11_reg <= acc_dat_8_reg_3763_pp0_iter10_reg;
        acc_dat_9_reg_3770_pp0_iter10_reg <= acc_dat_9_reg_3770;
        acc_dat_9_reg_3770_pp0_iter11_reg <= acc_dat_9_reg_3770_pp0_iter10_reg;
        acc_dat_reg_3707_pp0_iter10_reg <= acc_dat_reg_3707;
        acc_dat_reg_3707_pp0_iter11_reg <= acc_dat_reg_3707_pp0_iter10_reg;
        acc_dat_s_reg_3812_pp0_iter10_reg <= acc_dat_s_reg_3812;
        acc_dat_s_reg_3812_pp0_iter11_reg <= acc_dat_s_reg_3812_pp0_iter10_reg;
        output_temp_0_addr_reg_3451 <= tmp_534_cast_fu_2508_p1;
        output_temp_0_addr_reg_3451_pp0_iter5_reg <= output_temp_0_addr_reg_3451;
        output_temp_0_addr_reg_3451_pp0_iter6_reg <= output_temp_0_addr_reg_3451_pp0_iter5_reg;
        output_temp_0_addr_reg_3451_pp0_iter7_reg <= output_temp_0_addr_reg_3451_pp0_iter6_reg;
        output_temp_0_addr_reg_3451_pp0_iter8_reg <= output_temp_0_addr_reg_3451_pp0_iter7_reg;
        output_temp_0_addr_reg_3451_pp0_iter9_reg <= output_temp_0_addr_reg_3451_pp0_iter8_reg;
        output_temp_10_addr_reg_3511 <= tmp_534_cast_fu_2508_p1;
        output_temp_10_addr_reg_3511_pp0_iter5_reg <= output_temp_10_addr_reg_3511;
        output_temp_10_addr_reg_3511_pp0_iter6_reg <= output_temp_10_addr_reg_3511_pp0_iter5_reg;
        output_temp_10_addr_reg_3511_pp0_iter7_reg <= output_temp_10_addr_reg_3511_pp0_iter6_reg;
        output_temp_10_addr_reg_3511_pp0_iter8_reg <= output_temp_10_addr_reg_3511_pp0_iter7_reg;
        output_temp_10_addr_reg_3511_pp0_iter9_reg <= output_temp_10_addr_reg_3511_pp0_iter8_reg;
        output_temp_11_addr_reg_3517 <= tmp_534_cast_fu_2508_p1;
        output_temp_11_addr_reg_3517_pp0_iter5_reg <= output_temp_11_addr_reg_3517;
        output_temp_11_addr_reg_3517_pp0_iter6_reg <= output_temp_11_addr_reg_3517_pp0_iter5_reg;
        output_temp_11_addr_reg_3517_pp0_iter7_reg <= output_temp_11_addr_reg_3517_pp0_iter6_reg;
        output_temp_11_addr_reg_3517_pp0_iter8_reg <= output_temp_11_addr_reg_3517_pp0_iter7_reg;
        output_temp_11_addr_reg_3517_pp0_iter9_reg <= output_temp_11_addr_reg_3517_pp0_iter8_reg;
        output_temp_12_addr_reg_3523 <= tmp_534_cast_fu_2508_p1;
        output_temp_12_addr_reg_3523_pp0_iter5_reg <= output_temp_12_addr_reg_3523;
        output_temp_12_addr_reg_3523_pp0_iter6_reg <= output_temp_12_addr_reg_3523_pp0_iter5_reg;
        output_temp_12_addr_reg_3523_pp0_iter7_reg <= output_temp_12_addr_reg_3523_pp0_iter6_reg;
        output_temp_12_addr_reg_3523_pp0_iter8_reg <= output_temp_12_addr_reg_3523_pp0_iter7_reg;
        output_temp_12_addr_reg_3523_pp0_iter9_reg <= output_temp_12_addr_reg_3523_pp0_iter8_reg;
        output_temp_13_addr_reg_3529 <= tmp_534_cast_fu_2508_p1;
        output_temp_13_addr_reg_3529_pp0_iter5_reg <= output_temp_13_addr_reg_3529;
        output_temp_13_addr_reg_3529_pp0_iter6_reg <= output_temp_13_addr_reg_3529_pp0_iter5_reg;
        output_temp_13_addr_reg_3529_pp0_iter7_reg <= output_temp_13_addr_reg_3529_pp0_iter6_reg;
        output_temp_13_addr_reg_3529_pp0_iter8_reg <= output_temp_13_addr_reg_3529_pp0_iter7_reg;
        output_temp_13_addr_reg_3529_pp0_iter9_reg <= output_temp_13_addr_reg_3529_pp0_iter8_reg;
        output_temp_14_addr_reg_3535 <= tmp_534_cast_fu_2508_p1;
        output_temp_14_addr_reg_3535_pp0_iter5_reg <= output_temp_14_addr_reg_3535;
        output_temp_14_addr_reg_3535_pp0_iter6_reg <= output_temp_14_addr_reg_3535_pp0_iter5_reg;
        output_temp_14_addr_reg_3535_pp0_iter7_reg <= output_temp_14_addr_reg_3535_pp0_iter6_reg;
        output_temp_14_addr_reg_3535_pp0_iter8_reg <= output_temp_14_addr_reg_3535_pp0_iter7_reg;
        output_temp_14_addr_reg_3535_pp0_iter9_reg <= output_temp_14_addr_reg_3535_pp0_iter8_reg;
        output_temp_15_addr_reg_3541 <= tmp_534_cast_fu_2508_p1;
        output_temp_15_addr_reg_3541_pp0_iter5_reg <= output_temp_15_addr_reg_3541;
        output_temp_15_addr_reg_3541_pp0_iter6_reg <= output_temp_15_addr_reg_3541_pp0_iter5_reg;
        output_temp_15_addr_reg_3541_pp0_iter7_reg <= output_temp_15_addr_reg_3541_pp0_iter6_reg;
        output_temp_15_addr_reg_3541_pp0_iter8_reg <= output_temp_15_addr_reg_3541_pp0_iter7_reg;
        output_temp_15_addr_reg_3541_pp0_iter9_reg <= output_temp_15_addr_reg_3541_pp0_iter8_reg;
        output_temp_1_addr_reg_3457 <= tmp_534_cast_fu_2508_p1;
        output_temp_1_addr_reg_3457_pp0_iter5_reg <= output_temp_1_addr_reg_3457;
        output_temp_1_addr_reg_3457_pp0_iter6_reg <= output_temp_1_addr_reg_3457_pp0_iter5_reg;
        output_temp_1_addr_reg_3457_pp0_iter7_reg <= output_temp_1_addr_reg_3457_pp0_iter6_reg;
        output_temp_1_addr_reg_3457_pp0_iter8_reg <= output_temp_1_addr_reg_3457_pp0_iter7_reg;
        output_temp_1_addr_reg_3457_pp0_iter9_reg <= output_temp_1_addr_reg_3457_pp0_iter8_reg;
        output_temp_2_addr_reg_3463 <= tmp_534_cast_fu_2508_p1;
        output_temp_2_addr_reg_3463_pp0_iter5_reg <= output_temp_2_addr_reg_3463;
        output_temp_2_addr_reg_3463_pp0_iter6_reg <= output_temp_2_addr_reg_3463_pp0_iter5_reg;
        output_temp_2_addr_reg_3463_pp0_iter7_reg <= output_temp_2_addr_reg_3463_pp0_iter6_reg;
        output_temp_2_addr_reg_3463_pp0_iter8_reg <= output_temp_2_addr_reg_3463_pp0_iter7_reg;
        output_temp_2_addr_reg_3463_pp0_iter9_reg <= output_temp_2_addr_reg_3463_pp0_iter8_reg;
        output_temp_3_addr_reg_3469 <= tmp_534_cast_fu_2508_p1;
        output_temp_3_addr_reg_3469_pp0_iter5_reg <= output_temp_3_addr_reg_3469;
        output_temp_3_addr_reg_3469_pp0_iter6_reg <= output_temp_3_addr_reg_3469_pp0_iter5_reg;
        output_temp_3_addr_reg_3469_pp0_iter7_reg <= output_temp_3_addr_reg_3469_pp0_iter6_reg;
        output_temp_3_addr_reg_3469_pp0_iter8_reg <= output_temp_3_addr_reg_3469_pp0_iter7_reg;
        output_temp_3_addr_reg_3469_pp0_iter9_reg <= output_temp_3_addr_reg_3469_pp0_iter8_reg;
        output_temp_4_addr_reg_3475 <= tmp_534_cast_fu_2508_p1;
        output_temp_4_addr_reg_3475_pp0_iter5_reg <= output_temp_4_addr_reg_3475;
        output_temp_4_addr_reg_3475_pp0_iter6_reg <= output_temp_4_addr_reg_3475_pp0_iter5_reg;
        output_temp_4_addr_reg_3475_pp0_iter7_reg <= output_temp_4_addr_reg_3475_pp0_iter6_reg;
        output_temp_4_addr_reg_3475_pp0_iter8_reg <= output_temp_4_addr_reg_3475_pp0_iter7_reg;
        output_temp_4_addr_reg_3475_pp0_iter9_reg <= output_temp_4_addr_reg_3475_pp0_iter8_reg;
        output_temp_5_addr_reg_3481 <= tmp_534_cast_fu_2508_p1;
        output_temp_5_addr_reg_3481_pp0_iter5_reg <= output_temp_5_addr_reg_3481;
        output_temp_5_addr_reg_3481_pp0_iter6_reg <= output_temp_5_addr_reg_3481_pp0_iter5_reg;
        output_temp_5_addr_reg_3481_pp0_iter7_reg <= output_temp_5_addr_reg_3481_pp0_iter6_reg;
        output_temp_5_addr_reg_3481_pp0_iter8_reg <= output_temp_5_addr_reg_3481_pp0_iter7_reg;
        output_temp_5_addr_reg_3481_pp0_iter9_reg <= output_temp_5_addr_reg_3481_pp0_iter8_reg;
        output_temp_6_addr_reg_3487 <= tmp_534_cast_fu_2508_p1;
        output_temp_6_addr_reg_3487_pp0_iter5_reg <= output_temp_6_addr_reg_3487;
        output_temp_6_addr_reg_3487_pp0_iter6_reg <= output_temp_6_addr_reg_3487_pp0_iter5_reg;
        output_temp_6_addr_reg_3487_pp0_iter7_reg <= output_temp_6_addr_reg_3487_pp0_iter6_reg;
        output_temp_6_addr_reg_3487_pp0_iter8_reg <= output_temp_6_addr_reg_3487_pp0_iter7_reg;
        output_temp_6_addr_reg_3487_pp0_iter9_reg <= output_temp_6_addr_reg_3487_pp0_iter8_reg;
        output_temp_7_addr_reg_3493 <= tmp_534_cast_fu_2508_p1;
        output_temp_7_addr_reg_3493_pp0_iter5_reg <= output_temp_7_addr_reg_3493;
        output_temp_7_addr_reg_3493_pp0_iter6_reg <= output_temp_7_addr_reg_3493_pp0_iter5_reg;
        output_temp_7_addr_reg_3493_pp0_iter7_reg <= output_temp_7_addr_reg_3493_pp0_iter6_reg;
        output_temp_7_addr_reg_3493_pp0_iter8_reg <= output_temp_7_addr_reg_3493_pp0_iter7_reg;
        output_temp_7_addr_reg_3493_pp0_iter9_reg <= output_temp_7_addr_reg_3493_pp0_iter8_reg;
        output_temp_8_addr_reg_3499 <= tmp_534_cast_fu_2508_p1;
        output_temp_8_addr_reg_3499_pp0_iter5_reg <= output_temp_8_addr_reg_3499;
        output_temp_8_addr_reg_3499_pp0_iter6_reg <= output_temp_8_addr_reg_3499_pp0_iter5_reg;
        output_temp_8_addr_reg_3499_pp0_iter7_reg <= output_temp_8_addr_reg_3499_pp0_iter6_reg;
        output_temp_8_addr_reg_3499_pp0_iter8_reg <= output_temp_8_addr_reg_3499_pp0_iter7_reg;
        output_temp_8_addr_reg_3499_pp0_iter9_reg <= output_temp_8_addr_reg_3499_pp0_iter8_reg;
        output_temp_9_addr_reg_3505 <= tmp_534_cast_fu_2508_p1;
        output_temp_9_addr_reg_3505_pp0_iter5_reg <= output_temp_9_addr_reg_3505;
        output_temp_9_addr_reg_3505_pp0_iter6_reg <= output_temp_9_addr_reg_3505_pp0_iter5_reg;
        output_temp_9_addr_reg_3505_pp0_iter7_reg <= output_temp_9_addr_reg_3505_pp0_iter6_reg;
        output_temp_9_addr_reg_3505_pp0_iter8_reg <= output_temp_9_addr_reg_3505_pp0_iter7_reg;
        output_temp_9_addr_reg_3505_pp0_iter9_reg <= output_temp_9_addr_reg_3505_pp0_iter8_reg;
        tmp_253_reg_3366_pp0_iter2_reg <= tmp_253_reg_3366_pp0_iter1_reg;
        tmp_253_reg_3366_pp0_iter3_reg <= tmp_253_reg_3366_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_948_0_0_1_reg_3260 == 1'd1))) begin
        acc_dat_11_reg_3784 <= grp_fu_1330_p2;
        p_pn_11_reg_3662 <= p_pn_11_fu_2640_p3;
        tmp_288_reg_3657 <= grp_mac_1_1_s_fu_1256_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_948_0_0_3_reg_3265 == 1'd1))) begin
        acc_dat_12_reg_3791 <= grp_fu_1334_p2;
        p_pn_12_reg_3672 <= p_pn_12_fu_2650_p3;
        tmp_291_reg_3667 <= grp_mac_1_1_s_fu_1262_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_948_0_0_7_reg_3270 == 1'd1))) begin
        acc_dat_13_reg_3798 <= grp_fu_1338_p2;
        p_pn_13_reg_3682 <= p_pn_13_fu_2660_p3;
        tmp_294_reg_3677 <= grp_mac_1_1_s_fu_1268_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_948_0_0_10_reg_3275 == 1'd1))) begin
        acc_dat_14_reg_3805 <= grp_fu_1342_p2;
        p_pn_14_reg_3692 <= p_pn_14_fu_2670_p3;
        tmp_297_reg_3687 <= grp_mac_1_1_s_fu_1274_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp4_reg_3210 == 1'd1))) begin
        acc_dat_1_reg_3714 <= grp_fu_1290_p2;
        p_pn_1_reg_3562 <= p_pn_1_fu_2540_p3;
        tmp_258_reg_3557 <= grp_mac_1_1_s_fu_1196_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_948_0_0_2_reg_3215 == 1'd1))) begin
        acc_dat_2_reg_3721 <= grp_fu_1294_p2;
        p_pn_2_reg_3572 <= p_pn_2_fu_2550_p3;
        tmp_261_reg_3567 <= grp_mac_1_1_s_fu_1202_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp5_reg_3220 == 1'd1))) begin
        acc_dat_3_reg_3728 <= grp_fu_1298_p2;
        p_pn_3_reg_3582 <= p_pn_3_fu_2560_p3;
        tmp_264_reg_3577 <= grp_mac_1_1_s_fu_1208_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_948_0_0_4_reg_3225 == 1'd1))) begin
        acc_dat_4_reg_3735 <= grp_fu_1302_p2;
        p_pn_4_reg_3592 <= p_pn_4_fu_2570_p3;
        tmp_267_reg_3587 <= grp_mac_1_1_s_fu_1214_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_948_0_0_5_reg_3230 == 1'd1))) begin
        acc_dat_5_reg_3742 <= grp_fu_1306_p2;
        p_pn_5_reg_3602 <= p_pn_5_fu_2580_p3;
        tmp_270_reg_3597 <= grp_mac_1_1_s_fu_1220_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_948_0_0_6_reg_3235 == 1'd1))) begin
        acc_dat_6_reg_3749 <= grp_fu_1310_p2;
        p_pn_6_reg_3612 <= p_pn_6_fu_2590_p3;
        tmp_273_reg_3607 <= grp_mac_1_1_s_fu_1226_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp6_reg_3240 == 1'd1))) begin
        acc_dat_7_reg_3756 <= grp_fu_1314_p2;
        p_pn_7_reg_3622 <= p_pn_7_fu_2600_p3;
        tmp_276_reg_3617 <= grp_mac_1_1_s_fu_1232_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_948_0_0_8_reg_3245 == 1'd1))) begin
        acc_dat_8_reg_3763 <= grp_fu_1318_p2;
        p_pn_8_reg_3632 <= p_pn_8_fu_2610_p3;
        tmp_279_reg_3627 <= grp_mac_1_1_s_fu_1238_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_948_0_0_9_reg_3250 == 1'd1))) begin
        acc_dat_9_reg_3770 <= grp_fu_1322_p2;
        p_pn_9_reg_3642 <= p_pn_9_fu_2620_p3;
        tmp_282_reg_3637 <= grp_mac_1_1_s_fu_1244_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_241_reg_3205 == 1'd1))) begin
        acc_dat_reg_3707 <= grp_fu_1286_p2;
        p_pn_reg_3552 <= p_pn_fu_2530_p3;
        tmp_254_reg_3547 <= grp_mac_1_1_s_fu_1190_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp7_reg_3280 == 1'd1))) begin
        acc_dat_s_reg_3812 <= grp_fu_1346_p2;
        p_pn_s_reg_3702 <= p_pn_s_fu_2680_p3;
        tmp_300_reg_3697 <= grp_mac_1_1_s_fu_1280_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cLoops_reg_3136 <= cLoops_fu_1457_p3;
        icmp4_reg_3210 <= icmp4_fu_1823_p2;
        icmp5_reg_3220 <= icmp5_fu_1845_p2;
        icmp6_reg_3240 <= icmp6_fu_1879_p2;
        icmp7_reg_3280 <= icmp7_fu_1937_p2;
        nLoops_reg_3146 <= nLoops_fu_1514_p3;
        rLoops_reg_3141 <= rLoops_fu_1476_p3;
        tmp_239_reg_3152 <= tmp_239_fu_1522_p2;
        tmp_241_reg_3205 <= tmp_241_fu_1807_p2;
        tmp_948_0_0_10_reg_3275 <= tmp_948_0_0_10_fu_1921_p2;
        tmp_948_0_0_1_reg_3260 <= tmp_948_0_0_1_fu_1903_p2;
        tmp_948_0_0_2_reg_3215 <= tmp_948_0_0_2_fu_1829_p2;
        tmp_948_0_0_3_reg_3265 <= tmp_948_0_0_3_fu_1909_p2;
        tmp_948_0_0_4_reg_3225 <= tmp_948_0_0_4_fu_1851_p2;
        tmp_948_0_0_5_reg_3230 <= tmp_948_0_0_5_fu_1857_p2;
        tmp_948_0_0_6_reg_3235 <= tmp_948_0_0_6_fu_1863_p2;
        tmp_948_0_0_7_reg_3270 <= tmp_948_0_0_7_fu_1915_p2;
        tmp_948_0_0_8_reg_3245 <= tmp_948_0_0_8_fu_1885_p2;
        tmp_948_0_0_9_reg_3250 <= tmp_948_0_0_9_fu_1891_p2;
        tmp_948_0_0_s_reg_3255 <= tmp_948_0_0_s_fu_1897_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        or_cond_reg_3293 <= or_cond_fu_2108_p2;
        tmp_247_reg_3313 <= tmp_247_fu_2118_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_251_reg_3337 <= tmp_251_fu_2180_p2;
        tmp_253_reg_3366_pp0_iter1_reg <= tmp_253_reg_3366;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_251_fu_2180_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_253_reg_3366 <= tmp_253_fu_2199_p2;
        tmp_740_reg_3346 <= input_buffer_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_248_fu_2153_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_532_cast_reg_3332[8 : 4] <= tmp_532_cast_fu_2172_p1[8 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_240_fu_1527_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_662_fu_254 <= beta_buffer_0_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (icmp_fu_1552_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_663_fu_258 <= beta_buffer_1_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_2_fu_1567_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_664_fu_262 <= beta_buffer_2_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (icmp1_fu_1592_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_665_fu_266 <= beta_buffer_3_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_4_fu_1607_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_666_fu_270 <= beta_buffer_4_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_5_fu_1622_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_667_fu_274 <= beta_buffer_5_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_6_fu_1637_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_668_fu_278 <= beta_buffer_6_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (icmp2_fu_1662_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_669_fu_282 <= beta_buffer_7_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_8_fu_1677_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_670_fu_286 <= beta_buffer_8_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_9_fu_1692_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_671_fu_290 <= beta_buffer_9_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_s_fu_1707_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_672_fu_294 <= beta_buffer_10_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_1_fu_1722_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_673_fu_298 <= beta_buffer_11_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_3_fu_1737_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_674_fu_302 <= beta_buffer_12_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_7_fu_1752_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_675_fu_306 <= beta_buffer_13_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_10_fu_1767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_676_fu_310 <= beta_buffer_14_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (icmp3_fu_1792_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_677_fu_314 <= beta_buffer_15_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_231_nbwritereq_fu_518_p3 == 1'd1) & (tmp_nbreadreq_fu_510_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_704_reg_3109 <= data_c_V_dout;
        tmp_705_reg_3115 <= data_r_V_dout;
        tmp_706_reg_3121 <= data_m_V_dout;
        tmp_707_reg_3127 <= data_n_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tn_18_reg_3288 <= tn_18_fu_1952_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tr_9_reg_3327 <= tr_9_fu_2158_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_241_reg_3205 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_0_0_fu_318 <= weight_buffer_0_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_251_reg_3337 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_temp_0_0_s_fu_386 <= weight_regs_0_0_2_we_fu_2300_p3;
        weight_temp_10_0_s_fu_426 <= weight_regs_10_0_2_w_fu_2380_p3;
        weight_temp_11_0_s_fu_430 <= weight_regs_11_0_2_w_fu_2388_p3;
        weight_temp_12_0_s_fu_434 <= weight_regs_12_0_2_w_fu_2396_p3;
        weight_temp_13_0_s_fu_438 <= weight_regs_13_0_2_w_fu_2404_p3;
        weight_temp_14_0_s_fu_442 <= weight_regs_14_0_2_w_fu_2412_p3;
        weight_temp_15_0_s_fu_382 <= weight_regs_15_0_2_w_fu_2420_p3;
        weight_temp_1_0_s_fu_390 <= weight_regs_1_0_2_we_fu_2308_p3;
        weight_temp_2_0_s_fu_394 <= weight_regs_2_0_2_we_fu_2316_p3;
        weight_temp_3_0_s_fu_398 <= weight_regs_3_0_2_we_fu_2324_p3;
        weight_temp_4_0_s_fu_402 <= weight_regs_4_0_2_we_fu_2332_p3;
        weight_temp_5_0_s_fu_406 <= weight_regs_5_0_2_we_fu_2340_p3;
        weight_temp_6_0_s_fu_410 <= weight_regs_6_0_2_we_fu_2348_p3;
        weight_temp_7_0_s_fu_414 <= weight_regs_7_0_2_we_fu_2356_p3;
        weight_temp_8_0_s_fu_418 <= weight_regs_8_0_2_we_fu_2364_p3;
        weight_temp_9_0_s_fu_422 <= weight_regs_9_0_2_we_fu_2372_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_s_reg_3255 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_10_0_fu_358 <= weight_buffer_10_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_1_reg_3260 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_11_0_fu_362 <= weight_buffer_11_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_3_reg_3265 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_12_0_fu_366 <= weight_buffer_12_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_7_reg_3270 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_13_0_fu_370 <= weight_buffer_13_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_10_reg_3275 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_14_0_fu_374 <= weight_buffer_14_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (icmp7_reg_3280 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_15_0_fu_378 <= weight_buffer_15_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (icmp4_reg_3210 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_1_0_fu_322 <= weight_buffer_1_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_2_reg_3215 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_2_0_fu_326 <= weight_buffer_2_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (icmp5_reg_3220 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_3_0_fu_330 <= weight_buffer_3_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_4_reg_3225 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_4_0_fu_334 <= weight_buffer_4_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_5_reg_3230 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_5_0_fu_338 <= weight_buffer_5_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_6_reg_3235 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_6_0_fu_342 <= weight_buffer_6_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (icmp6_reg_3240 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_7_0_fu_346 <= weight_buffer_7_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_8_reg_3245 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_8_0_fu_350 <= weight_buffer_8_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_9_reg_3250 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_9_0_fu_354 <= weight_buffer_9_V_dout;
    end
end

always @ (*) begin
    if ((tmp_251_fu_2180_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_708_fu_2124_p1 == 1'd0) & (tmp_242_fu_1947_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_708_fu_2124_p1 == 1'd0) & (tmp_242_fu_1947_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_240_fu_1527_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_0_V_empty_n == 1'b1))) begin
        beta_buffer_0_V_read = 1'b1;
    end else begin
        beta_buffer_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_s_fu_1707_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_10_V_empty_n == 1'b1))) begin
        beta_buffer_10_V_read = 1'b1;
    end else begin
        beta_buffer_10_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_1_fu_1722_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_11_V_empty_n == 1'b1))) begin
        beta_buffer_11_V_read = 1'b1;
    end else begin
        beta_buffer_11_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_3_fu_1737_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_12_V_empty_n == 1'b1))) begin
        beta_buffer_12_V_read = 1'b1;
    end else begin
        beta_buffer_12_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_7_fu_1752_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_13_V_empty_n == 1'b1))) begin
        beta_buffer_13_V_read = 1'b1;
    end else begin
        beta_buffer_13_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_10_fu_1767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_14_V_empty_n == 1'b1))) begin
        beta_buffer_14_V_read = 1'b1;
    end else begin
        beta_buffer_14_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (icmp3_fu_1792_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_15_V_empty_n == 1'b1))) begin
        beta_buffer_15_V_read = 1'b1;
    end else begin
        beta_buffer_15_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (icmp_fu_1552_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_1_V_empty_n == 1'b1))) begin
        beta_buffer_1_V_read = 1'b1;
    end else begin
        beta_buffer_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_2_fu_1567_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_2_V_empty_n == 1'b1))) begin
        beta_buffer_2_V_read = 1'b1;
    end else begin
        beta_buffer_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (icmp1_fu_1592_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_3_V_empty_n == 1'b1))) begin
        beta_buffer_3_V_read = 1'b1;
    end else begin
        beta_buffer_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_4_fu_1607_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_4_V_empty_n == 1'b1))) begin
        beta_buffer_4_V_read = 1'b1;
    end else begin
        beta_buffer_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_5_fu_1622_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_5_V_empty_n == 1'b1))) begin
        beta_buffer_5_V_read = 1'b1;
    end else begin
        beta_buffer_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_6_fu_1637_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_6_V_empty_n == 1'b1))) begin
        beta_buffer_6_V_read = 1'b1;
    end else begin
        beta_buffer_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (icmp2_fu_1662_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_7_V_empty_n == 1'b1))) begin
        beta_buffer_7_V_read = 1'b1;
    end else begin
        beta_buffer_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_8_fu_1677_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_8_V_empty_n == 1'b1))) begin
        beta_buffer_8_V_read = 1'b1;
    end else begin
        beta_buffer_8_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_239_fu_1522_p2 == 1'd1) & (tmp_922_9_fu_1692_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_9_V_empty_n == 1'b1))) begin
        beta_buffer_9_V_read = 1'b1;
    end else begin
        beta_buffer_9_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (data_buffer_V_empty_n == 1'b1))) begin
        data_buffer_V_read = 1'b1;
    end else begin
        data_buffer_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_231_nbwritereq_fu_518_p3 == 1'd1) & (tmp_nbreadreq_fu_510_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (data_c_V_empty_n == 1'b1))) begin
        data_c_V_read = 1'b1;
    end else begin
        data_c_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_231_nbwritereq_fu_518_p3 == 1'd1) & (tmp_nbreadreq_fu_510_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (data_m_V_empty_n == 1'b1))) begin
        data_m_V_read = 1'b1;
    end else begin
        data_m_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_231_nbwritereq_fu_518_p3 == 1'd1) & (tmp_nbreadreq_fu_510_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (data_n_V_empty_n == 1'b1))) begin
        data_n_V_read = 1'b1;
    end else begin
        data_n_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_231_nbwritereq_fu_518_p3 == 1'd1) & (tmp_nbreadreq_fu_510_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (data_r_V_empty_n == 1'b1))) begin
        data_r_V_read = 1'b1;
    end else begin
        data_r_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_251_fu_2180_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (input_buffer_V_empty_n == 1'b1))) begin
        input_buffer_V_read = 1'b1;
    end else begin
        input_buffer_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd1) & (tmp_241_reg_3205 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_0_V_full_n == 1'b1))) begin
        output_buffer_0_V_write = 1'b1;
    end else begin
        output_buffer_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd1) & (tmp_948_0_0_s_reg_3255 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_10_V_full_n == 1'b1))) begin
        output_buffer_10_V_write = 1'b1;
    end else begin
        output_buffer_10_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd1) & (tmp_948_0_0_1_reg_3260 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_11_V_full_n == 1'b1))) begin
        output_buffer_11_V_write = 1'b1;
    end else begin
        output_buffer_11_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd1) & (tmp_948_0_0_3_reg_3265 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_12_V_full_n == 1'b1))) begin
        output_buffer_12_V_write = 1'b1;
    end else begin
        output_buffer_12_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd1) & (tmp_948_0_0_7_reg_3270 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_13_V_full_n == 1'b1))) begin
        output_buffer_13_V_write = 1'b1;
    end else begin
        output_buffer_13_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd1) & (tmp_948_0_0_10_reg_3275 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_14_V_full_n == 1'b1))) begin
        output_buffer_14_V_write = 1'b1;
    end else begin
        output_buffer_14_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd1) & (icmp7_reg_3280 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_15_V_full_n == 1'b1))) begin
        output_buffer_15_V_write = 1'b1;
    end else begin
        output_buffer_15_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd1) & (icmp4_reg_3210 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_1_V_full_n == 1'b1))) begin
        output_buffer_1_V_write = 1'b1;
    end else begin
        output_buffer_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd1) & (tmp_948_0_0_2_reg_3215 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_2_V_full_n == 1'b1))) begin
        output_buffer_2_V_write = 1'b1;
    end else begin
        output_buffer_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd1) & (icmp5_reg_3220 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_3_V_full_n == 1'b1))) begin
        output_buffer_3_V_write = 1'b1;
    end else begin
        output_buffer_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd1) & (tmp_948_0_0_4_reg_3225 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_4_V_full_n == 1'b1))) begin
        output_buffer_4_V_write = 1'b1;
    end else begin
        output_buffer_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd1) & (tmp_948_0_0_5_reg_3230 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_5_V_full_n == 1'b1))) begin
        output_buffer_5_V_write = 1'b1;
    end else begin
        output_buffer_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd1) & (tmp_948_0_0_6_reg_3235 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_6_V_full_n == 1'b1))) begin
        output_buffer_6_V_write = 1'b1;
    end else begin
        output_buffer_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd1) & (icmp6_reg_3240 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_7_V_full_n == 1'b1))) begin
        output_buffer_7_V_write = 1'b1;
    end else begin
        output_buffer_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd1) & (tmp_948_0_0_8_reg_3245 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_8_V_full_n == 1'b1))) begin
        output_buffer_8_V_write = 1'b1;
    end else begin
        output_buffer_8_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd1) & (tmp_948_0_0_9_reg_3250 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_9_V_full_n == 1'b1))) begin
        output_buffer_9_V_write = 1'b1;
    end else begin
        output_buffer_9_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_0_ce0 = 1'b1;
    end else begin
        output_temp_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_0_ce1 = 1'b1;
    end else begin
        output_temp_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd0) & (tmp_241_reg_3205 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_0_we1 = 1'b1;
    end else begin
        output_temp_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_10_ce0 = 1'b1;
    end else begin
        output_temp_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_10_ce1 = 1'b1;
    end else begin
        output_temp_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd0) & (tmp_948_0_0_s_reg_3255 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_10_we1 = 1'b1;
    end else begin
        output_temp_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_11_ce0 = 1'b1;
    end else begin
        output_temp_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_11_ce1 = 1'b1;
    end else begin
        output_temp_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd0) & (tmp_948_0_0_1_reg_3260 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_11_we1 = 1'b1;
    end else begin
        output_temp_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_12_ce0 = 1'b1;
    end else begin
        output_temp_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_12_ce1 = 1'b1;
    end else begin
        output_temp_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd0) & (tmp_948_0_0_3_reg_3265 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_12_we1 = 1'b1;
    end else begin
        output_temp_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_13_ce0 = 1'b1;
    end else begin
        output_temp_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_13_ce1 = 1'b1;
    end else begin
        output_temp_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd0) & (tmp_948_0_0_7_reg_3270 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_13_we1 = 1'b1;
    end else begin
        output_temp_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_14_ce0 = 1'b1;
    end else begin
        output_temp_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_14_ce1 = 1'b1;
    end else begin
        output_temp_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd0) & (tmp_948_0_0_10_reg_3275 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_14_we1 = 1'b1;
    end else begin
        output_temp_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_15_ce0 = 1'b1;
    end else begin
        output_temp_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_15_ce1 = 1'b1;
    end else begin
        output_temp_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd0) & (icmp7_reg_3280 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_15_we1 = 1'b1;
    end else begin
        output_temp_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_1_ce0 = 1'b1;
    end else begin
        output_temp_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_1_ce1 = 1'b1;
    end else begin
        output_temp_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd0) & (icmp4_reg_3210 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_1_we1 = 1'b1;
    end else begin
        output_temp_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_2_ce0 = 1'b1;
    end else begin
        output_temp_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_2_ce1 = 1'b1;
    end else begin
        output_temp_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd0) & (tmp_948_0_0_2_reg_3215 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_2_we1 = 1'b1;
    end else begin
        output_temp_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_3_ce0 = 1'b1;
    end else begin
        output_temp_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_3_ce1 = 1'b1;
    end else begin
        output_temp_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd0) & (icmp5_reg_3220 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_3_we1 = 1'b1;
    end else begin
        output_temp_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_4_ce0 = 1'b1;
    end else begin
        output_temp_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_4_ce1 = 1'b1;
    end else begin
        output_temp_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd0) & (tmp_948_0_0_4_reg_3225 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_4_we1 = 1'b1;
    end else begin
        output_temp_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_5_ce0 = 1'b1;
    end else begin
        output_temp_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_5_ce1 = 1'b1;
    end else begin
        output_temp_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd0) & (tmp_948_0_0_5_reg_3230 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_5_we1 = 1'b1;
    end else begin
        output_temp_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_6_ce0 = 1'b1;
    end else begin
        output_temp_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_6_ce1 = 1'b1;
    end else begin
        output_temp_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd0) & (tmp_948_0_0_6_reg_3235 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_6_we1 = 1'b1;
    end else begin
        output_temp_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_7_ce0 = 1'b1;
    end else begin
        output_temp_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_7_ce1 = 1'b1;
    end else begin
        output_temp_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd0) & (icmp6_reg_3240 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_7_we1 = 1'b1;
    end else begin
        output_temp_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_8_ce0 = 1'b1;
    end else begin
        output_temp_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_8_ce1 = 1'b1;
    end else begin
        output_temp_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd0) & (tmp_948_0_0_8_reg_3245 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_8_we1 = 1'b1;
    end else begin
        output_temp_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_9_ce0 = 1'b1;
    end else begin
        output_temp_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_9_ce1 = 1'b1;
    end else begin
        output_temp_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_247_reg_3313 == 1'd0) & (tmp_948_0_0_9_reg_3250 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_9_we1 = 1'b1;
    end else begin
        output_temp_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd0) & (icmp8_fu_2143_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (result_buffer_V_full_n == 1'b1))) begin
        result_buffer_V_write = 1'b1;
    end else begin
        result_buffer_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd0) & (icmp8_fu_2143_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (result_c_V_full_n == 1'b1))) begin
        result_c_V_write = 1'b1;
    end else begin
        result_c_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd0) & (icmp8_fu_2143_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (result_m_V_full_n == 1'b1))) begin
        result_m_V_write = 1'b1;
    end else begin
        result_m_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd0) & (icmp8_fu_2143_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (result_n_V_full_n == 1'b1))) begin
        result_n_V_write = 1'b1;
    end else begin
        result_n_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd0) & (icmp8_fu_2143_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (result_r_V_full_n == 1'b1))) begin
        result_r_V_write = 1'b1;
    end else begin
        result_r_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_241_reg_3205 == 1'd1) & (weight_buffer_0_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_0_V_read = 1'b1;
    end else begin
        weight_buffer_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_s_reg_3255 == 1'd1) & (weight_buffer_10_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_10_V_read = 1'b1;
    end else begin
        weight_buffer_10_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_1_reg_3260 == 1'd1) & (weight_buffer_11_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_11_V_read = 1'b1;
    end else begin
        weight_buffer_11_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_3_reg_3265 == 1'd1) & (weight_buffer_12_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_12_V_read = 1'b1;
    end else begin
        weight_buffer_12_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_7_reg_3270 == 1'd1) & (weight_buffer_13_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_13_V_read = 1'b1;
    end else begin
        weight_buffer_13_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_10_reg_3275 == 1'd1) & (weight_buffer_14_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_14_V_read = 1'b1;
    end else begin
        weight_buffer_14_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (icmp7_reg_3280 == 1'd1) & (weight_buffer_15_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_15_V_read = 1'b1;
    end else begin
        weight_buffer_15_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (icmp4_reg_3210 == 1'd1) & (weight_buffer_1_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_1_V_read = 1'b1;
    end else begin
        weight_buffer_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_2_reg_3215 == 1'd1) & (weight_buffer_2_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_2_V_read = 1'b1;
    end else begin
        weight_buffer_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (icmp5_reg_3220 == 1'd1) & (weight_buffer_3_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_3_V_read = 1'b1;
    end else begin
        weight_buffer_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_4_reg_3225 == 1'd1) & (weight_buffer_4_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_4_V_read = 1'b1;
    end else begin
        weight_buffer_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_5_reg_3230 == 1'd1) & (weight_buffer_5_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_5_V_read = 1'b1;
    end else begin
        weight_buffer_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_6_reg_3235 == 1'd1) & (weight_buffer_6_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_6_V_read = 1'b1;
    end else begin
        weight_buffer_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (icmp6_reg_3240 == 1'd1) & (weight_buffer_7_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_7_V_read = 1'b1;
    end else begin
        weight_buffer_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_8_reg_3245 == 1'd1) & (weight_buffer_8_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_8_V_read = 1'b1;
    end else begin
        weight_buffer_8_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_242_fu_1947_p2 == 1'd1) & (tmp_948_0_0_9_reg_3250 == 1'd1) & (weight_buffer_9_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_9_V_read = 1'b1;
    end else begin
        weight_buffer_9_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((tmp_231_nbwritereq_fu_518_p3 == 1'd0) | (tmp_nbreadreq_fu_510_p3 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((tmp_708_fu_2124_p1 == 1'd0) & (tmp_242_fu_1947_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((tmp_242_fu_1947_p2 == 1'd0) & (tmp_708_fu_2124_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((tmp_248_fu_2153_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_251_fu_2180_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_251_fu_2180_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign cLoops_fu_1457_p3 = ((tmp_232_fu_1451_p2[0:0] === 1'b1) ? 32'd16 : tmp_s_fu_1446_p2);

assign grp_mac_1_1_s_fu_1190_weight_regs_read = ((tmp_241_reg_3205[0:0] === 1'b1) ? weight_temp_0_0_fu_318 : weight_temp_0_0_s_fu_386);

assign grp_mac_1_1_s_fu_1196_weight_regs_read = ((icmp4_reg_3210[0:0] === 1'b1) ? weight_temp_1_0_fu_322 : weight_temp_1_0_s_fu_390);

assign grp_mac_1_1_s_fu_1202_weight_regs_read = ((tmp_948_0_0_2_reg_3215[0:0] === 1'b1) ? weight_temp_2_0_fu_326 : weight_temp_2_0_s_fu_394);

assign grp_mac_1_1_s_fu_1208_weight_regs_read = ((icmp5_reg_3220[0:0] === 1'b1) ? weight_temp_3_0_fu_330 : weight_temp_3_0_s_fu_398);

assign grp_mac_1_1_s_fu_1214_weight_regs_read = ((tmp_948_0_0_4_reg_3225[0:0] === 1'b1) ? weight_temp_4_0_fu_334 : weight_temp_4_0_s_fu_402);

assign grp_mac_1_1_s_fu_1220_weight_regs_read = ((tmp_948_0_0_5_reg_3230[0:0] === 1'b1) ? weight_temp_5_0_fu_338 : weight_temp_5_0_s_fu_406);

assign grp_mac_1_1_s_fu_1226_weight_regs_read = ((tmp_948_0_0_6_reg_3235[0:0] === 1'b1) ? weight_temp_6_0_fu_342 : weight_temp_6_0_s_fu_410);

assign grp_mac_1_1_s_fu_1232_weight_regs_read = ((icmp6_reg_3240[0:0] === 1'b1) ? weight_temp_7_0_fu_346 : weight_temp_7_0_s_fu_414);

assign grp_mac_1_1_s_fu_1238_weight_regs_read = ((tmp_948_0_0_8_reg_3245[0:0] === 1'b1) ? weight_temp_8_0_fu_350 : weight_temp_8_0_s_fu_418);

assign grp_mac_1_1_s_fu_1244_weight_regs_read = ((tmp_948_0_0_9_reg_3250[0:0] === 1'b1) ? weight_temp_9_0_fu_354 : weight_temp_9_0_s_fu_422);

assign grp_mac_1_1_s_fu_1250_weight_regs_read = ((tmp_948_0_0_s_reg_3255[0:0] === 1'b1) ? weight_temp_10_0_fu_358 : weight_temp_10_0_s_fu_426);

assign grp_mac_1_1_s_fu_1256_weight_regs_read = ((tmp_948_0_0_1_reg_3260[0:0] === 1'b1) ? weight_temp_11_0_fu_362 : weight_temp_11_0_s_fu_430);

assign grp_mac_1_1_s_fu_1262_weight_regs_read = ((tmp_948_0_0_3_reg_3265[0:0] === 1'b1) ? weight_temp_12_0_fu_366 : weight_temp_12_0_s_fu_434);

assign grp_mac_1_1_s_fu_1268_weight_regs_read = ((tmp_948_0_0_7_reg_3270[0:0] === 1'b1) ? weight_temp_13_0_fu_370 : weight_temp_13_0_s_fu_438);

assign grp_mac_1_1_s_fu_1274_weight_regs_read = ((tmp_948_0_0_10_reg_3275[0:0] === 1'b1) ? weight_temp_14_0_fu_374 : weight_temp_14_0_s_fu_442);

assign grp_mac_1_1_s_fu_1280_weight_regs_read = ((icmp7_reg_3280[0:0] === 1'b1) ? weight_temp_15_0_fu_378 : weight_temp_15_0_s_fu_382);

assign icmp1_fu_1592_p2 = (($signed(tmp_682_fu_1582_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp2_fu_1662_p2 = (($signed(tmp_687_fu_1652_p4) > $signed(29'd0)) ? 1'b1 : 1'b0);

assign icmp3_fu_1792_p2 = (($signed(tmp_696_fu_1782_p4) > $signed(28'd0)) ? 1'b1 : 1'b0);

assign icmp4_fu_1823_p2 = (($signed(tmp_698_fu_1813_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp5_fu_1845_p2 = (($signed(tmp_699_fu_1835_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp6_fu_1879_p2 = (($signed(tmp_700_fu_1869_p4) > $signed(29'd0)) ? 1'b1 : 1'b0);

assign icmp7_fu_1937_p2 = (($signed(tmp_701_fu_1927_p4) > $signed(28'd0)) ? 1'b1 : 1'b0);

assign icmp8_fu_2143_p2 = (($signed(tmp_702_fu_2133_p4) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_fu_1552_p2 = (($signed(tmp_679_fu_1542_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign mLoops_fu_1495_p3 = ((tmp_236_fu_1489_p2[0:0] === 1'b1) ? 32'd16 : tmp_235_fu_1484_p2);

assign nLoops_fu_1514_p3 = ((tmp_238_fu_1508_p2[0:0] === 1'b1) ? 32'd2 : tmp_237_fu_1503_p2);

assign or_cond_fu_2108_p2 = (tmp_245_fu_2102_p2 & tmp_239_reg_3152);

assign output_buffer_0_V_din = ((grp_fu_1350_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_reg_3707_pp0_iter11_reg);

assign output_buffer_10_V_din = ((grp_fu_1400_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_10_reg_3777_pp0_iter11_reg);

assign output_buffer_11_V_din = ((grp_fu_1405_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_11_reg_3784_pp0_iter11_reg);

assign output_buffer_12_V_din = ((grp_fu_1410_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_12_reg_3791_pp0_iter11_reg);

assign output_buffer_13_V_din = ((grp_fu_1415_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_13_reg_3798_pp0_iter11_reg);

assign output_buffer_14_V_din = ((grp_fu_1420_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_14_reg_3805_pp0_iter11_reg);

assign output_buffer_15_V_din = ((grp_fu_1425_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_s_reg_3812_pp0_iter11_reg);

assign output_buffer_1_V_din = ((grp_fu_1355_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_1_reg_3714_pp0_iter11_reg);

assign output_buffer_2_V_din = ((grp_fu_1360_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_2_reg_3721_pp0_iter11_reg);

assign output_buffer_3_V_din = ((grp_fu_1365_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_3_reg_3728_pp0_iter11_reg);

assign output_buffer_4_V_din = ((grp_fu_1370_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_4_reg_3735_pp0_iter11_reg);

assign output_buffer_5_V_din = ((grp_fu_1375_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_5_reg_3742_pp0_iter11_reg);

assign output_buffer_6_V_din = ((grp_fu_1380_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_6_reg_3749_pp0_iter11_reg);

assign output_buffer_7_V_din = ((grp_fu_1385_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_7_reg_3756_pp0_iter11_reg);

assign output_buffer_8_V_din = ((grp_fu_1390_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_8_reg_3763_pp0_iter11_reg);

assign output_buffer_9_V_din = ((grp_fu_1395_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_9_reg_3770_pp0_iter11_reg);

assign output_temp_0_address0 = tmp_534_cast_fu_2508_p1;

assign output_temp_10_address0 = tmp_534_cast_fu_2508_p1;

assign output_temp_11_address0 = tmp_534_cast_fu_2508_p1;

assign output_temp_12_address0 = tmp_534_cast_fu_2508_p1;

assign output_temp_13_address0 = tmp_534_cast_fu_2508_p1;

assign output_temp_14_address0 = tmp_534_cast_fu_2508_p1;

assign output_temp_15_address0 = tmp_534_cast_fu_2508_p1;

assign output_temp_1_address0 = tmp_534_cast_fu_2508_p1;

assign output_temp_2_address0 = tmp_534_cast_fu_2508_p1;

assign output_temp_3_address0 = tmp_534_cast_fu_2508_p1;

assign output_temp_4_address0 = tmp_534_cast_fu_2508_p1;

assign output_temp_5_address0 = tmp_534_cast_fu_2508_p1;

assign output_temp_6_address0 = tmp_534_cast_fu_2508_p1;

assign output_temp_7_address0 = tmp_534_cast_fu_2508_p1;

assign output_temp_8_address0 = tmp_534_cast_fu_2508_p1;

assign output_temp_9_address0 = tmp_534_cast_fu_2508_p1;

assign p_pn_10_fu_2630_p3 = ((or_cond_reg_3293[0:0] === 1'b1) ? tmp_672_fu_294 : output_temp_10_q0);

assign p_pn_11_fu_2640_p3 = ((or_cond_reg_3293[0:0] === 1'b1) ? tmp_673_fu_298 : output_temp_11_q0);

assign p_pn_12_fu_2650_p3 = ((or_cond_reg_3293[0:0] === 1'b1) ? tmp_674_fu_302 : output_temp_12_q0);

assign p_pn_13_fu_2660_p3 = ((or_cond_reg_3293[0:0] === 1'b1) ? tmp_675_fu_306 : output_temp_13_q0);

assign p_pn_14_fu_2670_p3 = ((or_cond_reg_3293[0:0] === 1'b1) ? tmp_676_fu_310 : output_temp_14_q0);

assign p_pn_1_fu_2540_p3 = ((or_cond_reg_3293[0:0] === 1'b1) ? tmp_663_fu_258 : output_temp_1_q0);

assign p_pn_2_fu_2550_p3 = ((or_cond_reg_3293[0:0] === 1'b1) ? tmp_664_fu_262 : output_temp_2_q0);

assign p_pn_3_fu_2560_p3 = ((or_cond_reg_3293[0:0] === 1'b1) ? tmp_665_fu_266 : output_temp_3_q0);

assign p_pn_4_fu_2570_p3 = ((or_cond_reg_3293[0:0] === 1'b1) ? tmp_666_fu_270 : output_temp_4_q0);

assign p_pn_5_fu_2580_p3 = ((or_cond_reg_3293[0:0] === 1'b1) ? tmp_667_fu_274 : output_temp_5_q0);

assign p_pn_6_fu_2590_p3 = ((or_cond_reg_3293[0:0] === 1'b1) ? tmp_668_fu_278 : output_temp_6_q0);

assign p_pn_7_fu_2600_p3 = ((or_cond_reg_3293[0:0] === 1'b1) ? tmp_669_fu_282 : output_temp_7_q0);

assign p_pn_8_fu_2610_p3 = ((or_cond_reg_3293[0:0] === 1'b1) ? tmp_670_fu_286 : output_temp_8_q0);

assign p_pn_9_fu_2620_p3 = ((or_cond_reg_3293[0:0] === 1'b1) ? tmp_671_fu_290 : output_temp_9_q0);

assign p_pn_fu_2530_p3 = ((or_cond_reg_3293[0:0] === 1'b1) ? tmp_662_fu_254 : output_temp_0_q0);

assign p_pn_s_fu_2680_p3 = ((or_cond_reg_3293[0:0] === 1'b1) ? tmp_677_fu_314 : output_temp_15_q0);

assign rLoops_fu_1476_p3 = ((tmp_234_fu_1470_p2[0:0] === 1'b1) ? 32'd16 : tmp_233_fu_1465_p2);

assign result_buffer_V_din = data_buffer_V_dout;

assign result_c_V_din = tmp_704_reg_3109;

assign result_m_V_din = tmp_706_reg_3121;

assign result_n_V_din = tmp_707_reg_3127;

assign result_r_V_din = tmp_705_reg_3115;

assign tc_2_fu_2185_p2 = (tc_reg_1179 + 5'd1);

assign tc_cast_fu_2176_p1 = tc_reg_1179;

assign tmp_231_nbwritereq_fu_518_p3 = result_buffer_V_full_n;

assign tmp_232_fu_1451_p2 = (($signed(tmp_s_fu_1446_p2) > $signed(32'd16)) ? 1'b1 : 1'b0);

assign tmp_233_fu_1465_p2 = (32'd32 - tmp_705_reg_3115);

assign tmp_234_fu_1470_p2 = (($signed(tmp_233_fu_1465_p2) > $signed(32'd16)) ? 1'b1 : 1'b0);

assign tmp_235_fu_1484_p2 = (32'd256 - tmp_706_reg_3121);

assign tmp_236_fu_1489_p2 = (($signed(tmp_235_fu_1484_p2) > $signed(32'd16)) ? 1'b1 : 1'b0);

assign tmp_237_fu_1503_p2 = (32'd128 - tmp_707_reg_3127);

assign tmp_238_fu_1508_p2 = (($signed(tmp_237_fu_1503_p2) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign tmp_239_fu_1522_p2 = (($signed(tmp_707_reg_3127) < $signed(32'd1)) ? 1'b1 : 1'b0);

assign tmp_240_fu_1527_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_241_fu_1807_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_242_fu_1947_p2 = (($signed(tn_cast_fu_1943_p1) < $signed(nLoops_reg_3146)) ? 1'b1 : 1'b0);

assign tmp_244_fu_2129_p2 = (tmp_707_reg_3127 + nLoops_reg_3146);

assign tmp_245_fu_2102_p2 = ((tn_reg_1157 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_246_fu_2113_p2 = (tmp_707_reg_3127 + tn_cast_fu_1943_p1);

assign tmp_247_fu_2118_p2 = (($signed(tmp_246_fu_2113_p2) > $signed(32'd126)) ? 1'b1 : 1'b0);

assign tmp_248_fu_2153_p2 = (($signed(tr_cast_fu_2149_p1) < $signed(rLoops_reg_3141)) ? 1'b1 : 1'b0);

assign tmp_250_fu_2164_p3 = {{tr_reg_1168}, {4'd0}};

assign tmp_251_fu_2180_p2 = (($signed(tc_cast_fu_2176_p1) < $signed(cLoops_reg_3136)) ? 1'b1 : 1'b0);

assign tmp_253_fu_2199_p2 = (tmp_532_cast_reg_3332 + tmp_371_cast_fu_2195_p1);

assign tmp_371_cast_fu_2195_p1 = tc_reg_1179;

assign tmp_532_cast_fu_2172_p1 = tmp_250_fu_2164_p3;

assign tmp_534_cast_fu_2508_p1 = tmp_253_reg_3366_pp0_iter3_reg;

assign tmp_679_fu_1542_p4 = {{mLoops_fu_1495_p3[31:1]}};

assign tmp_682_fu_1582_p4 = {{mLoops_fu_1495_p3[31:2]}};

assign tmp_687_fu_1652_p4 = {{mLoops_fu_1495_p3[31:3]}};

assign tmp_696_fu_1782_p4 = {{mLoops_fu_1495_p3[31:4]}};

assign tmp_698_fu_1813_p4 = {{mLoops_fu_1495_p3[31:1]}};

assign tmp_699_fu_1835_p4 = {{mLoops_fu_1495_p3[31:2]}};

assign tmp_700_fu_1869_p4 = {{mLoops_fu_1495_p3[31:3]}};

assign tmp_701_fu_1927_p4 = {{mLoops_fu_1495_p3[31:4]}};

assign tmp_702_fu_2133_p4 = {{tmp_244_fu_2129_p2[31:7]}};

assign tmp_708_fu_2124_p1 = data_buffer_V_dout;

assign tmp_922_10_fu_1767_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd14)) ? 1'b1 : 1'b0);

assign tmp_922_1_fu_1722_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd11)) ? 1'b1 : 1'b0);

assign tmp_922_2_fu_1567_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign tmp_922_3_fu_1737_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd12)) ? 1'b1 : 1'b0);

assign tmp_922_4_fu_1607_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd4)) ? 1'b1 : 1'b0);

assign tmp_922_5_fu_1622_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd5)) ? 1'b1 : 1'b0);

assign tmp_922_6_fu_1637_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd6)) ? 1'b1 : 1'b0);

assign tmp_922_7_fu_1752_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd13)) ? 1'b1 : 1'b0);

assign tmp_922_8_fu_1677_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd8)) ? 1'b1 : 1'b0);

assign tmp_922_9_fu_1692_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd9)) ? 1'b1 : 1'b0);

assign tmp_922_s_fu_1707_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd10)) ? 1'b1 : 1'b0);

assign tmp_948_0_0_10_fu_1921_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd14)) ? 1'b1 : 1'b0);

assign tmp_948_0_0_1_fu_1903_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd11)) ? 1'b1 : 1'b0);

assign tmp_948_0_0_2_fu_1829_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign tmp_948_0_0_3_fu_1909_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd12)) ? 1'b1 : 1'b0);

assign tmp_948_0_0_4_fu_1851_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd4)) ? 1'b1 : 1'b0);

assign tmp_948_0_0_5_fu_1857_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd5)) ? 1'b1 : 1'b0);

assign tmp_948_0_0_6_fu_1863_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd6)) ? 1'b1 : 1'b0);

assign tmp_948_0_0_7_fu_1915_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd13)) ? 1'b1 : 1'b0);

assign tmp_948_0_0_8_fu_1885_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd8)) ? 1'b1 : 1'b0);

assign tmp_948_0_0_9_fu_1891_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd9)) ? 1'b1 : 1'b0);

assign tmp_948_0_0_s_fu_1897_p2 = (($signed(mLoops_fu_1495_p3) > $signed(32'd10)) ? 1'b1 : 1'b0);

assign tmp_nbreadreq_fu_510_p3 = data_buffer_V_empty_n;

assign tmp_s_fu_1446_p2 = (32'd32 - tmp_704_reg_3109);

assign tn_18_fu_1952_p2 = (tn_reg_1157 + 2'd1);

assign tn_cast_fu_1943_p1 = tn_reg_1157;

assign tr_9_fu_2158_p2 = (tr_reg_1168 + 5'd1);

assign tr_cast_fu_2149_p1 = tr_reg_1168;

assign weight_regs_0_0_2_we_fu_2300_p3 = ((tmp_241_reg_3205[0:0] === 1'b1) ? weight_temp_0_0_fu_318 : weight_temp_0_0_s_fu_386);

assign weight_regs_10_0_2_w_fu_2380_p3 = ((tmp_948_0_0_s_reg_3255[0:0] === 1'b1) ? weight_temp_10_0_fu_358 : weight_temp_10_0_s_fu_426);

assign weight_regs_11_0_2_w_fu_2388_p3 = ((tmp_948_0_0_1_reg_3260[0:0] === 1'b1) ? weight_temp_11_0_fu_362 : weight_temp_11_0_s_fu_430);

assign weight_regs_12_0_2_w_fu_2396_p3 = ((tmp_948_0_0_3_reg_3265[0:0] === 1'b1) ? weight_temp_12_0_fu_366 : weight_temp_12_0_s_fu_434);

assign weight_regs_13_0_2_w_fu_2404_p3 = ((tmp_948_0_0_7_reg_3270[0:0] === 1'b1) ? weight_temp_13_0_fu_370 : weight_temp_13_0_s_fu_438);

assign weight_regs_14_0_2_w_fu_2412_p3 = ((tmp_948_0_0_10_reg_3275[0:0] === 1'b1) ? weight_temp_14_0_fu_374 : weight_temp_14_0_s_fu_442);

assign weight_regs_15_0_2_w_fu_2420_p3 = ((icmp7_reg_3280[0:0] === 1'b1) ? weight_temp_15_0_fu_378 : weight_temp_15_0_s_fu_382);

assign weight_regs_1_0_2_we_fu_2308_p3 = ((icmp4_reg_3210[0:0] === 1'b1) ? weight_temp_1_0_fu_322 : weight_temp_1_0_s_fu_390);

assign weight_regs_2_0_2_we_fu_2316_p3 = ((tmp_948_0_0_2_reg_3215[0:0] === 1'b1) ? weight_temp_2_0_fu_326 : weight_temp_2_0_s_fu_394);

assign weight_regs_3_0_2_we_fu_2324_p3 = ((icmp5_reg_3220[0:0] === 1'b1) ? weight_temp_3_0_fu_330 : weight_temp_3_0_s_fu_398);

assign weight_regs_4_0_2_we_fu_2332_p3 = ((tmp_948_0_0_4_reg_3225[0:0] === 1'b1) ? weight_temp_4_0_fu_334 : weight_temp_4_0_s_fu_402);

assign weight_regs_5_0_2_we_fu_2340_p3 = ((tmp_948_0_0_5_reg_3230[0:0] === 1'b1) ? weight_temp_5_0_fu_338 : weight_temp_5_0_s_fu_406);

assign weight_regs_6_0_2_we_fu_2348_p3 = ((tmp_948_0_0_6_reg_3235[0:0] === 1'b1) ? weight_temp_6_0_fu_342 : weight_temp_6_0_s_fu_410);

assign weight_regs_7_0_2_we_fu_2356_p3 = ((icmp6_reg_3240[0:0] === 1'b1) ? weight_temp_7_0_fu_346 : weight_temp_7_0_s_fu_414);

assign weight_regs_8_0_2_we_fu_2364_p3 = ((tmp_948_0_0_8_reg_3245[0:0] === 1'b1) ? weight_temp_8_0_fu_350 : weight_temp_8_0_s_fu_418);

assign weight_regs_9_0_2_we_fu_2372_p3 = ((tmp_948_0_0_9_reg_3250[0:0] === 1'b1) ? weight_temp_9_0_fu_354 : weight_temp_9_0_s_fu_422);

always @ (posedge ap_clk) begin
    tmp_532_cast_reg_3332[3:0] <= 4'b0000;
    tmp_532_cast_reg_3332[9] <= 1'b0;
end

endmodule //compute_pro_7
