// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module compute_pro_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        input_buffer_V_dout,
        input_buffer_V_empty_n,
        input_buffer_V_read,
        weight_buffer_0_V_dout,
        weight_buffer_0_V_empty_n,
        weight_buffer_0_V_read,
        weight_buffer_1_V_dout,
        weight_buffer_1_V_empty_n,
        weight_buffer_1_V_read,
        weight_buffer_2_V_dout,
        weight_buffer_2_V_empty_n,
        weight_buffer_2_V_read,
        weight_buffer_3_V_dout,
        weight_buffer_3_V_empty_n,
        weight_buffer_3_V_read,
        weight_buffer_4_V_dout,
        weight_buffer_4_V_empty_n,
        weight_buffer_4_V_read,
        weight_buffer_5_V_dout,
        weight_buffer_5_V_empty_n,
        weight_buffer_5_V_read,
        weight_buffer_6_V_dout,
        weight_buffer_6_V_empty_n,
        weight_buffer_6_V_read,
        weight_buffer_7_V_dout,
        weight_buffer_7_V_empty_n,
        weight_buffer_7_V_read,
        weight_buffer_8_V_dout,
        weight_buffer_8_V_empty_n,
        weight_buffer_8_V_read,
        weight_buffer_9_V_dout,
        weight_buffer_9_V_empty_n,
        weight_buffer_9_V_read,
        weight_buffer_10_V_dout,
        weight_buffer_10_V_empty_n,
        weight_buffer_10_V_read,
        weight_buffer_11_V_dout,
        weight_buffer_11_V_empty_n,
        weight_buffer_11_V_read,
        weight_buffer_12_V_dout,
        weight_buffer_12_V_empty_n,
        weight_buffer_12_V_read,
        weight_buffer_13_V_dout,
        weight_buffer_13_V_empty_n,
        weight_buffer_13_V_read,
        weight_buffer_14_V_dout,
        weight_buffer_14_V_empty_n,
        weight_buffer_14_V_read,
        weight_buffer_15_V_dout,
        weight_buffer_15_V_empty_n,
        weight_buffer_15_V_read,
        beta_buffer_0_V_dout,
        beta_buffer_0_V_empty_n,
        beta_buffer_0_V_read,
        beta_buffer_1_V_dout,
        beta_buffer_1_V_empty_n,
        beta_buffer_1_V_read,
        beta_buffer_2_V_dout,
        beta_buffer_2_V_empty_n,
        beta_buffer_2_V_read,
        beta_buffer_3_V_dout,
        beta_buffer_3_V_empty_n,
        beta_buffer_3_V_read,
        beta_buffer_4_V_dout,
        beta_buffer_4_V_empty_n,
        beta_buffer_4_V_read,
        beta_buffer_5_V_dout,
        beta_buffer_5_V_empty_n,
        beta_buffer_5_V_read,
        beta_buffer_6_V_dout,
        beta_buffer_6_V_empty_n,
        beta_buffer_6_V_read,
        beta_buffer_7_V_dout,
        beta_buffer_7_V_empty_n,
        beta_buffer_7_V_read,
        beta_buffer_8_V_dout,
        beta_buffer_8_V_empty_n,
        beta_buffer_8_V_read,
        beta_buffer_9_V_dout,
        beta_buffer_9_V_empty_n,
        beta_buffer_9_V_read,
        beta_buffer_10_V_dout,
        beta_buffer_10_V_empty_n,
        beta_buffer_10_V_read,
        beta_buffer_11_V_dout,
        beta_buffer_11_V_empty_n,
        beta_buffer_11_V_read,
        beta_buffer_12_V_dout,
        beta_buffer_12_V_empty_n,
        beta_buffer_12_V_read,
        beta_buffer_13_V_dout,
        beta_buffer_13_V_empty_n,
        beta_buffer_13_V_read,
        beta_buffer_14_V_dout,
        beta_buffer_14_V_empty_n,
        beta_buffer_14_V_read,
        beta_buffer_15_V_dout,
        beta_buffer_15_V_empty_n,
        beta_buffer_15_V_read,
        output_buffer_0_V_din,
        output_buffer_0_V_full_n,
        output_buffer_0_V_write,
        output_buffer_1_V_din,
        output_buffer_1_V_full_n,
        output_buffer_1_V_write,
        output_buffer_2_V_din,
        output_buffer_2_V_full_n,
        output_buffer_2_V_write,
        output_buffer_3_V_din,
        output_buffer_3_V_full_n,
        output_buffer_3_V_write,
        output_buffer_4_V_din,
        output_buffer_4_V_full_n,
        output_buffer_4_V_write,
        output_buffer_5_V_din,
        output_buffer_5_V_full_n,
        output_buffer_5_V_write,
        output_buffer_6_V_din,
        output_buffer_6_V_full_n,
        output_buffer_6_V_write,
        output_buffer_7_V_din,
        output_buffer_7_V_full_n,
        output_buffer_7_V_write,
        output_buffer_8_V_din,
        output_buffer_8_V_full_n,
        output_buffer_8_V_write,
        output_buffer_9_V_din,
        output_buffer_9_V_full_n,
        output_buffer_9_V_write,
        output_buffer_10_V_din,
        output_buffer_10_V_full_n,
        output_buffer_10_V_write,
        output_buffer_11_V_din,
        output_buffer_11_V_full_n,
        output_buffer_11_V_write,
        output_buffer_12_V_din,
        output_buffer_12_V_full_n,
        output_buffer_12_V_write,
        output_buffer_13_V_din,
        output_buffer_13_V_full_n,
        output_buffer_13_V_write,
        output_buffer_14_V_din,
        output_buffer_14_V_full_n,
        output_buffer_14_V_write,
        output_buffer_15_V_din,
        output_buffer_15_V_full_n,
        output_buffer_15_V_write,
        data_buffer_V_dout,
        data_buffer_V_empty_n,
        data_buffer_V_read,
        result_buffer_V_din,
        result_buffer_V_full_n,
        result_buffer_V_write,
        data_c_V_dout,
        data_c_V_empty_n,
        data_c_V_read,
        data_r_V_dout,
        data_r_V_empty_n,
        data_r_V_read,
        data_m_V_dout,
        data_m_V_empty_n,
        data_m_V_read,
        data_n_V_dout,
        data_n_V_empty_n,
        data_n_V_read,
        result_c_V_din,
        result_c_V_full_n,
        result_c_V_write,
        result_r_V_din,
        result_r_V_full_n,
        result_r_V_write,
        result_m_V_din,
        result_m_V_full_n,
        result_m_V_write,
        result_n_V_din,
        result_n_V_full_n,
        result_n_V_write
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_pp0_stage0 = 8'd64;
parameter    ap_ST_fsm_state20 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] input_buffer_V_dout;
input   input_buffer_V_empty_n;
output   input_buffer_V_read;
input  [15:0] weight_buffer_0_V_dout;
input   weight_buffer_0_V_empty_n;
output   weight_buffer_0_V_read;
input  [15:0] weight_buffer_1_V_dout;
input   weight_buffer_1_V_empty_n;
output   weight_buffer_1_V_read;
input  [15:0] weight_buffer_2_V_dout;
input   weight_buffer_2_V_empty_n;
output   weight_buffer_2_V_read;
input  [15:0] weight_buffer_3_V_dout;
input   weight_buffer_3_V_empty_n;
output   weight_buffer_3_V_read;
input  [15:0] weight_buffer_4_V_dout;
input   weight_buffer_4_V_empty_n;
output   weight_buffer_4_V_read;
input  [15:0] weight_buffer_5_V_dout;
input   weight_buffer_5_V_empty_n;
output   weight_buffer_5_V_read;
input  [15:0] weight_buffer_6_V_dout;
input   weight_buffer_6_V_empty_n;
output   weight_buffer_6_V_read;
input  [15:0] weight_buffer_7_V_dout;
input   weight_buffer_7_V_empty_n;
output   weight_buffer_7_V_read;
input  [15:0] weight_buffer_8_V_dout;
input   weight_buffer_8_V_empty_n;
output   weight_buffer_8_V_read;
input  [15:0] weight_buffer_9_V_dout;
input   weight_buffer_9_V_empty_n;
output   weight_buffer_9_V_read;
input  [15:0] weight_buffer_10_V_dout;
input   weight_buffer_10_V_empty_n;
output   weight_buffer_10_V_read;
input  [15:0] weight_buffer_11_V_dout;
input   weight_buffer_11_V_empty_n;
output   weight_buffer_11_V_read;
input  [15:0] weight_buffer_12_V_dout;
input   weight_buffer_12_V_empty_n;
output   weight_buffer_12_V_read;
input  [15:0] weight_buffer_13_V_dout;
input   weight_buffer_13_V_empty_n;
output   weight_buffer_13_V_read;
input  [15:0] weight_buffer_14_V_dout;
input   weight_buffer_14_V_empty_n;
output   weight_buffer_14_V_read;
input  [15:0] weight_buffer_15_V_dout;
input   weight_buffer_15_V_empty_n;
output   weight_buffer_15_V_read;
input  [15:0] beta_buffer_0_V_dout;
input   beta_buffer_0_V_empty_n;
output   beta_buffer_0_V_read;
input  [15:0] beta_buffer_1_V_dout;
input   beta_buffer_1_V_empty_n;
output   beta_buffer_1_V_read;
input  [15:0] beta_buffer_2_V_dout;
input   beta_buffer_2_V_empty_n;
output   beta_buffer_2_V_read;
input  [15:0] beta_buffer_3_V_dout;
input   beta_buffer_3_V_empty_n;
output   beta_buffer_3_V_read;
input  [15:0] beta_buffer_4_V_dout;
input   beta_buffer_4_V_empty_n;
output   beta_buffer_4_V_read;
input  [15:0] beta_buffer_5_V_dout;
input   beta_buffer_5_V_empty_n;
output   beta_buffer_5_V_read;
input  [15:0] beta_buffer_6_V_dout;
input   beta_buffer_6_V_empty_n;
output   beta_buffer_6_V_read;
input  [15:0] beta_buffer_7_V_dout;
input   beta_buffer_7_V_empty_n;
output   beta_buffer_7_V_read;
input  [15:0] beta_buffer_8_V_dout;
input   beta_buffer_8_V_empty_n;
output   beta_buffer_8_V_read;
input  [15:0] beta_buffer_9_V_dout;
input   beta_buffer_9_V_empty_n;
output   beta_buffer_9_V_read;
input  [15:0] beta_buffer_10_V_dout;
input   beta_buffer_10_V_empty_n;
output   beta_buffer_10_V_read;
input  [15:0] beta_buffer_11_V_dout;
input   beta_buffer_11_V_empty_n;
output   beta_buffer_11_V_read;
input  [15:0] beta_buffer_12_V_dout;
input   beta_buffer_12_V_empty_n;
output   beta_buffer_12_V_read;
input  [15:0] beta_buffer_13_V_dout;
input   beta_buffer_13_V_empty_n;
output   beta_buffer_13_V_read;
input  [15:0] beta_buffer_14_V_dout;
input   beta_buffer_14_V_empty_n;
output   beta_buffer_14_V_read;
input  [15:0] beta_buffer_15_V_dout;
input   beta_buffer_15_V_empty_n;
output   beta_buffer_15_V_read;
output  [15:0] output_buffer_0_V_din;
input   output_buffer_0_V_full_n;
output   output_buffer_0_V_write;
output  [15:0] output_buffer_1_V_din;
input   output_buffer_1_V_full_n;
output   output_buffer_1_V_write;
output  [15:0] output_buffer_2_V_din;
input   output_buffer_2_V_full_n;
output   output_buffer_2_V_write;
output  [15:0] output_buffer_3_V_din;
input   output_buffer_3_V_full_n;
output   output_buffer_3_V_write;
output  [15:0] output_buffer_4_V_din;
input   output_buffer_4_V_full_n;
output   output_buffer_4_V_write;
output  [15:0] output_buffer_5_V_din;
input   output_buffer_5_V_full_n;
output   output_buffer_5_V_write;
output  [15:0] output_buffer_6_V_din;
input   output_buffer_6_V_full_n;
output   output_buffer_6_V_write;
output  [15:0] output_buffer_7_V_din;
input   output_buffer_7_V_full_n;
output   output_buffer_7_V_write;
output  [15:0] output_buffer_8_V_din;
input   output_buffer_8_V_full_n;
output   output_buffer_8_V_write;
output  [15:0] output_buffer_9_V_din;
input   output_buffer_9_V_full_n;
output   output_buffer_9_V_write;
output  [15:0] output_buffer_10_V_din;
input   output_buffer_10_V_full_n;
output   output_buffer_10_V_write;
output  [15:0] output_buffer_11_V_din;
input   output_buffer_11_V_full_n;
output   output_buffer_11_V_write;
output  [15:0] output_buffer_12_V_din;
input   output_buffer_12_V_full_n;
output   output_buffer_12_V_write;
output  [15:0] output_buffer_13_V_din;
input   output_buffer_13_V_full_n;
output   output_buffer_13_V_write;
output  [15:0] output_buffer_14_V_din;
input   output_buffer_14_V_full_n;
output   output_buffer_14_V_write;
output  [15:0] output_buffer_15_V_din;
input   output_buffer_15_V_full_n;
output   output_buffer_15_V_write;
input   data_buffer_V_dout;
input   data_buffer_V_empty_n;
output   data_buffer_V_read;
output   result_buffer_V_din;
input   result_buffer_V_full_n;
output   result_buffer_V_write;
input  [31:0] data_c_V_dout;
input   data_c_V_empty_n;
output   data_c_V_read;
input  [31:0] data_r_V_dout;
input   data_r_V_empty_n;
output   data_r_V_read;
input  [31:0] data_m_V_dout;
input   data_m_V_empty_n;
output   data_m_V_read;
input  [31:0] data_n_V_dout;
input   data_n_V_empty_n;
output   data_n_V_read;
output  [31:0] result_c_V_din;
input   result_c_V_full_n;
output   result_c_V_write;
output  [31:0] result_r_V_din;
input   result_r_V_full_n;
output   result_r_V_write;
output  [31:0] result_m_V_din;
input   result_m_V_full_n;
output   result_m_V_write;
output  [31:0] result_n_V_din;
input   result_n_V_full_n;
output   result_n_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_buffer_V_read;
reg weight_buffer_0_V_read;
reg weight_buffer_1_V_read;
reg weight_buffer_2_V_read;
reg weight_buffer_3_V_read;
reg weight_buffer_4_V_read;
reg weight_buffer_5_V_read;
reg weight_buffer_6_V_read;
reg weight_buffer_7_V_read;
reg weight_buffer_8_V_read;
reg weight_buffer_9_V_read;
reg weight_buffer_10_V_read;
reg weight_buffer_11_V_read;
reg weight_buffer_12_V_read;
reg weight_buffer_13_V_read;
reg weight_buffer_14_V_read;
reg weight_buffer_15_V_read;
reg beta_buffer_0_V_read;
reg beta_buffer_1_V_read;
reg beta_buffer_2_V_read;
reg beta_buffer_3_V_read;
reg beta_buffer_4_V_read;
reg beta_buffer_5_V_read;
reg beta_buffer_6_V_read;
reg beta_buffer_7_V_read;
reg beta_buffer_8_V_read;
reg beta_buffer_9_V_read;
reg beta_buffer_10_V_read;
reg beta_buffer_11_V_read;
reg beta_buffer_12_V_read;
reg beta_buffer_13_V_read;
reg beta_buffer_14_V_read;
reg beta_buffer_15_V_read;
reg output_buffer_0_V_write;
reg output_buffer_1_V_write;
reg output_buffer_2_V_write;
reg output_buffer_3_V_write;
reg output_buffer_4_V_write;
reg output_buffer_5_V_write;
reg output_buffer_6_V_write;
reg output_buffer_7_V_write;
reg output_buffer_8_V_write;
reg output_buffer_9_V_write;
reg output_buffer_10_V_write;
reg output_buffer_11_V_write;
reg output_buffer_12_V_write;
reg output_buffer_13_V_write;
reg output_buffer_14_V_write;
reg output_buffer_15_V_write;
reg data_buffer_V_read;
reg result_buffer_V_write;
reg data_c_V_read;
reg data_r_V_read;
reg data_m_V_read;
reg data_n_V_read;
reg result_c_V_write;
reg result_r_V_write;
reg result_m_V_write;
reg result_n_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] tc_reg_1177;
reg   [31:0] tmp_1255_reg_3107;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_nbreadreq_fu_508_p3;
wire   [0:0] tmp_206_nbwritereq_fu_516_p3;
reg   [31:0] tmp_1256_reg_3113;
reg   [31:0] tmp_1257_reg_3119;
reg   [31:0] tmp_1258_reg_3125;
wire   [31:0] cLoops_fu_1455_p3;
reg   [31:0] cLoops_reg_3134;
wire    ap_CS_fsm_state4;
wire   [31:0] rLoops_fu_1474_p3;
reg   [31:0] rLoops_reg_3139;
wire   [31:0] nLoops_fu_1512_p3;
reg   [31:0] nLoops_reg_3144;
wire   [0:0] tmp_214_fu_1520_p2;
reg   [0:0] tmp_214_reg_3150;
wire   [0:0] tmp_480_fu_1805_p2;
reg   [0:0] tmp_480_reg_3203;
wire   [0:0] icmp44_fu_1821_p2;
reg   [0:0] icmp44_reg_3208;
wire   [0:0] tmp_597_0_0_2_fu_1827_p2;
reg   [0:0] tmp_597_0_0_2_reg_3213;
wire   [0:0] icmp45_fu_1843_p2;
reg   [0:0] icmp45_reg_3218;
wire   [0:0] tmp_597_0_0_4_fu_1849_p2;
reg   [0:0] tmp_597_0_0_4_reg_3223;
wire   [0:0] tmp_597_0_0_5_fu_1855_p2;
reg   [0:0] tmp_597_0_0_5_reg_3228;
wire   [0:0] tmp_597_0_0_6_fu_1861_p2;
reg   [0:0] tmp_597_0_0_6_reg_3233;
wire   [0:0] icmp46_fu_1877_p2;
reg   [0:0] icmp46_reg_3238;
wire   [0:0] tmp_597_0_0_8_fu_1883_p2;
reg   [0:0] tmp_597_0_0_8_reg_3243;
wire   [0:0] tmp_597_0_0_9_fu_1889_p2;
reg   [0:0] tmp_597_0_0_9_reg_3248;
wire   [0:0] tmp_597_0_0_s_fu_1895_p2;
reg   [0:0] tmp_597_0_0_s_reg_3253;
wire   [0:0] tmp_597_0_0_1_fu_1901_p2;
reg   [0:0] tmp_597_0_0_1_reg_3258;
wire   [0:0] tmp_597_0_0_3_fu_1907_p2;
reg   [0:0] tmp_597_0_0_3_reg_3263;
wire   [0:0] tmp_597_0_0_7_fu_1913_p2;
reg   [0:0] tmp_597_0_0_7_reg_3268;
wire   [0:0] tmp_597_0_0_10_fu_1919_p2;
reg   [0:0] tmp_597_0_0_10_reg_3273;
wire   [0:0] icmp47_fu_1935_p2;
reg   [0:0] icmp47_reg_3278;
wire   [1:0] tn_23_fu_1950_p2;
reg   [1:0] tn_23_reg_3286;
wire    ap_CS_fsm_state5;
wire   [0:0] or_cond_fu_2106_p2;
reg   [0:0] or_cond_reg_3291;
wire   [0:0] tmp_216_fu_1945_p2;
wire   [0:0] tmp_222_fu_2116_p2;
reg   [0:0] tmp_222_reg_3311;
wire   [0:0] tmp_223_fu_2151_p2;
wire    ap_CS_fsm_state6;
wire   [4:0] tr_7_fu_2156_p2;
reg   [4:0] tr_7_reg_3325;
wire   [9:0] tmp_612_cast_fu_2170_p1;
reg   [9:0] tmp_612_cast_reg_3330;
wire   [0:0] tmp_226_fu_2178_p2;
reg   [0:0] tmp_226_reg_3335;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state7_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state11_pp0_stage0_iter4;
wire    ap_block_state12_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state14_pp0_stage0_iter7;
wire    ap_block_state15_pp0_stage0_iter8;
wire    ap_block_state16_pp0_stage0_iter9;
wire    ap_block_state17_pp0_stage0_iter10;
wire    ap_block_state18_pp0_stage0_iter11;
wire    ap_block_state19_pp0_stage0_iter12;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] tc_2_fu_2183_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [15:0] tmp_1291_reg_3344;
wire   [9:0] tmp_482_fu_2197_p2;
reg   [9:0] tmp_482_reg_3364;
reg   [9:0] tmp_482_reg_3364_pp0_iter1_reg;
reg   [9:0] tmp_482_reg_3364_pp0_iter2_reg;
reg   [9:0] tmp_482_reg_3364_pp0_iter3_reg;
wire   [15:0] weight_regs_0_0_2_we_fu_2298_p3;
wire   [15:0] weight_regs_1_0_2_we_fu_2306_p3;
wire   [15:0] weight_regs_2_0_2_we_fu_2314_p3;
wire   [15:0] weight_regs_3_0_2_we_fu_2322_p3;
wire   [15:0] weight_regs_4_0_2_we_fu_2330_p3;
wire   [15:0] weight_regs_5_0_2_we_fu_2338_p3;
wire   [15:0] weight_regs_6_0_2_we_fu_2346_p3;
wire   [15:0] weight_regs_7_0_2_we_fu_2354_p3;
wire   [15:0] weight_regs_8_0_2_we_fu_2362_p3;
wire   [15:0] weight_regs_9_0_2_we_fu_2370_p3;
wire   [15:0] weight_regs_10_0_2_w_fu_2378_p3;
wire   [15:0] weight_regs_11_0_2_w_fu_2386_p3;
wire   [15:0] weight_regs_12_0_2_w_fu_2394_p3;
wire   [15:0] weight_regs_13_0_2_w_fu_2402_p3;
wire   [15:0] weight_regs_14_0_2_w_fu_2410_p3;
wire   [15:0] weight_regs_15_0_2_w_fu_2418_p3;
reg   [7:0] output_temp_0_addr_reg_3449;
reg   [7:0] output_temp_0_addr_reg_3449_pp0_iter5_reg;
reg   [7:0] output_temp_0_addr_reg_3449_pp0_iter6_reg;
reg   [7:0] output_temp_0_addr_reg_3449_pp0_iter7_reg;
reg   [7:0] output_temp_0_addr_reg_3449_pp0_iter8_reg;
reg   [7:0] output_temp_0_addr_reg_3449_pp0_iter9_reg;
reg   [7:0] output_temp_1_addr_reg_3455;
reg   [7:0] output_temp_1_addr_reg_3455_pp0_iter5_reg;
reg   [7:0] output_temp_1_addr_reg_3455_pp0_iter6_reg;
reg   [7:0] output_temp_1_addr_reg_3455_pp0_iter7_reg;
reg   [7:0] output_temp_1_addr_reg_3455_pp0_iter8_reg;
reg   [7:0] output_temp_1_addr_reg_3455_pp0_iter9_reg;
reg   [7:0] output_temp_2_addr_reg_3461;
reg   [7:0] output_temp_2_addr_reg_3461_pp0_iter5_reg;
reg   [7:0] output_temp_2_addr_reg_3461_pp0_iter6_reg;
reg   [7:0] output_temp_2_addr_reg_3461_pp0_iter7_reg;
reg   [7:0] output_temp_2_addr_reg_3461_pp0_iter8_reg;
reg   [7:0] output_temp_2_addr_reg_3461_pp0_iter9_reg;
reg   [7:0] output_temp_3_addr_reg_3467;
reg   [7:0] output_temp_3_addr_reg_3467_pp0_iter5_reg;
reg   [7:0] output_temp_3_addr_reg_3467_pp0_iter6_reg;
reg   [7:0] output_temp_3_addr_reg_3467_pp0_iter7_reg;
reg   [7:0] output_temp_3_addr_reg_3467_pp0_iter8_reg;
reg   [7:0] output_temp_3_addr_reg_3467_pp0_iter9_reg;
reg   [7:0] output_temp_4_addr_reg_3473;
reg   [7:0] output_temp_4_addr_reg_3473_pp0_iter5_reg;
reg   [7:0] output_temp_4_addr_reg_3473_pp0_iter6_reg;
reg   [7:0] output_temp_4_addr_reg_3473_pp0_iter7_reg;
reg   [7:0] output_temp_4_addr_reg_3473_pp0_iter8_reg;
reg   [7:0] output_temp_4_addr_reg_3473_pp0_iter9_reg;
reg   [7:0] output_temp_5_addr_reg_3479;
reg   [7:0] output_temp_5_addr_reg_3479_pp0_iter5_reg;
reg   [7:0] output_temp_5_addr_reg_3479_pp0_iter6_reg;
reg   [7:0] output_temp_5_addr_reg_3479_pp0_iter7_reg;
reg   [7:0] output_temp_5_addr_reg_3479_pp0_iter8_reg;
reg   [7:0] output_temp_5_addr_reg_3479_pp0_iter9_reg;
reg   [7:0] output_temp_6_addr_reg_3485;
reg   [7:0] output_temp_6_addr_reg_3485_pp0_iter5_reg;
reg   [7:0] output_temp_6_addr_reg_3485_pp0_iter6_reg;
reg   [7:0] output_temp_6_addr_reg_3485_pp0_iter7_reg;
reg   [7:0] output_temp_6_addr_reg_3485_pp0_iter8_reg;
reg   [7:0] output_temp_6_addr_reg_3485_pp0_iter9_reg;
reg   [7:0] output_temp_7_addr_reg_3491;
reg   [7:0] output_temp_7_addr_reg_3491_pp0_iter5_reg;
reg   [7:0] output_temp_7_addr_reg_3491_pp0_iter6_reg;
reg   [7:0] output_temp_7_addr_reg_3491_pp0_iter7_reg;
reg   [7:0] output_temp_7_addr_reg_3491_pp0_iter8_reg;
reg   [7:0] output_temp_7_addr_reg_3491_pp0_iter9_reg;
reg   [7:0] output_temp_8_addr_reg_3497;
reg   [7:0] output_temp_8_addr_reg_3497_pp0_iter5_reg;
reg   [7:0] output_temp_8_addr_reg_3497_pp0_iter6_reg;
reg   [7:0] output_temp_8_addr_reg_3497_pp0_iter7_reg;
reg   [7:0] output_temp_8_addr_reg_3497_pp0_iter8_reg;
reg   [7:0] output_temp_8_addr_reg_3497_pp0_iter9_reg;
reg   [7:0] output_temp_9_addr_reg_3503;
reg   [7:0] output_temp_9_addr_reg_3503_pp0_iter5_reg;
reg   [7:0] output_temp_9_addr_reg_3503_pp0_iter6_reg;
reg   [7:0] output_temp_9_addr_reg_3503_pp0_iter7_reg;
reg   [7:0] output_temp_9_addr_reg_3503_pp0_iter8_reg;
reg   [7:0] output_temp_9_addr_reg_3503_pp0_iter9_reg;
reg   [7:0] output_temp_10_addr_reg_3509;
reg   [7:0] output_temp_10_addr_reg_3509_pp0_iter5_reg;
reg   [7:0] output_temp_10_addr_reg_3509_pp0_iter6_reg;
reg   [7:0] output_temp_10_addr_reg_3509_pp0_iter7_reg;
reg   [7:0] output_temp_10_addr_reg_3509_pp0_iter8_reg;
reg   [7:0] output_temp_10_addr_reg_3509_pp0_iter9_reg;
reg   [7:0] output_temp_11_addr_reg_3515;
reg   [7:0] output_temp_11_addr_reg_3515_pp0_iter5_reg;
reg   [7:0] output_temp_11_addr_reg_3515_pp0_iter6_reg;
reg   [7:0] output_temp_11_addr_reg_3515_pp0_iter7_reg;
reg   [7:0] output_temp_11_addr_reg_3515_pp0_iter8_reg;
reg   [7:0] output_temp_11_addr_reg_3515_pp0_iter9_reg;
reg   [7:0] output_temp_12_addr_reg_3521;
reg   [7:0] output_temp_12_addr_reg_3521_pp0_iter5_reg;
reg   [7:0] output_temp_12_addr_reg_3521_pp0_iter6_reg;
reg   [7:0] output_temp_12_addr_reg_3521_pp0_iter7_reg;
reg   [7:0] output_temp_12_addr_reg_3521_pp0_iter8_reg;
reg   [7:0] output_temp_12_addr_reg_3521_pp0_iter9_reg;
reg   [7:0] output_temp_13_addr_reg_3527;
reg   [7:0] output_temp_13_addr_reg_3527_pp0_iter5_reg;
reg   [7:0] output_temp_13_addr_reg_3527_pp0_iter6_reg;
reg   [7:0] output_temp_13_addr_reg_3527_pp0_iter7_reg;
reg   [7:0] output_temp_13_addr_reg_3527_pp0_iter8_reg;
reg   [7:0] output_temp_13_addr_reg_3527_pp0_iter9_reg;
reg   [7:0] output_temp_14_addr_reg_3533;
reg   [7:0] output_temp_14_addr_reg_3533_pp0_iter5_reg;
reg   [7:0] output_temp_14_addr_reg_3533_pp0_iter6_reg;
reg   [7:0] output_temp_14_addr_reg_3533_pp0_iter7_reg;
reg   [7:0] output_temp_14_addr_reg_3533_pp0_iter8_reg;
reg   [7:0] output_temp_14_addr_reg_3533_pp0_iter9_reg;
reg   [7:0] output_temp_15_addr_reg_3539;
reg   [7:0] output_temp_15_addr_reg_3539_pp0_iter5_reg;
reg   [7:0] output_temp_15_addr_reg_3539_pp0_iter6_reg;
reg   [7:0] output_temp_15_addr_reg_3539_pp0_iter7_reg;
reg   [7:0] output_temp_15_addr_reg_3539_pp0_iter8_reg;
reg   [7:0] output_temp_15_addr_reg_3539_pp0_iter9_reg;
wire   [15:0] grp_mac_1_1_s_fu_1188_ap_return;
reg   [15:0] tmp_229_reg_3545;
wire   [15:0] p_pn_fu_2528_p3;
reg   [15:0] p_pn_reg_3550;
wire   [15:0] grp_mac_1_1_s_fu_1194_ap_return;
reg   [15:0] tmp_233_reg_3555;
wire   [15:0] p_pn_1_fu_2538_p3;
reg   [15:0] p_pn_1_reg_3560;
wire   [15:0] grp_mac_1_1_s_fu_1200_ap_return;
reg   [15:0] tmp_236_reg_3565;
wire   [15:0] p_pn_2_fu_2548_p3;
reg   [15:0] p_pn_2_reg_3570;
wire   [15:0] grp_mac_1_1_s_fu_1206_ap_return;
reg   [15:0] tmp_239_reg_3575;
wire   [15:0] p_pn_3_fu_2558_p3;
reg   [15:0] p_pn_3_reg_3580;
wire   [15:0] grp_mac_1_1_s_fu_1212_ap_return;
reg   [15:0] tmp_242_reg_3585;
wire   [15:0] p_pn_4_fu_2568_p3;
reg   [15:0] p_pn_4_reg_3590;
wire   [15:0] grp_mac_1_1_s_fu_1218_ap_return;
reg   [15:0] tmp_245_reg_3595;
wire   [15:0] p_pn_5_fu_2578_p3;
reg   [15:0] p_pn_5_reg_3600;
wire   [15:0] grp_mac_1_1_s_fu_1224_ap_return;
reg   [15:0] tmp_248_reg_3605;
wire   [15:0] p_pn_6_fu_2588_p3;
reg   [15:0] p_pn_6_reg_3610;
wire   [15:0] grp_mac_1_1_s_fu_1230_ap_return;
reg   [15:0] tmp_251_reg_3615;
wire   [15:0] p_pn_7_fu_2598_p3;
reg   [15:0] p_pn_7_reg_3620;
wire   [15:0] grp_mac_1_1_s_fu_1236_ap_return;
reg   [15:0] tmp_254_reg_3625;
wire   [15:0] p_pn_8_fu_2608_p3;
reg   [15:0] p_pn_8_reg_3630;
wire   [15:0] grp_mac_1_1_s_fu_1242_ap_return;
reg   [15:0] tmp_257_reg_3635;
wire   [15:0] p_pn_9_fu_2618_p3;
reg   [15:0] p_pn_9_reg_3640;
wire   [15:0] grp_mac_1_1_s_fu_1248_ap_return;
reg   [15:0] tmp_260_reg_3645;
wire   [15:0] p_pn_s_fu_2628_p3;
reg   [15:0] p_pn_s_reg_3650;
wire   [15:0] grp_mac_1_1_s_fu_1254_ap_return;
reg   [15:0] tmp_263_reg_3655;
wire   [15:0] p_pn_10_fu_2638_p3;
reg   [15:0] p_pn_10_reg_3660;
wire   [15:0] grp_mac_1_1_s_fu_1260_ap_return;
reg   [15:0] tmp_275_reg_3665;
wire   [15:0] p_pn_11_fu_2648_p3;
reg   [15:0] p_pn_11_reg_3670;
wire   [15:0] grp_mac_1_1_s_fu_1266_ap_return;
reg   [15:0] tmp_281_reg_3675;
wire   [15:0] p_pn_12_fu_2658_p3;
reg   [15:0] p_pn_12_reg_3680;
wire   [15:0] grp_mac_1_1_s_fu_1272_ap_return;
reg   [15:0] tmp_286_reg_3685;
wire   [15:0] p_pn_13_fu_2668_p3;
reg   [15:0] p_pn_13_reg_3690;
wire   [15:0] grp_mac_1_1_s_fu_1278_ap_return;
reg   [15:0] tmp_289_reg_3695;
wire   [15:0] p_pn_14_fu_2678_p3;
reg   [15:0] p_pn_14_reg_3700;
wire   [15:0] grp_fu_1284_p2;
reg   [15:0] acc_dat_reg_3705;
reg   [15:0] acc_dat_reg_3705_pp0_iter10_reg;
reg   [15:0] acc_dat_reg_3705_pp0_iter11_reg;
wire   [15:0] grp_fu_1288_p2;
reg   [15:0] acc_dat_1_reg_3712;
reg   [15:0] acc_dat_1_reg_3712_pp0_iter10_reg;
reg   [15:0] acc_dat_1_reg_3712_pp0_iter11_reg;
wire   [15:0] grp_fu_1292_p2;
reg   [15:0] acc_dat_2_reg_3719;
reg   [15:0] acc_dat_2_reg_3719_pp0_iter10_reg;
reg   [15:0] acc_dat_2_reg_3719_pp0_iter11_reg;
wire   [15:0] grp_fu_1296_p2;
reg   [15:0] acc_dat_3_reg_3726;
reg   [15:0] acc_dat_3_reg_3726_pp0_iter10_reg;
reg   [15:0] acc_dat_3_reg_3726_pp0_iter11_reg;
wire   [15:0] grp_fu_1300_p2;
reg   [15:0] acc_dat_4_reg_3733;
reg   [15:0] acc_dat_4_reg_3733_pp0_iter10_reg;
reg   [15:0] acc_dat_4_reg_3733_pp0_iter11_reg;
wire   [15:0] grp_fu_1304_p2;
reg   [15:0] acc_dat_5_reg_3740;
reg   [15:0] acc_dat_5_reg_3740_pp0_iter10_reg;
reg   [15:0] acc_dat_5_reg_3740_pp0_iter11_reg;
wire   [15:0] grp_fu_1308_p2;
reg   [15:0] acc_dat_6_reg_3747;
reg   [15:0] acc_dat_6_reg_3747_pp0_iter10_reg;
reg   [15:0] acc_dat_6_reg_3747_pp0_iter11_reg;
wire   [15:0] grp_fu_1312_p2;
reg   [15:0] acc_dat_7_reg_3754;
reg   [15:0] acc_dat_7_reg_3754_pp0_iter10_reg;
reg   [15:0] acc_dat_7_reg_3754_pp0_iter11_reg;
wire   [15:0] grp_fu_1316_p2;
reg   [15:0] acc_dat_8_reg_3761;
reg   [15:0] acc_dat_8_reg_3761_pp0_iter10_reg;
reg   [15:0] acc_dat_8_reg_3761_pp0_iter11_reg;
wire   [15:0] grp_fu_1320_p2;
reg   [15:0] acc_dat_9_reg_3768;
reg   [15:0] acc_dat_9_reg_3768_pp0_iter10_reg;
reg   [15:0] acc_dat_9_reg_3768_pp0_iter11_reg;
wire   [15:0] grp_fu_1324_p2;
reg   [15:0] acc_dat_s_reg_3775;
reg   [15:0] acc_dat_s_reg_3775_pp0_iter10_reg;
reg   [15:0] acc_dat_s_reg_3775_pp0_iter11_reg;
wire   [15:0] grp_fu_1328_p2;
reg   [15:0] acc_dat_10_reg_3782;
reg   [15:0] acc_dat_10_reg_3782_pp0_iter10_reg;
reg   [15:0] acc_dat_10_reg_3782_pp0_iter11_reg;
wire   [15:0] grp_fu_1332_p2;
reg   [15:0] acc_dat_11_reg_3789;
reg   [15:0] acc_dat_11_reg_3789_pp0_iter10_reg;
reg   [15:0] acc_dat_11_reg_3789_pp0_iter11_reg;
wire   [15:0] grp_fu_1336_p2;
reg   [15:0] acc_dat_12_reg_3796;
reg   [15:0] acc_dat_12_reg_3796_pp0_iter10_reg;
reg   [15:0] acc_dat_12_reg_3796_pp0_iter11_reg;
wire   [15:0] grp_fu_1340_p2;
reg   [15:0] acc_dat_13_reg_3803;
reg   [15:0] acc_dat_13_reg_3803_pp0_iter10_reg;
reg   [15:0] acc_dat_13_reg_3803_pp0_iter11_reg;
wire   [15:0] grp_fu_1344_p2;
reg   [15:0] acc_dat_14_reg_3810;
reg   [15:0] acc_dat_14_reg_3810_pp0_iter10_reg;
reg   [15:0] acc_dat_14_reg_3810_pp0_iter11_reg;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state7;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
wire   [7:0] output_temp_0_address0;
reg    output_temp_0_ce0;
wire   [15:0] output_temp_0_q0;
reg    output_temp_0_ce1;
reg    output_temp_0_we1;
wire   [7:0] output_temp_1_address0;
reg    output_temp_1_ce0;
wire   [15:0] output_temp_1_q0;
reg    output_temp_1_ce1;
reg    output_temp_1_we1;
wire   [7:0] output_temp_2_address0;
reg    output_temp_2_ce0;
wire   [15:0] output_temp_2_q0;
reg    output_temp_2_ce1;
reg    output_temp_2_we1;
wire   [7:0] output_temp_3_address0;
reg    output_temp_3_ce0;
wire   [15:0] output_temp_3_q0;
reg    output_temp_3_ce1;
reg    output_temp_3_we1;
wire   [7:0] output_temp_4_address0;
reg    output_temp_4_ce0;
wire   [15:0] output_temp_4_q0;
reg    output_temp_4_ce1;
reg    output_temp_4_we1;
wire   [7:0] output_temp_5_address0;
reg    output_temp_5_ce0;
wire   [15:0] output_temp_5_q0;
reg    output_temp_5_ce1;
reg    output_temp_5_we1;
wire   [7:0] output_temp_6_address0;
reg    output_temp_6_ce0;
wire   [15:0] output_temp_6_q0;
reg    output_temp_6_ce1;
reg    output_temp_6_we1;
wire   [7:0] output_temp_7_address0;
reg    output_temp_7_ce0;
wire   [15:0] output_temp_7_q0;
reg    output_temp_7_ce1;
reg    output_temp_7_we1;
wire   [7:0] output_temp_8_address0;
reg    output_temp_8_ce0;
wire   [15:0] output_temp_8_q0;
reg    output_temp_8_ce1;
reg    output_temp_8_we1;
wire   [7:0] output_temp_9_address0;
reg    output_temp_9_ce0;
wire   [15:0] output_temp_9_q0;
reg    output_temp_9_ce1;
reg    output_temp_9_we1;
wire   [7:0] output_temp_10_address0;
reg    output_temp_10_ce0;
wire   [15:0] output_temp_10_q0;
reg    output_temp_10_ce1;
reg    output_temp_10_we1;
wire   [7:0] output_temp_11_address0;
reg    output_temp_11_ce0;
wire   [15:0] output_temp_11_q0;
reg    output_temp_11_ce1;
reg    output_temp_11_we1;
wire   [7:0] output_temp_12_address0;
reg    output_temp_12_ce0;
wire   [15:0] output_temp_12_q0;
reg    output_temp_12_ce1;
reg    output_temp_12_we1;
wire   [7:0] output_temp_13_address0;
reg    output_temp_13_ce0;
wire   [15:0] output_temp_13_q0;
reg    output_temp_13_ce1;
reg    output_temp_13_we1;
wire   [7:0] output_temp_14_address0;
reg    output_temp_14_ce0;
wire   [15:0] output_temp_14_q0;
reg    output_temp_14_ce1;
reg    output_temp_14_we1;
wire   [7:0] output_temp_15_address0;
reg    output_temp_15_ce0;
wire   [15:0] output_temp_15_q0;
reg    output_temp_15_ce1;
reg    output_temp_15_we1;
wire   [15:0] grp_mac_1_1_s_fu_1188_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1194_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1200_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1206_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1212_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1218_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1224_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1230_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1236_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1242_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1248_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1254_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1260_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1266_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1272_weight_regs_read;
wire   [15:0] grp_mac_1_1_s_fu_1278_weight_regs_read;
reg   [1:0] tn_reg_1155;
reg   [4:0] tr_reg_1166;
wire    ap_CS_fsm_state20;
wire    ap_block_pp0_stage0;
wire   [63:0] tmp_613_cast_fu_2506_p1;
wire   [0:0] tmp_215_fu_1525_p2;
wire   [0:0] icmp_fu_1550_p2;
wire   [0:0] tmp_571_2_fu_1565_p2;
wire   [0:0] icmp41_fu_1590_p2;
wire   [0:0] tmp_571_4_fu_1605_p2;
wire   [0:0] tmp_571_5_fu_1620_p2;
wire   [0:0] tmp_571_6_fu_1635_p2;
wire   [0:0] icmp42_fu_1660_p2;
wire   [0:0] tmp_571_8_fu_1675_p2;
wire   [0:0] tmp_571_9_fu_1690_p2;
wire   [0:0] tmp_571_s_fu_1705_p2;
wire   [0:0] tmp_571_1_fu_1720_p2;
wire   [0:0] tmp_571_3_fu_1735_p2;
wire   [0:0] tmp_571_7_fu_1750_p2;
wire   [0:0] tmp_571_10_fu_1765_p2;
wire   [0:0] icmp43_fu_1790_p2;
wire   [0:0] icmp48_fu_2141_p2;
wire   [0:0] tmp_1259_fu_2122_p1;
wire    ap_block_pp0_stage0_01001;
reg   [15:0] tmp_1213_fu_252;
reg   [15:0] tmp_1214_fu_256;
reg   [15:0] tmp_1215_fu_260;
reg   [15:0] tmp_1216_fu_264;
reg   [15:0] tmp_1217_fu_268;
reg   [15:0] tmp_1218_fu_272;
reg   [15:0] tmp_1219_fu_276;
reg   [15:0] tmp_1220_fu_280;
reg   [15:0] tmp_1221_fu_284;
reg   [15:0] tmp_1222_fu_288;
reg   [15:0] tmp_1223_fu_292;
reg   [15:0] tmp_1224_fu_296;
reg   [15:0] tmp_1225_fu_300;
reg   [15:0] tmp_1226_fu_304;
reg   [15:0] tmp_1227_fu_308;
reg   [15:0] tmp_1228_fu_312;
reg   [15:0] weight_temp_0_0_fu_316;
reg   [15:0] weight_temp_1_0_fu_320;
reg   [15:0] weight_temp_2_0_fu_324;
reg   [15:0] weight_temp_3_0_fu_328;
reg   [15:0] weight_temp_4_0_fu_332;
reg   [15:0] weight_temp_5_0_fu_336;
reg   [15:0] weight_temp_6_0_fu_340;
reg   [15:0] weight_temp_7_0_fu_344;
reg   [15:0] weight_temp_8_0_fu_348;
reg   [15:0] weight_temp_9_0_fu_352;
reg   [15:0] weight_temp_10_0_fu_356;
reg   [15:0] weight_temp_11_0_fu_360;
reg   [15:0] weight_temp_12_0_fu_364;
reg   [15:0] weight_temp_13_0_fu_368;
reg   [15:0] weight_temp_14_0_fu_372;
reg   [15:0] weight_temp_15_0_fu_376;
reg   [15:0] weight_temp_15_0_s_fu_380;
reg   [15:0] weight_temp_0_0_s_fu_384;
reg   [15:0] weight_temp_1_0_s_fu_388;
reg   [15:0] weight_temp_2_0_s_fu_392;
reg   [15:0] weight_temp_3_0_s_fu_396;
reg   [15:0] weight_temp_4_0_s_fu_400;
reg   [15:0] weight_temp_5_0_s_fu_404;
reg   [15:0] weight_temp_6_0_s_fu_408;
reg   [15:0] weight_temp_7_0_s_fu_412;
reg   [15:0] weight_temp_8_0_s_fu_416;
reg   [15:0] weight_temp_9_0_s_fu_420;
reg   [15:0] weight_temp_10_0_s_fu_424;
reg   [15:0] weight_temp_11_0_s_fu_428;
reg   [15:0] weight_temp_12_0_s_fu_432;
reg   [15:0] weight_temp_13_0_s_fu_436;
reg   [15:0] weight_temp_14_0_s_fu_440;
wire   [31:0] tmp_s_fu_1444_p2;
wire   [0:0] tmp_207_fu_1449_p2;
wire   [31:0] tmp_208_fu_1463_p2;
wire   [0:0] tmp_209_fu_1468_p2;
wire   [31:0] tmp_210_fu_1482_p2;
wire   [0:0] tmp_211_fu_1487_p2;
wire   [31:0] tmp_212_fu_1501_p2;
wire   [0:0] tmp_213_fu_1506_p2;
wire   [31:0] mLoops_fu_1493_p3;
wire   [30:0] tmp_1230_fu_1540_p4;
wire   [29:0] tmp_1233_fu_1580_p4;
wire   [28:0] tmp_1238_fu_1650_p4;
wire   [27:0] tmp_1247_fu_1780_p4;
wire   [30:0] tmp_1249_fu_1811_p4;
wire   [29:0] tmp_1250_fu_1833_p4;
wire   [28:0] tmp_1251_fu_1867_p4;
wire   [27:0] tmp_1252_fu_1925_p4;
wire   [31:0] tn_cast_fu_1941_p1;
wire   [0:0] tmp_220_fu_2100_p2;
wire   [31:0] tmp_221_fu_2111_p2;
wire   [31:0] tmp_218_fu_2127_p2;
wire   [25:0] tmp_1253_fu_2131_p4;
wire   [31:0] tr_cast_fu_2147_p1;
wire   [8:0] tmp_481_fu_2162_p3;
wire   [31:0] tc_cast_fu_2174_p1;
wire   [9:0] tmp_228_cast_fu_2193_p1;
wire   [0:0] grp_fu_1348_p2;
wire   [0:0] grp_fu_1353_p2;
wire   [0:0] grp_fu_1358_p2;
wire   [0:0] grp_fu_1363_p2;
wire   [0:0] grp_fu_1368_p2;
wire   [0:0] grp_fu_1373_p2;
wire   [0:0] grp_fu_1378_p2;
wire   [0:0] grp_fu_1383_p2;
wire   [0:0] grp_fu_1388_p2;
wire   [0:0] grp_fu_1393_p2;
wire   [0:0] grp_fu_1398_p2;
wire   [0:0] grp_fu_1403_p2;
wire   [0:0] grp_fu_1408_p2;
wire   [0:0] grp_fu_1413_p2;
wire   [0:0] grp_fu_1418_p2;
wire   [0:0] grp_fu_1423_p2;
wire    ap_block_pp0_stage0_00001;
reg   [7:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
end

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_0_address0),
    .ce0(output_temp_0_ce0),
    .q0(output_temp_0_q0),
    .address1(output_temp_0_addr_reg_3449_pp0_iter9_reg),
    .ce1(output_temp_0_ce1),
    .we1(output_temp_0_we1),
    .d1(acc_dat_reg_3705)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_1_address0),
    .ce0(output_temp_1_ce0),
    .q0(output_temp_1_q0),
    .address1(output_temp_1_addr_reg_3455_pp0_iter9_reg),
    .ce1(output_temp_1_ce1),
    .we1(output_temp_1_we1),
    .d1(acc_dat_1_reg_3712)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_2_address0),
    .ce0(output_temp_2_ce0),
    .q0(output_temp_2_q0),
    .address1(output_temp_2_addr_reg_3461_pp0_iter9_reg),
    .ce1(output_temp_2_ce1),
    .we1(output_temp_2_we1),
    .d1(acc_dat_2_reg_3719)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_3_address0),
    .ce0(output_temp_3_ce0),
    .q0(output_temp_3_q0),
    .address1(output_temp_3_addr_reg_3467_pp0_iter9_reg),
    .ce1(output_temp_3_ce1),
    .we1(output_temp_3_we1),
    .d1(acc_dat_3_reg_3726)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_4_address0),
    .ce0(output_temp_4_ce0),
    .q0(output_temp_4_q0),
    .address1(output_temp_4_addr_reg_3473_pp0_iter9_reg),
    .ce1(output_temp_4_ce1),
    .we1(output_temp_4_we1),
    .d1(acc_dat_4_reg_3733)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_5_address0),
    .ce0(output_temp_5_ce0),
    .q0(output_temp_5_q0),
    .address1(output_temp_5_addr_reg_3479_pp0_iter9_reg),
    .ce1(output_temp_5_ce1),
    .we1(output_temp_5_we1),
    .d1(acc_dat_5_reg_3740)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_6_address0),
    .ce0(output_temp_6_ce0),
    .q0(output_temp_6_q0),
    .address1(output_temp_6_addr_reg_3485_pp0_iter9_reg),
    .ce1(output_temp_6_ce1),
    .we1(output_temp_6_we1),
    .d1(acc_dat_6_reg_3747)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_7_address0),
    .ce0(output_temp_7_ce0),
    .q0(output_temp_7_q0),
    .address1(output_temp_7_addr_reg_3491_pp0_iter9_reg),
    .ce1(output_temp_7_ce1),
    .we1(output_temp_7_we1),
    .d1(acc_dat_7_reg_3754)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_8_address0),
    .ce0(output_temp_8_ce0),
    .q0(output_temp_8_q0),
    .address1(output_temp_8_addr_reg_3497_pp0_iter9_reg),
    .ce1(output_temp_8_ce1),
    .we1(output_temp_8_we1),
    .d1(acc_dat_8_reg_3761)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_9_address0),
    .ce0(output_temp_9_ce0),
    .q0(output_temp_9_q0),
    .address1(output_temp_9_addr_reg_3503_pp0_iter9_reg),
    .ce1(output_temp_9_ce1),
    .we1(output_temp_9_we1),
    .d1(acc_dat_9_reg_3768)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_10_address0),
    .ce0(output_temp_10_ce0),
    .q0(output_temp_10_q0),
    .address1(output_temp_10_addr_reg_3509_pp0_iter9_reg),
    .ce1(output_temp_10_ce1),
    .we1(output_temp_10_we1),
    .d1(acc_dat_s_reg_3775)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_11_address0),
    .ce0(output_temp_11_ce0),
    .q0(output_temp_11_q0),
    .address1(output_temp_11_addr_reg_3515_pp0_iter9_reg),
    .ce1(output_temp_11_ce1),
    .we1(output_temp_11_we1),
    .d1(acc_dat_10_reg_3782)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_12_address0),
    .ce0(output_temp_12_ce0),
    .q0(output_temp_12_q0),
    .address1(output_temp_12_addr_reg_3521_pp0_iter9_reg),
    .ce1(output_temp_12_ce1),
    .we1(output_temp_12_we1),
    .d1(acc_dat_11_reg_3789)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_13_address0),
    .ce0(output_temp_13_ce0),
    .q0(output_temp_13_q0),
    .address1(output_temp_13_addr_reg_3527_pp0_iter9_reg),
    .ce1(output_temp_13_ce1),
    .we1(output_temp_13_we1),
    .d1(acc_dat_12_reg_3796)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_14_address0),
    .ce0(output_temp_14_ce0),
    .q0(output_temp_14_q0),
    .address1(output_temp_14_addr_reg_3533_pp0_iter9_reg),
    .ce1(output_temp_14_ce1),
    .we1(output_temp_14_we1),
    .d1(acc_dat_13_reg_3803)
);

compute_pro_5_outdEe #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
output_temp_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_temp_15_address0),
    .ce0(output_temp_15_ce0),
    .q0(output_temp_15_q0),
    .address1(output_temp_15_addr_reg_3539_pp0_iter9_reg),
    .ce1(output_temp_15_ce1),
    .we1(output_temp_15_we1),
    .d1(acc_dat_14_reg_3810)
);

mac_1_1_s grp_mac_1_1_s_fu_1188(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_1291_reg_3344),
    .weight_regs_read(grp_mac_1_1_s_fu_1188_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1188_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1194(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_1291_reg_3344),
    .weight_regs_read(grp_mac_1_1_s_fu_1194_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1194_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1200(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_1291_reg_3344),
    .weight_regs_read(grp_mac_1_1_s_fu_1200_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1200_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1206(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_1291_reg_3344),
    .weight_regs_read(grp_mac_1_1_s_fu_1206_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1206_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1212(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_1291_reg_3344),
    .weight_regs_read(grp_mac_1_1_s_fu_1212_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1212_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1218(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_1291_reg_3344),
    .weight_regs_read(grp_mac_1_1_s_fu_1218_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1218_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1224(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_1291_reg_3344),
    .weight_regs_read(grp_mac_1_1_s_fu_1224_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1224_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1230(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_1291_reg_3344),
    .weight_regs_read(grp_mac_1_1_s_fu_1230_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1230_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1236(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_1291_reg_3344),
    .weight_regs_read(grp_mac_1_1_s_fu_1236_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1236_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1242(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_1291_reg_3344),
    .weight_regs_read(grp_mac_1_1_s_fu_1242_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1242_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1248(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_1291_reg_3344),
    .weight_regs_read(grp_mac_1_1_s_fu_1248_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1248_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1254(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_1291_reg_3344),
    .weight_regs_read(grp_mac_1_1_s_fu_1254_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1254_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1260(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_1291_reg_3344),
    .weight_regs_read(grp_mac_1_1_s_fu_1260_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1260_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1266(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_1291_reg_3344),
    .weight_regs_read(grp_mac_1_1_s_fu_1266_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1266_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1272(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_1291_reg_3344),
    .weight_regs_read(grp_mac_1_1_s_fu_1272_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1272_ap_return)
);

mac_1_1_s grp_mac_1_1_s_fu_1278(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_regs_read(tmp_1291_reg_3344),
    .weight_regs_read(grp_mac_1_1_s_fu_1278_weight_regs_read),
    .ap_return(grp_mac_1_1_s_fu_1278_ap_return)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1181(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_reg_3550),
    .din1(tmp_229_reg_3545),
    .ce(1'b1),
    .dout(grp_fu_1284_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1182(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_1_reg_3560),
    .din1(tmp_233_reg_3555),
    .ce(1'b1),
    .dout(grp_fu_1288_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1183(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_2_reg_3570),
    .din1(tmp_236_reg_3565),
    .ce(1'b1),
    .dout(grp_fu_1292_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1184(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_3_reg_3580),
    .din1(tmp_239_reg_3575),
    .ce(1'b1),
    .dout(grp_fu_1296_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1185(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_4_reg_3590),
    .din1(tmp_242_reg_3585),
    .ce(1'b1),
    .dout(grp_fu_1300_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1186(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_5_reg_3600),
    .din1(tmp_245_reg_3595),
    .ce(1'b1),
    .dout(grp_fu_1304_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1187(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_6_reg_3610),
    .din1(tmp_248_reg_3605),
    .ce(1'b1),
    .dout(grp_fu_1308_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1188(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_7_reg_3620),
    .din1(tmp_251_reg_3615),
    .ce(1'b1),
    .dout(grp_fu_1312_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1189(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_8_reg_3630),
    .din1(tmp_254_reg_3625),
    .ce(1'b1),
    .dout(grp_fu_1316_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1190(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_9_reg_3640),
    .din1(tmp_257_reg_3635),
    .ce(1'b1),
    .dout(grp_fu_1320_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1191(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_s_reg_3650),
    .din1(tmp_260_reg_3645),
    .ce(1'b1),
    .dout(grp_fu_1324_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1192(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_10_reg_3660),
    .din1(tmp_263_reg_3655),
    .ce(1'b1),
    .dout(grp_fu_1328_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1193(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_11_reg_3670),
    .din1(tmp_275_reg_3665),
    .ce(1'b1),
    .dout(grp_fu_1332_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1194(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_12_reg_3680),
    .din1(tmp_281_reg_3675),
    .ce(1'b1),
    .dout(grp_fu_1336_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1195(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_13_reg_3690),
    .din1(tmp_286_reg_3685),
    .ce(1'b1),
    .dout(grp_fu_1340_p2)
);

moblie_net_hadd_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
moblie_net_hadd_1bkb_U1196(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_pn_14_reg_3700),
    .din1(tmp_289_reg_3695),
    .ce(1'b1),
    .dout(grp_fu_1344_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1197(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_reg_3705),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1348_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1198(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_1_reg_3712),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1353_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1199(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_2_reg_3719),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1358_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1200(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_3_reg_3726),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1363_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1201(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_4_reg_3733),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1368_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1202(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_5_reg_3740),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1373_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1203(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_6_reg_3747),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1378_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1204(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_7_reg_3754),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1383_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1205(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_8_reg_3761),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1388_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1206(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_9_reg_3768),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1393_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1207(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_s_reg_3775),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1398_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1208(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_10_reg_3782),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1403_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1209(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_11_reg_3789),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1408_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1210(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_12_reg_3796),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1413_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1211(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_13_reg_3803),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1418_p2)
);

moblie_net_hcmp_1tde #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
moblie_net_hcmp_1tde_U1212(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_dat_14_reg_3810),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1423_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((tmp_1259_fu_2122_p1 == 1'd0) & (tmp_216_fu_1945_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((tmp_223_fu_2151_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state7)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state7);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end else if (((tmp_223_fu_2151_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_226_fu_2178_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tc_reg_1177 <= tc_2_fu_2183_p2;
    end else if (((tmp_223_fu_2151_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        tc_reg_1177 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_223_fu_2151_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        tn_reg_1155 <= tn_23_reg_3286;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tn_reg_1155 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tr_reg_1166 <= tr_7_reg_3325;
    end else if (((tmp_216_fu_1945_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        tr_reg_1166 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_597_0_0_1_reg_3258 == 1'd1))) begin
        acc_dat_10_reg_3782 <= grp_fu_1328_p2;
        p_pn_10_reg_3660 <= p_pn_10_fu_2638_p3;
        tmp_263_reg_3655 <= grp_mac_1_1_s_fu_1254_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        acc_dat_10_reg_3782_pp0_iter10_reg <= acc_dat_10_reg_3782;
        acc_dat_10_reg_3782_pp0_iter11_reg <= acc_dat_10_reg_3782_pp0_iter10_reg;
        acc_dat_11_reg_3789_pp0_iter10_reg <= acc_dat_11_reg_3789;
        acc_dat_11_reg_3789_pp0_iter11_reg <= acc_dat_11_reg_3789_pp0_iter10_reg;
        acc_dat_12_reg_3796_pp0_iter10_reg <= acc_dat_12_reg_3796;
        acc_dat_12_reg_3796_pp0_iter11_reg <= acc_dat_12_reg_3796_pp0_iter10_reg;
        acc_dat_13_reg_3803_pp0_iter10_reg <= acc_dat_13_reg_3803;
        acc_dat_13_reg_3803_pp0_iter11_reg <= acc_dat_13_reg_3803_pp0_iter10_reg;
        acc_dat_14_reg_3810_pp0_iter10_reg <= acc_dat_14_reg_3810;
        acc_dat_14_reg_3810_pp0_iter11_reg <= acc_dat_14_reg_3810_pp0_iter10_reg;
        acc_dat_1_reg_3712_pp0_iter10_reg <= acc_dat_1_reg_3712;
        acc_dat_1_reg_3712_pp0_iter11_reg <= acc_dat_1_reg_3712_pp0_iter10_reg;
        acc_dat_2_reg_3719_pp0_iter10_reg <= acc_dat_2_reg_3719;
        acc_dat_2_reg_3719_pp0_iter11_reg <= acc_dat_2_reg_3719_pp0_iter10_reg;
        acc_dat_3_reg_3726_pp0_iter10_reg <= acc_dat_3_reg_3726;
        acc_dat_3_reg_3726_pp0_iter11_reg <= acc_dat_3_reg_3726_pp0_iter10_reg;
        acc_dat_4_reg_3733_pp0_iter10_reg <= acc_dat_4_reg_3733;
        acc_dat_4_reg_3733_pp0_iter11_reg <= acc_dat_4_reg_3733_pp0_iter10_reg;
        acc_dat_5_reg_3740_pp0_iter10_reg <= acc_dat_5_reg_3740;
        acc_dat_5_reg_3740_pp0_iter11_reg <= acc_dat_5_reg_3740_pp0_iter10_reg;
        acc_dat_6_reg_3747_pp0_iter10_reg <= acc_dat_6_reg_3747;
        acc_dat_6_reg_3747_pp0_iter11_reg <= acc_dat_6_reg_3747_pp0_iter10_reg;
        acc_dat_7_reg_3754_pp0_iter10_reg <= acc_dat_7_reg_3754;
        acc_dat_7_reg_3754_pp0_iter11_reg <= acc_dat_7_reg_3754_pp0_iter10_reg;
        acc_dat_8_reg_3761_pp0_iter10_reg <= acc_dat_8_reg_3761;
        acc_dat_8_reg_3761_pp0_iter11_reg <= acc_dat_8_reg_3761_pp0_iter10_reg;
        acc_dat_9_reg_3768_pp0_iter10_reg <= acc_dat_9_reg_3768;
        acc_dat_9_reg_3768_pp0_iter11_reg <= acc_dat_9_reg_3768_pp0_iter10_reg;
        acc_dat_reg_3705_pp0_iter10_reg <= acc_dat_reg_3705;
        acc_dat_reg_3705_pp0_iter11_reg <= acc_dat_reg_3705_pp0_iter10_reg;
        acc_dat_s_reg_3775_pp0_iter10_reg <= acc_dat_s_reg_3775;
        acc_dat_s_reg_3775_pp0_iter11_reg <= acc_dat_s_reg_3775_pp0_iter10_reg;
        output_temp_0_addr_reg_3449 <= tmp_613_cast_fu_2506_p1;
        output_temp_0_addr_reg_3449_pp0_iter5_reg <= output_temp_0_addr_reg_3449;
        output_temp_0_addr_reg_3449_pp0_iter6_reg <= output_temp_0_addr_reg_3449_pp0_iter5_reg;
        output_temp_0_addr_reg_3449_pp0_iter7_reg <= output_temp_0_addr_reg_3449_pp0_iter6_reg;
        output_temp_0_addr_reg_3449_pp0_iter8_reg <= output_temp_0_addr_reg_3449_pp0_iter7_reg;
        output_temp_0_addr_reg_3449_pp0_iter9_reg <= output_temp_0_addr_reg_3449_pp0_iter8_reg;
        output_temp_10_addr_reg_3509 <= tmp_613_cast_fu_2506_p1;
        output_temp_10_addr_reg_3509_pp0_iter5_reg <= output_temp_10_addr_reg_3509;
        output_temp_10_addr_reg_3509_pp0_iter6_reg <= output_temp_10_addr_reg_3509_pp0_iter5_reg;
        output_temp_10_addr_reg_3509_pp0_iter7_reg <= output_temp_10_addr_reg_3509_pp0_iter6_reg;
        output_temp_10_addr_reg_3509_pp0_iter8_reg <= output_temp_10_addr_reg_3509_pp0_iter7_reg;
        output_temp_10_addr_reg_3509_pp0_iter9_reg <= output_temp_10_addr_reg_3509_pp0_iter8_reg;
        output_temp_11_addr_reg_3515 <= tmp_613_cast_fu_2506_p1;
        output_temp_11_addr_reg_3515_pp0_iter5_reg <= output_temp_11_addr_reg_3515;
        output_temp_11_addr_reg_3515_pp0_iter6_reg <= output_temp_11_addr_reg_3515_pp0_iter5_reg;
        output_temp_11_addr_reg_3515_pp0_iter7_reg <= output_temp_11_addr_reg_3515_pp0_iter6_reg;
        output_temp_11_addr_reg_3515_pp0_iter8_reg <= output_temp_11_addr_reg_3515_pp0_iter7_reg;
        output_temp_11_addr_reg_3515_pp0_iter9_reg <= output_temp_11_addr_reg_3515_pp0_iter8_reg;
        output_temp_12_addr_reg_3521 <= tmp_613_cast_fu_2506_p1;
        output_temp_12_addr_reg_3521_pp0_iter5_reg <= output_temp_12_addr_reg_3521;
        output_temp_12_addr_reg_3521_pp0_iter6_reg <= output_temp_12_addr_reg_3521_pp0_iter5_reg;
        output_temp_12_addr_reg_3521_pp0_iter7_reg <= output_temp_12_addr_reg_3521_pp0_iter6_reg;
        output_temp_12_addr_reg_3521_pp0_iter8_reg <= output_temp_12_addr_reg_3521_pp0_iter7_reg;
        output_temp_12_addr_reg_3521_pp0_iter9_reg <= output_temp_12_addr_reg_3521_pp0_iter8_reg;
        output_temp_13_addr_reg_3527 <= tmp_613_cast_fu_2506_p1;
        output_temp_13_addr_reg_3527_pp0_iter5_reg <= output_temp_13_addr_reg_3527;
        output_temp_13_addr_reg_3527_pp0_iter6_reg <= output_temp_13_addr_reg_3527_pp0_iter5_reg;
        output_temp_13_addr_reg_3527_pp0_iter7_reg <= output_temp_13_addr_reg_3527_pp0_iter6_reg;
        output_temp_13_addr_reg_3527_pp0_iter8_reg <= output_temp_13_addr_reg_3527_pp0_iter7_reg;
        output_temp_13_addr_reg_3527_pp0_iter9_reg <= output_temp_13_addr_reg_3527_pp0_iter8_reg;
        output_temp_14_addr_reg_3533 <= tmp_613_cast_fu_2506_p1;
        output_temp_14_addr_reg_3533_pp0_iter5_reg <= output_temp_14_addr_reg_3533;
        output_temp_14_addr_reg_3533_pp0_iter6_reg <= output_temp_14_addr_reg_3533_pp0_iter5_reg;
        output_temp_14_addr_reg_3533_pp0_iter7_reg <= output_temp_14_addr_reg_3533_pp0_iter6_reg;
        output_temp_14_addr_reg_3533_pp0_iter8_reg <= output_temp_14_addr_reg_3533_pp0_iter7_reg;
        output_temp_14_addr_reg_3533_pp0_iter9_reg <= output_temp_14_addr_reg_3533_pp0_iter8_reg;
        output_temp_15_addr_reg_3539 <= tmp_613_cast_fu_2506_p1;
        output_temp_15_addr_reg_3539_pp0_iter5_reg <= output_temp_15_addr_reg_3539;
        output_temp_15_addr_reg_3539_pp0_iter6_reg <= output_temp_15_addr_reg_3539_pp0_iter5_reg;
        output_temp_15_addr_reg_3539_pp0_iter7_reg <= output_temp_15_addr_reg_3539_pp0_iter6_reg;
        output_temp_15_addr_reg_3539_pp0_iter8_reg <= output_temp_15_addr_reg_3539_pp0_iter7_reg;
        output_temp_15_addr_reg_3539_pp0_iter9_reg <= output_temp_15_addr_reg_3539_pp0_iter8_reg;
        output_temp_1_addr_reg_3455 <= tmp_613_cast_fu_2506_p1;
        output_temp_1_addr_reg_3455_pp0_iter5_reg <= output_temp_1_addr_reg_3455;
        output_temp_1_addr_reg_3455_pp0_iter6_reg <= output_temp_1_addr_reg_3455_pp0_iter5_reg;
        output_temp_1_addr_reg_3455_pp0_iter7_reg <= output_temp_1_addr_reg_3455_pp0_iter6_reg;
        output_temp_1_addr_reg_3455_pp0_iter8_reg <= output_temp_1_addr_reg_3455_pp0_iter7_reg;
        output_temp_1_addr_reg_3455_pp0_iter9_reg <= output_temp_1_addr_reg_3455_pp0_iter8_reg;
        output_temp_2_addr_reg_3461 <= tmp_613_cast_fu_2506_p1;
        output_temp_2_addr_reg_3461_pp0_iter5_reg <= output_temp_2_addr_reg_3461;
        output_temp_2_addr_reg_3461_pp0_iter6_reg <= output_temp_2_addr_reg_3461_pp0_iter5_reg;
        output_temp_2_addr_reg_3461_pp0_iter7_reg <= output_temp_2_addr_reg_3461_pp0_iter6_reg;
        output_temp_2_addr_reg_3461_pp0_iter8_reg <= output_temp_2_addr_reg_3461_pp0_iter7_reg;
        output_temp_2_addr_reg_3461_pp0_iter9_reg <= output_temp_2_addr_reg_3461_pp0_iter8_reg;
        output_temp_3_addr_reg_3467 <= tmp_613_cast_fu_2506_p1;
        output_temp_3_addr_reg_3467_pp0_iter5_reg <= output_temp_3_addr_reg_3467;
        output_temp_3_addr_reg_3467_pp0_iter6_reg <= output_temp_3_addr_reg_3467_pp0_iter5_reg;
        output_temp_3_addr_reg_3467_pp0_iter7_reg <= output_temp_3_addr_reg_3467_pp0_iter6_reg;
        output_temp_3_addr_reg_3467_pp0_iter8_reg <= output_temp_3_addr_reg_3467_pp0_iter7_reg;
        output_temp_3_addr_reg_3467_pp0_iter9_reg <= output_temp_3_addr_reg_3467_pp0_iter8_reg;
        output_temp_4_addr_reg_3473 <= tmp_613_cast_fu_2506_p1;
        output_temp_4_addr_reg_3473_pp0_iter5_reg <= output_temp_4_addr_reg_3473;
        output_temp_4_addr_reg_3473_pp0_iter6_reg <= output_temp_4_addr_reg_3473_pp0_iter5_reg;
        output_temp_4_addr_reg_3473_pp0_iter7_reg <= output_temp_4_addr_reg_3473_pp0_iter6_reg;
        output_temp_4_addr_reg_3473_pp0_iter8_reg <= output_temp_4_addr_reg_3473_pp0_iter7_reg;
        output_temp_4_addr_reg_3473_pp0_iter9_reg <= output_temp_4_addr_reg_3473_pp0_iter8_reg;
        output_temp_5_addr_reg_3479 <= tmp_613_cast_fu_2506_p1;
        output_temp_5_addr_reg_3479_pp0_iter5_reg <= output_temp_5_addr_reg_3479;
        output_temp_5_addr_reg_3479_pp0_iter6_reg <= output_temp_5_addr_reg_3479_pp0_iter5_reg;
        output_temp_5_addr_reg_3479_pp0_iter7_reg <= output_temp_5_addr_reg_3479_pp0_iter6_reg;
        output_temp_5_addr_reg_3479_pp0_iter8_reg <= output_temp_5_addr_reg_3479_pp0_iter7_reg;
        output_temp_5_addr_reg_3479_pp0_iter9_reg <= output_temp_5_addr_reg_3479_pp0_iter8_reg;
        output_temp_6_addr_reg_3485 <= tmp_613_cast_fu_2506_p1;
        output_temp_6_addr_reg_3485_pp0_iter5_reg <= output_temp_6_addr_reg_3485;
        output_temp_6_addr_reg_3485_pp0_iter6_reg <= output_temp_6_addr_reg_3485_pp0_iter5_reg;
        output_temp_6_addr_reg_3485_pp0_iter7_reg <= output_temp_6_addr_reg_3485_pp0_iter6_reg;
        output_temp_6_addr_reg_3485_pp0_iter8_reg <= output_temp_6_addr_reg_3485_pp0_iter7_reg;
        output_temp_6_addr_reg_3485_pp0_iter9_reg <= output_temp_6_addr_reg_3485_pp0_iter8_reg;
        output_temp_7_addr_reg_3491 <= tmp_613_cast_fu_2506_p1;
        output_temp_7_addr_reg_3491_pp0_iter5_reg <= output_temp_7_addr_reg_3491;
        output_temp_7_addr_reg_3491_pp0_iter6_reg <= output_temp_7_addr_reg_3491_pp0_iter5_reg;
        output_temp_7_addr_reg_3491_pp0_iter7_reg <= output_temp_7_addr_reg_3491_pp0_iter6_reg;
        output_temp_7_addr_reg_3491_pp0_iter8_reg <= output_temp_7_addr_reg_3491_pp0_iter7_reg;
        output_temp_7_addr_reg_3491_pp0_iter9_reg <= output_temp_7_addr_reg_3491_pp0_iter8_reg;
        output_temp_8_addr_reg_3497 <= tmp_613_cast_fu_2506_p1;
        output_temp_8_addr_reg_3497_pp0_iter5_reg <= output_temp_8_addr_reg_3497;
        output_temp_8_addr_reg_3497_pp0_iter6_reg <= output_temp_8_addr_reg_3497_pp0_iter5_reg;
        output_temp_8_addr_reg_3497_pp0_iter7_reg <= output_temp_8_addr_reg_3497_pp0_iter6_reg;
        output_temp_8_addr_reg_3497_pp0_iter8_reg <= output_temp_8_addr_reg_3497_pp0_iter7_reg;
        output_temp_8_addr_reg_3497_pp0_iter9_reg <= output_temp_8_addr_reg_3497_pp0_iter8_reg;
        output_temp_9_addr_reg_3503 <= tmp_613_cast_fu_2506_p1;
        output_temp_9_addr_reg_3503_pp0_iter5_reg <= output_temp_9_addr_reg_3503;
        output_temp_9_addr_reg_3503_pp0_iter6_reg <= output_temp_9_addr_reg_3503_pp0_iter5_reg;
        output_temp_9_addr_reg_3503_pp0_iter7_reg <= output_temp_9_addr_reg_3503_pp0_iter6_reg;
        output_temp_9_addr_reg_3503_pp0_iter8_reg <= output_temp_9_addr_reg_3503_pp0_iter7_reg;
        output_temp_9_addr_reg_3503_pp0_iter9_reg <= output_temp_9_addr_reg_3503_pp0_iter8_reg;
        tmp_482_reg_3364_pp0_iter2_reg <= tmp_482_reg_3364_pp0_iter1_reg;
        tmp_482_reg_3364_pp0_iter3_reg <= tmp_482_reg_3364_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_597_0_0_3_reg_3263 == 1'd1))) begin
        acc_dat_11_reg_3789 <= grp_fu_1332_p2;
        p_pn_11_reg_3670 <= p_pn_11_fu_2648_p3;
        tmp_275_reg_3665 <= grp_mac_1_1_s_fu_1260_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_597_0_0_7_reg_3268 == 1'd1))) begin
        acc_dat_12_reg_3796 <= grp_fu_1336_p2;
        p_pn_12_reg_3680 <= p_pn_12_fu_2658_p3;
        tmp_281_reg_3675 <= grp_mac_1_1_s_fu_1266_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_597_0_0_10_reg_3273 == 1'd1))) begin
        acc_dat_13_reg_3803 <= grp_fu_1340_p2;
        p_pn_13_reg_3690 <= p_pn_13_fu_2668_p3;
        tmp_286_reg_3685 <= grp_mac_1_1_s_fu_1272_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp47_reg_3278 == 1'd1))) begin
        acc_dat_14_reg_3810 <= grp_fu_1344_p2;
        p_pn_14_reg_3700 <= p_pn_14_fu_2678_p3;
        tmp_289_reg_3695 <= grp_mac_1_1_s_fu_1278_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp44_reg_3208 == 1'd1))) begin
        acc_dat_1_reg_3712 <= grp_fu_1288_p2;
        p_pn_1_reg_3560 <= p_pn_1_fu_2538_p3;
        tmp_233_reg_3555 <= grp_mac_1_1_s_fu_1194_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_597_0_0_2_reg_3213 == 1'd1))) begin
        acc_dat_2_reg_3719 <= grp_fu_1292_p2;
        p_pn_2_reg_3570 <= p_pn_2_fu_2548_p3;
        tmp_236_reg_3565 <= grp_mac_1_1_s_fu_1200_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp45_reg_3218 == 1'd1))) begin
        acc_dat_3_reg_3726 <= grp_fu_1296_p2;
        p_pn_3_reg_3580 <= p_pn_3_fu_2558_p3;
        tmp_239_reg_3575 <= grp_mac_1_1_s_fu_1206_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_597_0_0_4_reg_3223 == 1'd1))) begin
        acc_dat_4_reg_3733 <= grp_fu_1300_p2;
        p_pn_4_reg_3590 <= p_pn_4_fu_2568_p3;
        tmp_242_reg_3585 <= grp_mac_1_1_s_fu_1212_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_597_0_0_5_reg_3228 == 1'd1))) begin
        acc_dat_5_reg_3740 <= grp_fu_1304_p2;
        p_pn_5_reg_3600 <= p_pn_5_fu_2578_p3;
        tmp_245_reg_3595 <= grp_mac_1_1_s_fu_1218_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_597_0_0_6_reg_3233 == 1'd1))) begin
        acc_dat_6_reg_3747 <= grp_fu_1308_p2;
        p_pn_6_reg_3610 <= p_pn_6_fu_2588_p3;
        tmp_248_reg_3605 <= grp_mac_1_1_s_fu_1224_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp46_reg_3238 == 1'd1))) begin
        acc_dat_7_reg_3754 <= grp_fu_1312_p2;
        p_pn_7_reg_3620 <= p_pn_7_fu_2598_p3;
        tmp_251_reg_3615 <= grp_mac_1_1_s_fu_1230_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_597_0_0_8_reg_3243 == 1'd1))) begin
        acc_dat_8_reg_3761 <= grp_fu_1316_p2;
        p_pn_8_reg_3630 <= p_pn_8_fu_2608_p3;
        tmp_254_reg_3625 <= grp_mac_1_1_s_fu_1236_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_597_0_0_9_reg_3248 == 1'd1))) begin
        acc_dat_9_reg_3768 <= grp_fu_1320_p2;
        p_pn_9_reg_3640 <= p_pn_9_fu_2618_p3;
        tmp_257_reg_3635 <= grp_mac_1_1_s_fu_1242_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_480_reg_3203 == 1'd1))) begin
        acc_dat_reg_3705 <= grp_fu_1284_p2;
        p_pn_reg_3550 <= p_pn_fu_2528_p3;
        tmp_229_reg_3545 <= grp_mac_1_1_s_fu_1188_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_597_0_0_s_reg_3253 == 1'd1))) begin
        acc_dat_s_reg_3775 <= grp_fu_1324_p2;
        p_pn_s_reg_3650 <= p_pn_s_fu_2628_p3;
        tmp_260_reg_3645 <= grp_mac_1_1_s_fu_1248_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cLoops_reg_3134 <= cLoops_fu_1455_p3;
        icmp44_reg_3208 <= icmp44_fu_1821_p2;
        icmp45_reg_3218 <= icmp45_fu_1843_p2;
        icmp46_reg_3238 <= icmp46_fu_1877_p2;
        icmp47_reg_3278 <= icmp47_fu_1935_p2;
        nLoops_reg_3144 <= nLoops_fu_1512_p3;
        rLoops_reg_3139 <= rLoops_fu_1474_p3;
        tmp_214_reg_3150 <= tmp_214_fu_1520_p2;
        tmp_480_reg_3203 <= tmp_480_fu_1805_p2;
        tmp_597_0_0_10_reg_3273 <= tmp_597_0_0_10_fu_1919_p2;
        tmp_597_0_0_1_reg_3258 <= tmp_597_0_0_1_fu_1901_p2;
        tmp_597_0_0_2_reg_3213 <= tmp_597_0_0_2_fu_1827_p2;
        tmp_597_0_0_3_reg_3263 <= tmp_597_0_0_3_fu_1907_p2;
        tmp_597_0_0_4_reg_3223 <= tmp_597_0_0_4_fu_1849_p2;
        tmp_597_0_0_5_reg_3228 <= tmp_597_0_0_5_fu_1855_p2;
        tmp_597_0_0_6_reg_3233 <= tmp_597_0_0_6_fu_1861_p2;
        tmp_597_0_0_7_reg_3268 <= tmp_597_0_0_7_fu_1913_p2;
        tmp_597_0_0_8_reg_3243 <= tmp_597_0_0_8_fu_1883_p2;
        tmp_597_0_0_9_reg_3248 <= tmp_597_0_0_9_fu_1889_p2;
        tmp_597_0_0_s_reg_3253 <= tmp_597_0_0_s_fu_1895_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        or_cond_reg_3291 <= or_cond_fu_2106_p2;
        tmp_222_reg_3311 <= tmp_222_fu_2116_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_215_fu_1525_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_1213_fu_252 <= beta_buffer_0_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (icmp_fu_1550_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_1214_fu_256 <= beta_buffer_1_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_2_fu_1565_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_1215_fu_260 <= beta_buffer_2_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (icmp41_fu_1590_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_1216_fu_264 <= beta_buffer_3_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_4_fu_1605_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_1217_fu_268 <= beta_buffer_4_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_5_fu_1620_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_1218_fu_272 <= beta_buffer_5_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_6_fu_1635_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_1219_fu_276 <= beta_buffer_6_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (icmp42_fu_1660_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_1220_fu_280 <= beta_buffer_7_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_8_fu_1675_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_1221_fu_284 <= beta_buffer_8_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_9_fu_1690_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_1222_fu_288 <= beta_buffer_9_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_s_fu_1705_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_1223_fu_292 <= beta_buffer_10_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_1_fu_1720_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_1224_fu_296 <= beta_buffer_11_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_3_fu_1735_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_1225_fu_300 <= beta_buffer_12_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_7_fu_1750_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_1226_fu_304 <= beta_buffer_13_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_10_fu_1765_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_1227_fu_308 <= beta_buffer_14_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (icmp43_fu_1790_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_1228_fu_312 <= beta_buffer_15_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_206_nbwritereq_fu_516_p3 == 1'd1) & (tmp_nbreadreq_fu_508_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_1255_reg_3107 <= data_c_V_dout;
        tmp_1256_reg_3113 <= data_r_V_dout;
        tmp_1257_reg_3119 <= data_m_V_dout;
        tmp_1258_reg_3125 <= data_n_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_226_fu_2178_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1291_reg_3344 <= input_buffer_V_dout;
        tmp_482_reg_3364 <= tmp_482_fu_2197_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_226_reg_3335 <= tmp_226_fu_2178_p2;
        tmp_482_reg_3364_pp0_iter1_reg <= tmp_482_reg_3364;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_223_fu_2151_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_612_cast_reg_3330[8 : 4] <= tmp_612_cast_fu_2170_p1[8 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tn_23_reg_3286 <= tn_23_fu_1950_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tr_7_reg_3325 <= tr_7_fu_2156_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_480_reg_3203 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_0_0_fu_316 <= weight_buffer_0_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_226_reg_3335 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_temp_0_0_s_fu_384 <= weight_regs_0_0_2_we_fu_2298_p3;
        weight_temp_10_0_s_fu_424 <= weight_regs_10_0_2_w_fu_2378_p3;
        weight_temp_11_0_s_fu_428 <= weight_regs_11_0_2_w_fu_2386_p3;
        weight_temp_12_0_s_fu_432 <= weight_regs_12_0_2_w_fu_2394_p3;
        weight_temp_13_0_s_fu_436 <= weight_regs_13_0_2_w_fu_2402_p3;
        weight_temp_14_0_s_fu_440 <= weight_regs_14_0_2_w_fu_2410_p3;
        weight_temp_15_0_s_fu_380 <= weight_regs_15_0_2_w_fu_2418_p3;
        weight_temp_1_0_s_fu_388 <= weight_regs_1_0_2_we_fu_2306_p3;
        weight_temp_2_0_s_fu_392 <= weight_regs_2_0_2_we_fu_2314_p3;
        weight_temp_3_0_s_fu_396 <= weight_regs_3_0_2_we_fu_2322_p3;
        weight_temp_4_0_s_fu_400 <= weight_regs_4_0_2_we_fu_2330_p3;
        weight_temp_5_0_s_fu_404 <= weight_regs_5_0_2_we_fu_2338_p3;
        weight_temp_6_0_s_fu_408 <= weight_regs_6_0_2_we_fu_2346_p3;
        weight_temp_7_0_s_fu_412 <= weight_regs_7_0_2_we_fu_2354_p3;
        weight_temp_8_0_s_fu_416 <= weight_regs_8_0_2_we_fu_2362_p3;
        weight_temp_9_0_s_fu_420 <= weight_regs_9_0_2_we_fu_2370_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_s_reg_3253 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_10_0_fu_356 <= weight_buffer_10_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_1_reg_3258 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_11_0_fu_360 <= weight_buffer_11_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_3_reg_3263 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_12_0_fu_364 <= weight_buffer_12_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_7_reg_3268 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_13_0_fu_368 <= weight_buffer_13_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_10_reg_3273 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_14_0_fu_372 <= weight_buffer_14_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (icmp47_reg_3278 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_15_0_fu_376 <= weight_buffer_15_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (icmp44_reg_3208 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_1_0_fu_320 <= weight_buffer_1_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_2_reg_3213 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_2_0_fu_324 <= weight_buffer_2_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (icmp45_reg_3218 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_3_0_fu_328 <= weight_buffer_3_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_4_reg_3223 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_4_0_fu_332 <= weight_buffer_4_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_5_reg_3228 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_5_0_fu_336 <= weight_buffer_5_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_6_reg_3233 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_6_0_fu_340 <= weight_buffer_6_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (icmp46_reg_3238 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_7_0_fu_344 <= weight_buffer_7_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_8_reg_3243 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_8_0_fu_348 <= weight_buffer_8_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_9_reg_3248 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_temp_9_0_fu_352 <= weight_buffer_9_V_dout;
    end
end

always @ (*) begin
    if ((tmp_226_fu_2178_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1259_fu_2122_p1 == 1'd0) & (tmp_216_fu_1945_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1259_fu_2122_p1 == 1'd0) & (tmp_216_fu_1945_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_215_fu_1525_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_0_V_empty_n == 1'b1))) begin
        beta_buffer_0_V_read = 1'b1;
    end else begin
        beta_buffer_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_s_fu_1705_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_10_V_empty_n == 1'b1))) begin
        beta_buffer_10_V_read = 1'b1;
    end else begin
        beta_buffer_10_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_1_fu_1720_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_11_V_empty_n == 1'b1))) begin
        beta_buffer_11_V_read = 1'b1;
    end else begin
        beta_buffer_11_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_3_fu_1735_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_12_V_empty_n == 1'b1))) begin
        beta_buffer_12_V_read = 1'b1;
    end else begin
        beta_buffer_12_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_7_fu_1750_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_13_V_empty_n == 1'b1))) begin
        beta_buffer_13_V_read = 1'b1;
    end else begin
        beta_buffer_13_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_10_fu_1765_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_14_V_empty_n == 1'b1))) begin
        beta_buffer_14_V_read = 1'b1;
    end else begin
        beta_buffer_14_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (icmp43_fu_1790_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_15_V_empty_n == 1'b1))) begin
        beta_buffer_15_V_read = 1'b1;
    end else begin
        beta_buffer_15_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (icmp_fu_1550_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_1_V_empty_n == 1'b1))) begin
        beta_buffer_1_V_read = 1'b1;
    end else begin
        beta_buffer_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_2_fu_1565_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_2_V_empty_n == 1'b1))) begin
        beta_buffer_2_V_read = 1'b1;
    end else begin
        beta_buffer_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (icmp41_fu_1590_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_3_V_empty_n == 1'b1))) begin
        beta_buffer_3_V_read = 1'b1;
    end else begin
        beta_buffer_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_4_fu_1605_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_4_V_empty_n == 1'b1))) begin
        beta_buffer_4_V_read = 1'b1;
    end else begin
        beta_buffer_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_5_fu_1620_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_5_V_empty_n == 1'b1))) begin
        beta_buffer_5_V_read = 1'b1;
    end else begin
        beta_buffer_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_6_fu_1635_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_6_V_empty_n == 1'b1))) begin
        beta_buffer_6_V_read = 1'b1;
    end else begin
        beta_buffer_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (icmp42_fu_1660_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_7_V_empty_n == 1'b1))) begin
        beta_buffer_7_V_read = 1'b1;
    end else begin
        beta_buffer_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_8_fu_1675_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_8_V_empty_n == 1'b1))) begin
        beta_buffer_8_V_read = 1'b1;
    end else begin
        beta_buffer_8_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_214_fu_1520_p2 == 1'd1) & (tmp_571_9_fu_1690_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (beta_buffer_9_V_empty_n == 1'b1))) begin
        beta_buffer_9_V_read = 1'b1;
    end else begin
        beta_buffer_9_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (data_buffer_V_empty_n == 1'b1))) begin
        data_buffer_V_read = 1'b1;
    end else begin
        data_buffer_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_206_nbwritereq_fu_516_p3 == 1'd1) & (tmp_nbreadreq_fu_508_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (data_c_V_empty_n == 1'b1))) begin
        data_c_V_read = 1'b1;
    end else begin
        data_c_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_206_nbwritereq_fu_516_p3 == 1'd1) & (tmp_nbreadreq_fu_508_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (data_m_V_empty_n == 1'b1))) begin
        data_m_V_read = 1'b1;
    end else begin
        data_m_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_206_nbwritereq_fu_516_p3 == 1'd1) & (tmp_nbreadreq_fu_508_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (data_n_V_empty_n == 1'b1))) begin
        data_n_V_read = 1'b1;
    end else begin
        data_n_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_206_nbwritereq_fu_516_p3 == 1'd1) & (tmp_nbreadreq_fu_508_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (data_r_V_empty_n == 1'b1))) begin
        data_r_V_read = 1'b1;
    end else begin
        data_r_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_226_fu_2178_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (input_buffer_V_empty_n == 1'b1))) begin
        input_buffer_V_read = 1'b1;
    end else begin
        input_buffer_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd1) & (tmp_480_reg_3203 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_0_V_full_n == 1'b1))) begin
        output_buffer_0_V_write = 1'b1;
    end else begin
        output_buffer_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd1) & (tmp_597_0_0_s_reg_3253 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_10_V_full_n == 1'b1))) begin
        output_buffer_10_V_write = 1'b1;
    end else begin
        output_buffer_10_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd1) & (tmp_597_0_0_1_reg_3258 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_11_V_full_n == 1'b1))) begin
        output_buffer_11_V_write = 1'b1;
    end else begin
        output_buffer_11_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd1) & (tmp_597_0_0_3_reg_3263 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_12_V_full_n == 1'b1))) begin
        output_buffer_12_V_write = 1'b1;
    end else begin
        output_buffer_12_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd1) & (tmp_597_0_0_7_reg_3268 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_13_V_full_n == 1'b1))) begin
        output_buffer_13_V_write = 1'b1;
    end else begin
        output_buffer_13_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd1) & (tmp_597_0_0_10_reg_3273 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_14_V_full_n == 1'b1))) begin
        output_buffer_14_V_write = 1'b1;
    end else begin
        output_buffer_14_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd1) & (icmp47_reg_3278 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_15_V_full_n == 1'b1))) begin
        output_buffer_15_V_write = 1'b1;
    end else begin
        output_buffer_15_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd1) & (icmp44_reg_3208 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_1_V_full_n == 1'b1))) begin
        output_buffer_1_V_write = 1'b1;
    end else begin
        output_buffer_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd1) & (tmp_597_0_0_2_reg_3213 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_2_V_full_n == 1'b1))) begin
        output_buffer_2_V_write = 1'b1;
    end else begin
        output_buffer_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd1) & (icmp45_reg_3218 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_3_V_full_n == 1'b1))) begin
        output_buffer_3_V_write = 1'b1;
    end else begin
        output_buffer_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd1) & (tmp_597_0_0_4_reg_3223 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_4_V_full_n == 1'b1))) begin
        output_buffer_4_V_write = 1'b1;
    end else begin
        output_buffer_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd1) & (tmp_597_0_0_5_reg_3228 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_5_V_full_n == 1'b1))) begin
        output_buffer_5_V_write = 1'b1;
    end else begin
        output_buffer_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd1) & (tmp_597_0_0_6_reg_3233 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_6_V_full_n == 1'b1))) begin
        output_buffer_6_V_write = 1'b1;
    end else begin
        output_buffer_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd1) & (icmp46_reg_3238 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_7_V_full_n == 1'b1))) begin
        output_buffer_7_V_write = 1'b1;
    end else begin
        output_buffer_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd1) & (tmp_597_0_0_8_reg_3243 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_8_V_full_n == 1'b1))) begin
        output_buffer_8_V_write = 1'b1;
    end else begin
        output_buffer_8_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd1) & (tmp_597_0_0_9_reg_3248 == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (output_buffer_9_V_full_n == 1'b1))) begin
        output_buffer_9_V_write = 1'b1;
    end else begin
        output_buffer_9_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_0_ce0 = 1'b1;
    end else begin
        output_temp_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_0_ce1 = 1'b1;
    end else begin
        output_temp_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd0) & (tmp_480_reg_3203 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_0_we1 = 1'b1;
    end else begin
        output_temp_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_10_ce0 = 1'b1;
    end else begin
        output_temp_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_10_ce1 = 1'b1;
    end else begin
        output_temp_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd0) & (tmp_597_0_0_s_reg_3253 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_10_we1 = 1'b1;
    end else begin
        output_temp_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_11_ce0 = 1'b1;
    end else begin
        output_temp_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_11_ce1 = 1'b1;
    end else begin
        output_temp_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd0) & (tmp_597_0_0_1_reg_3258 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_11_we1 = 1'b1;
    end else begin
        output_temp_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_12_ce0 = 1'b1;
    end else begin
        output_temp_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_12_ce1 = 1'b1;
    end else begin
        output_temp_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd0) & (tmp_597_0_0_3_reg_3263 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_12_we1 = 1'b1;
    end else begin
        output_temp_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_13_ce0 = 1'b1;
    end else begin
        output_temp_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_13_ce1 = 1'b1;
    end else begin
        output_temp_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd0) & (tmp_597_0_0_7_reg_3268 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_13_we1 = 1'b1;
    end else begin
        output_temp_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_14_ce0 = 1'b1;
    end else begin
        output_temp_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_14_ce1 = 1'b1;
    end else begin
        output_temp_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd0) & (tmp_597_0_0_10_reg_3273 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_14_we1 = 1'b1;
    end else begin
        output_temp_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_15_ce0 = 1'b1;
    end else begin
        output_temp_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_15_ce1 = 1'b1;
    end else begin
        output_temp_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd0) & (icmp47_reg_3278 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_15_we1 = 1'b1;
    end else begin
        output_temp_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_1_ce0 = 1'b1;
    end else begin
        output_temp_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_1_ce1 = 1'b1;
    end else begin
        output_temp_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd0) & (icmp44_reg_3208 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_1_we1 = 1'b1;
    end else begin
        output_temp_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_2_ce0 = 1'b1;
    end else begin
        output_temp_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_2_ce1 = 1'b1;
    end else begin
        output_temp_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd0) & (tmp_597_0_0_2_reg_3213 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_2_we1 = 1'b1;
    end else begin
        output_temp_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_3_ce0 = 1'b1;
    end else begin
        output_temp_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_3_ce1 = 1'b1;
    end else begin
        output_temp_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd0) & (icmp45_reg_3218 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_3_we1 = 1'b1;
    end else begin
        output_temp_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_4_ce0 = 1'b1;
    end else begin
        output_temp_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_4_ce1 = 1'b1;
    end else begin
        output_temp_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd0) & (tmp_597_0_0_4_reg_3223 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_4_we1 = 1'b1;
    end else begin
        output_temp_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_5_ce0 = 1'b1;
    end else begin
        output_temp_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_5_ce1 = 1'b1;
    end else begin
        output_temp_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd0) & (tmp_597_0_0_5_reg_3228 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_5_we1 = 1'b1;
    end else begin
        output_temp_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_6_ce0 = 1'b1;
    end else begin
        output_temp_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_6_ce1 = 1'b1;
    end else begin
        output_temp_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd0) & (tmp_597_0_0_6_reg_3233 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_6_we1 = 1'b1;
    end else begin
        output_temp_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_7_ce0 = 1'b1;
    end else begin
        output_temp_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_7_ce1 = 1'b1;
    end else begin
        output_temp_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd0) & (icmp46_reg_3238 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_7_we1 = 1'b1;
    end else begin
        output_temp_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_8_ce0 = 1'b1;
    end else begin
        output_temp_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_8_ce1 = 1'b1;
    end else begin
        output_temp_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd0) & (tmp_597_0_0_8_reg_3243 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_8_we1 = 1'b1;
    end else begin
        output_temp_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_temp_9_ce0 = 1'b1;
    end else begin
        output_temp_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_9_ce1 = 1'b1;
    end else begin
        output_temp_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_222_reg_3311 == 1'd0) & (tmp_597_0_0_9_reg_3248 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_temp_9_we1 = 1'b1;
    end else begin
        output_temp_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd0) & (icmp48_fu_2141_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (result_buffer_V_full_n == 1'b1))) begin
        result_buffer_V_write = 1'b1;
    end else begin
        result_buffer_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd0) & (icmp48_fu_2141_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (result_c_V_full_n == 1'b1))) begin
        result_c_V_write = 1'b1;
    end else begin
        result_c_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd0) & (icmp48_fu_2141_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (result_m_V_full_n == 1'b1))) begin
        result_m_V_write = 1'b1;
    end else begin
        result_m_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd0) & (icmp48_fu_2141_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (result_n_V_full_n == 1'b1))) begin
        result_n_V_write = 1'b1;
    end else begin
        result_n_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd0) & (icmp48_fu_2141_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (result_r_V_full_n == 1'b1))) begin
        result_r_V_write = 1'b1;
    end else begin
        result_r_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_480_reg_3203 == 1'd1) & (weight_buffer_0_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_0_V_read = 1'b1;
    end else begin
        weight_buffer_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_s_reg_3253 == 1'd1) & (weight_buffer_10_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_10_V_read = 1'b1;
    end else begin
        weight_buffer_10_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_1_reg_3258 == 1'd1) & (weight_buffer_11_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_11_V_read = 1'b1;
    end else begin
        weight_buffer_11_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_3_reg_3263 == 1'd1) & (weight_buffer_12_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_12_V_read = 1'b1;
    end else begin
        weight_buffer_12_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_7_reg_3268 == 1'd1) & (weight_buffer_13_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_13_V_read = 1'b1;
    end else begin
        weight_buffer_13_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_10_reg_3273 == 1'd1) & (weight_buffer_14_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_14_V_read = 1'b1;
    end else begin
        weight_buffer_14_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (icmp47_reg_3278 == 1'd1) & (weight_buffer_15_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_15_V_read = 1'b1;
    end else begin
        weight_buffer_15_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (icmp44_reg_3208 == 1'd1) & (weight_buffer_1_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_1_V_read = 1'b1;
    end else begin
        weight_buffer_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_2_reg_3213 == 1'd1) & (weight_buffer_2_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_2_V_read = 1'b1;
    end else begin
        weight_buffer_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (icmp45_reg_3218 == 1'd1) & (weight_buffer_3_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_3_V_read = 1'b1;
    end else begin
        weight_buffer_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_4_reg_3223 == 1'd1) & (weight_buffer_4_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_4_V_read = 1'b1;
    end else begin
        weight_buffer_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_5_reg_3228 == 1'd1) & (weight_buffer_5_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_5_V_read = 1'b1;
    end else begin
        weight_buffer_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_6_reg_3233 == 1'd1) & (weight_buffer_6_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_6_V_read = 1'b1;
    end else begin
        weight_buffer_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (icmp46_reg_3238 == 1'd1) & (weight_buffer_7_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_7_V_read = 1'b1;
    end else begin
        weight_buffer_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_8_reg_3243 == 1'd1) & (weight_buffer_8_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_8_V_read = 1'b1;
    end else begin
        weight_buffer_8_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_216_fu_1945_p2 == 1'd1) & (tmp_597_0_0_9_reg_3248 == 1'd1) & (weight_buffer_9_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_buffer_9_V_read = 1'b1;
    end else begin
        weight_buffer_9_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((tmp_206_nbwritereq_fu_516_p3 == 1'd0) | (tmp_nbreadreq_fu_508_p3 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((tmp_1259_fu_2122_p1 == 1'd0) & (tmp_216_fu_1945_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((tmp_216_fu_1945_p2 == 1'd0) & (tmp_1259_fu_2122_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((tmp_223_fu_2151_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_226_fu_2178_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_226_fu_2178_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign cLoops_fu_1455_p3 = ((tmp_207_fu_1449_p2[0:0] === 1'b1) ? 32'd16 : tmp_s_fu_1444_p2);

assign grp_mac_1_1_s_fu_1188_weight_regs_read = ((tmp_480_reg_3203[0:0] === 1'b1) ? weight_temp_0_0_fu_316 : weight_temp_0_0_s_fu_384);

assign grp_mac_1_1_s_fu_1194_weight_regs_read = ((icmp44_reg_3208[0:0] === 1'b1) ? weight_temp_1_0_fu_320 : weight_temp_1_0_s_fu_388);

assign grp_mac_1_1_s_fu_1200_weight_regs_read = ((tmp_597_0_0_2_reg_3213[0:0] === 1'b1) ? weight_temp_2_0_fu_324 : weight_temp_2_0_s_fu_392);

assign grp_mac_1_1_s_fu_1206_weight_regs_read = ((icmp45_reg_3218[0:0] === 1'b1) ? weight_temp_3_0_fu_328 : weight_temp_3_0_s_fu_396);

assign grp_mac_1_1_s_fu_1212_weight_regs_read = ((tmp_597_0_0_4_reg_3223[0:0] === 1'b1) ? weight_temp_4_0_fu_332 : weight_temp_4_0_s_fu_400);

assign grp_mac_1_1_s_fu_1218_weight_regs_read = ((tmp_597_0_0_5_reg_3228[0:0] === 1'b1) ? weight_temp_5_0_fu_336 : weight_temp_5_0_s_fu_404);

assign grp_mac_1_1_s_fu_1224_weight_regs_read = ((tmp_597_0_0_6_reg_3233[0:0] === 1'b1) ? weight_temp_6_0_fu_340 : weight_temp_6_0_s_fu_408);

assign grp_mac_1_1_s_fu_1230_weight_regs_read = ((icmp46_reg_3238[0:0] === 1'b1) ? weight_temp_7_0_fu_344 : weight_temp_7_0_s_fu_412);

assign grp_mac_1_1_s_fu_1236_weight_regs_read = ((tmp_597_0_0_8_reg_3243[0:0] === 1'b1) ? weight_temp_8_0_fu_348 : weight_temp_8_0_s_fu_416);

assign grp_mac_1_1_s_fu_1242_weight_regs_read = ((tmp_597_0_0_9_reg_3248[0:0] === 1'b1) ? weight_temp_9_0_fu_352 : weight_temp_9_0_s_fu_420);

assign grp_mac_1_1_s_fu_1248_weight_regs_read = ((tmp_597_0_0_s_reg_3253[0:0] === 1'b1) ? weight_temp_10_0_fu_356 : weight_temp_10_0_s_fu_424);

assign grp_mac_1_1_s_fu_1254_weight_regs_read = ((tmp_597_0_0_1_reg_3258[0:0] === 1'b1) ? weight_temp_11_0_fu_360 : weight_temp_11_0_s_fu_428);

assign grp_mac_1_1_s_fu_1260_weight_regs_read = ((tmp_597_0_0_3_reg_3263[0:0] === 1'b1) ? weight_temp_12_0_fu_364 : weight_temp_12_0_s_fu_432);

assign grp_mac_1_1_s_fu_1266_weight_regs_read = ((tmp_597_0_0_7_reg_3268[0:0] === 1'b1) ? weight_temp_13_0_fu_368 : weight_temp_13_0_s_fu_436);

assign grp_mac_1_1_s_fu_1272_weight_regs_read = ((tmp_597_0_0_10_reg_3273[0:0] === 1'b1) ? weight_temp_14_0_fu_372 : weight_temp_14_0_s_fu_440);

assign grp_mac_1_1_s_fu_1278_weight_regs_read = ((icmp47_reg_3278[0:0] === 1'b1) ? weight_temp_15_0_fu_376 : weight_temp_15_0_s_fu_380);

assign icmp41_fu_1590_p2 = (($signed(tmp_1233_fu_1580_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp42_fu_1660_p2 = (($signed(tmp_1238_fu_1650_p4) > $signed(29'd0)) ? 1'b1 : 1'b0);

assign icmp43_fu_1790_p2 = (($signed(tmp_1247_fu_1780_p4) > $signed(28'd0)) ? 1'b1 : 1'b0);

assign icmp44_fu_1821_p2 = (($signed(tmp_1249_fu_1811_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp45_fu_1843_p2 = (($signed(tmp_1250_fu_1833_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp46_fu_1877_p2 = (($signed(tmp_1251_fu_1867_p4) > $signed(29'd0)) ? 1'b1 : 1'b0);

assign icmp47_fu_1935_p2 = (($signed(tmp_1252_fu_1925_p4) > $signed(28'd0)) ? 1'b1 : 1'b0);

assign icmp48_fu_2141_p2 = (($signed(tmp_1253_fu_2131_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_fu_1550_p2 = (($signed(tmp_1230_fu_1540_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign mLoops_fu_1493_p3 = ((tmp_211_fu_1487_p2[0:0] === 1'b1) ? 32'd16 : tmp_210_fu_1482_p2);

assign nLoops_fu_1512_p3 = ((tmp_213_fu_1506_p2[0:0] === 1'b1) ? 32'd2 : tmp_212_fu_1501_p2);

assign or_cond_fu_2106_p2 = (tmp_220_fu_2100_p2 & tmp_214_reg_3150);

assign output_buffer_0_V_din = ((grp_fu_1348_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_reg_3705_pp0_iter11_reg);

assign output_buffer_10_V_din = ((grp_fu_1398_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_s_reg_3775_pp0_iter11_reg);

assign output_buffer_11_V_din = ((grp_fu_1403_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_10_reg_3782_pp0_iter11_reg);

assign output_buffer_12_V_din = ((grp_fu_1408_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_11_reg_3789_pp0_iter11_reg);

assign output_buffer_13_V_din = ((grp_fu_1413_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_12_reg_3796_pp0_iter11_reg);

assign output_buffer_14_V_din = ((grp_fu_1418_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_13_reg_3803_pp0_iter11_reg);

assign output_buffer_15_V_din = ((grp_fu_1423_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_14_reg_3810_pp0_iter11_reg);

assign output_buffer_1_V_din = ((grp_fu_1353_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_1_reg_3712_pp0_iter11_reg);

assign output_buffer_2_V_din = ((grp_fu_1358_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_2_reg_3719_pp0_iter11_reg);

assign output_buffer_3_V_din = ((grp_fu_1363_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_3_reg_3726_pp0_iter11_reg);

assign output_buffer_4_V_din = ((grp_fu_1368_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_4_reg_3733_pp0_iter11_reg);

assign output_buffer_5_V_din = ((grp_fu_1373_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_5_reg_3740_pp0_iter11_reg);

assign output_buffer_6_V_din = ((grp_fu_1378_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_6_reg_3747_pp0_iter11_reg);

assign output_buffer_7_V_din = ((grp_fu_1383_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_7_reg_3754_pp0_iter11_reg);

assign output_buffer_8_V_din = ((grp_fu_1388_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_8_reg_3761_pp0_iter11_reg);

assign output_buffer_9_V_din = ((grp_fu_1393_p2[0:0] === 1'b1) ? 16'd0 : acc_dat_9_reg_3768_pp0_iter11_reg);

assign output_temp_0_address0 = tmp_613_cast_fu_2506_p1;

assign output_temp_10_address0 = tmp_613_cast_fu_2506_p1;

assign output_temp_11_address0 = tmp_613_cast_fu_2506_p1;

assign output_temp_12_address0 = tmp_613_cast_fu_2506_p1;

assign output_temp_13_address0 = tmp_613_cast_fu_2506_p1;

assign output_temp_14_address0 = tmp_613_cast_fu_2506_p1;

assign output_temp_15_address0 = tmp_613_cast_fu_2506_p1;

assign output_temp_1_address0 = tmp_613_cast_fu_2506_p1;

assign output_temp_2_address0 = tmp_613_cast_fu_2506_p1;

assign output_temp_3_address0 = tmp_613_cast_fu_2506_p1;

assign output_temp_4_address0 = tmp_613_cast_fu_2506_p1;

assign output_temp_5_address0 = tmp_613_cast_fu_2506_p1;

assign output_temp_6_address0 = tmp_613_cast_fu_2506_p1;

assign output_temp_7_address0 = tmp_613_cast_fu_2506_p1;

assign output_temp_8_address0 = tmp_613_cast_fu_2506_p1;

assign output_temp_9_address0 = tmp_613_cast_fu_2506_p1;

assign p_pn_10_fu_2638_p3 = ((or_cond_reg_3291[0:0] === 1'b1) ? tmp_1224_fu_296 : output_temp_11_q0);

assign p_pn_11_fu_2648_p3 = ((or_cond_reg_3291[0:0] === 1'b1) ? tmp_1225_fu_300 : output_temp_12_q0);

assign p_pn_12_fu_2658_p3 = ((or_cond_reg_3291[0:0] === 1'b1) ? tmp_1226_fu_304 : output_temp_13_q0);

assign p_pn_13_fu_2668_p3 = ((or_cond_reg_3291[0:0] === 1'b1) ? tmp_1227_fu_308 : output_temp_14_q0);

assign p_pn_14_fu_2678_p3 = ((or_cond_reg_3291[0:0] === 1'b1) ? tmp_1228_fu_312 : output_temp_15_q0);

assign p_pn_1_fu_2538_p3 = ((or_cond_reg_3291[0:0] === 1'b1) ? tmp_1214_fu_256 : output_temp_1_q0);

assign p_pn_2_fu_2548_p3 = ((or_cond_reg_3291[0:0] === 1'b1) ? tmp_1215_fu_260 : output_temp_2_q0);

assign p_pn_3_fu_2558_p3 = ((or_cond_reg_3291[0:0] === 1'b1) ? tmp_1216_fu_264 : output_temp_3_q0);

assign p_pn_4_fu_2568_p3 = ((or_cond_reg_3291[0:0] === 1'b1) ? tmp_1217_fu_268 : output_temp_4_q0);

assign p_pn_5_fu_2578_p3 = ((or_cond_reg_3291[0:0] === 1'b1) ? tmp_1218_fu_272 : output_temp_5_q0);

assign p_pn_6_fu_2588_p3 = ((or_cond_reg_3291[0:0] === 1'b1) ? tmp_1219_fu_276 : output_temp_6_q0);

assign p_pn_7_fu_2598_p3 = ((or_cond_reg_3291[0:0] === 1'b1) ? tmp_1220_fu_280 : output_temp_7_q0);

assign p_pn_8_fu_2608_p3 = ((or_cond_reg_3291[0:0] === 1'b1) ? tmp_1221_fu_284 : output_temp_8_q0);

assign p_pn_9_fu_2618_p3 = ((or_cond_reg_3291[0:0] === 1'b1) ? tmp_1222_fu_288 : output_temp_9_q0);

assign p_pn_fu_2528_p3 = ((or_cond_reg_3291[0:0] === 1'b1) ? tmp_1213_fu_252 : output_temp_0_q0);

assign p_pn_s_fu_2628_p3 = ((or_cond_reg_3291[0:0] === 1'b1) ? tmp_1223_fu_292 : output_temp_10_q0);

assign rLoops_fu_1474_p3 = ((tmp_209_fu_1468_p2[0:0] === 1'b1) ? 32'd16 : tmp_208_fu_1463_p2);

assign result_buffer_V_din = data_buffer_V_dout;

assign result_c_V_din = tmp_1255_reg_3107;

assign result_m_V_din = tmp_1257_reg_3119;

assign result_n_V_din = tmp_1258_reg_3125;

assign result_r_V_din = tmp_1256_reg_3113;

assign tc_2_fu_2183_p2 = (tc_reg_1177 + 5'd1);

assign tc_cast_fu_2174_p1 = tc_reg_1177;

assign tmp_1230_fu_1540_p4 = {{mLoops_fu_1493_p3[31:1]}};

assign tmp_1233_fu_1580_p4 = {{mLoops_fu_1493_p3[31:2]}};

assign tmp_1238_fu_1650_p4 = {{mLoops_fu_1493_p3[31:3]}};

assign tmp_1247_fu_1780_p4 = {{mLoops_fu_1493_p3[31:4]}};

assign tmp_1249_fu_1811_p4 = {{mLoops_fu_1493_p3[31:1]}};

assign tmp_1250_fu_1833_p4 = {{mLoops_fu_1493_p3[31:2]}};

assign tmp_1251_fu_1867_p4 = {{mLoops_fu_1493_p3[31:3]}};

assign tmp_1252_fu_1925_p4 = {{mLoops_fu_1493_p3[31:4]}};

assign tmp_1253_fu_2131_p4 = {{tmp_218_fu_2127_p2[31:6]}};

assign tmp_1259_fu_2122_p1 = data_buffer_V_dout;

assign tmp_206_nbwritereq_fu_516_p3 = result_buffer_V_full_n;

assign tmp_207_fu_1449_p2 = (($signed(tmp_s_fu_1444_p2) > $signed(32'd16)) ? 1'b1 : 1'b0);

assign tmp_208_fu_1463_p2 = (32'd64 - tmp_1256_reg_3113);

assign tmp_209_fu_1468_p2 = (($signed(tmp_208_fu_1463_p2) > $signed(32'd16)) ? 1'b1 : 1'b0);

assign tmp_210_fu_1482_p2 = (32'd128 - tmp_1257_reg_3119);

assign tmp_211_fu_1487_p2 = (($signed(tmp_210_fu_1482_p2) > $signed(32'd16)) ? 1'b1 : 1'b0);

assign tmp_212_fu_1501_p2 = (32'd64 - tmp_1258_reg_3125);

assign tmp_213_fu_1506_p2 = (($signed(tmp_212_fu_1501_p2) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign tmp_214_fu_1520_p2 = (($signed(tmp_1258_reg_3125) < $signed(32'd1)) ? 1'b1 : 1'b0);

assign tmp_215_fu_1525_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_216_fu_1945_p2 = (($signed(tn_cast_fu_1941_p1) < $signed(nLoops_reg_3144)) ? 1'b1 : 1'b0);

assign tmp_218_fu_2127_p2 = (tmp_1258_reg_3125 + nLoops_reg_3144);

assign tmp_220_fu_2100_p2 = ((tn_reg_1155 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_221_fu_2111_p2 = (tmp_1258_reg_3125 + tn_cast_fu_1941_p1);

assign tmp_222_fu_2116_p2 = (($signed(tmp_221_fu_2111_p2) > $signed(32'd62)) ? 1'b1 : 1'b0);

assign tmp_223_fu_2151_p2 = (($signed(tr_cast_fu_2147_p1) < $signed(rLoops_reg_3139)) ? 1'b1 : 1'b0);

assign tmp_226_fu_2178_p2 = (($signed(tc_cast_fu_2174_p1) < $signed(cLoops_reg_3134)) ? 1'b1 : 1'b0);

assign tmp_228_cast_fu_2193_p1 = tc_reg_1177;

assign tmp_480_fu_1805_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_481_fu_2162_p3 = {{tr_reg_1166}, {4'd0}};

assign tmp_482_fu_2197_p2 = (tmp_612_cast_reg_3330 + tmp_228_cast_fu_2193_p1);

assign tmp_571_10_fu_1765_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd14)) ? 1'b1 : 1'b0);

assign tmp_571_1_fu_1720_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd11)) ? 1'b1 : 1'b0);

assign tmp_571_2_fu_1565_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign tmp_571_3_fu_1735_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd12)) ? 1'b1 : 1'b0);

assign tmp_571_4_fu_1605_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd4)) ? 1'b1 : 1'b0);

assign tmp_571_5_fu_1620_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd5)) ? 1'b1 : 1'b0);

assign tmp_571_6_fu_1635_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd6)) ? 1'b1 : 1'b0);

assign tmp_571_7_fu_1750_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd13)) ? 1'b1 : 1'b0);

assign tmp_571_8_fu_1675_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd8)) ? 1'b1 : 1'b0);

assign tmp_571_9_fu_1690_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd9)) ? 1'b1 : 1'b0);

assign tmp_571_s_fu_1705_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd10)) ? 1'b1 : 1'b0);

assign tmp_597_0_0_10_fu_1919_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd14)) ? 1'b1 : 1'b0);

assign tmp_597_0_0_1_fu_1901_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd11)) ? 1'b1 : 1'b0);

assign tmp_597_0_0_2_fu_1827_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign tmp_597_0_0_3_fu_1907_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd12)) ? 1'b1 : 1'b0);

assign tmp_597_0_0_4_fu_1849_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd4)) ? 1'b1 : 1'b0);

assign tmp_597_0_0_5_fu_1855_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd5)) ? 1'b1 : 1'b0);

assign tmp_597_0_0_6_fu_1861_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd6)) ? 1'b1 : 1'b0);

assign tmp_597_0_0_7_fu_1913_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd13)) ? 1'b1 : 1'b0);

assign tmp_597_0_0_8_fu_1883_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd8)) ? 1'b1 : 1'b0);

assign tmp_597_0_0_9_fu_1889_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd9)) ? 1'b1 : 1'b0);

assign tmp_597_0_0_s_fu_1895_p2 = (($signed(mLoops_fu_1493_p3) > $signed(32'd10)) ? 1'b1 : 1'b0);

assign tmp_612_cast_fu_2170_p1 = tmp_481_fu_2162_p3;

assign tmp_613_cast_fu_2506_p1 = tmp_482_reg_3364_pp0_iter3_reg;

assign tmp_nbreadreq_fu_508_p3 = data_buffer_V_empty_n;

assign tmp_s_fu_1444_p2 = (32'd64 - tmp_1255_reg_3107);

assign tn_23_fu_1950_p2 = (tn_reg_1155 + 2'd1);

assign tn_cast_fu_1941_p1 = tn_reg_1155;

assign tr_7_fu_2156_p2 = (tr_reg_1166 + 5'd1);

assign tr_cast_fu_2147_p1 = tr_reg_1166;

assign weight_regs_0_0_2_we_fu_2298_p3 = ((tmp_480_reg_3203[0:0] === 1'b1) ? weight_temp_0_0_fu_316 : weight_temp_0_0_s_fu_384);

assign weight_regs_10_0_2_w_fu_2378_p3 = ((tmp_597_0_0_s_reg_3253[0:0] === 1'b1) ? weight_temp_10_0_fu_356 : weight_temp_10_0_s_fu_424);

assign weight_regs_11_0_2_w_fu_2386_p3 = ((tmp_597_0_0_1_reg_3258[0:0] === 1'b1) ? weight_temp_11_0_fu_360 : weight_temp_11_0_s_fu_428);

assign weight_regs_12_0_2_w_fu_2394_p3 = ((tmp_597_0_0_3_reg_3263[0:0] === 1'b1) ? weight_temp_12_0_fu_364 : weight_temp_12_0_s_fu_432);

assign weight_regs_13_0_2_w_fu_2402_p3 = ((tmp_597_0_0_7_reg_3268[0:0] === 1'b1) ? weight_temp_13_0_fu_368 : weight_temp_13_0_s_fu_436);

assign weight_regs_14_0_2_w_fu_2410_p3 = ((tmp_597_0_0_10_reg_3273[0:0] === 1'b1) ? weight_temp_14_0_fu_372 : weight_temp_14_0_s_fu_440);

assign weight_regs_15_0_2_w_fu_2418_p3 = ((icmp47_reg_3278[0:0] === 1'b1) ? weight_temp_15_0_fu_376 : weight_temp_15_0_s_fu_380);

assign weight_regs_1_0_2_we_fu_2306_p3 = ((icmp44_reg_3208[0:0] === 1'b1) ? weight_temp_1_0_fu_320 : weight_temp_1_0_s_fu_388);

assign weight_regs_2_0_2_we_fu_2314_p3 = ((tmp_597_0_0_2_reg_3213[0:0] === 1'b1) ? weight_temp_2_0_fu_324 : weight_temp_2_0_s_fu_392);

assign weight_regs_3_0_2_we_fu_2322_p3 = ((icmp45_reg_3218[0:0] === 1'b1) ? weight_temp_3_0_fu_328 : weight_temp_3_0_s_fu_396);

assign weight_regs_4_0_2_we_fu_2330_p3 = ((tmp_597_0_0_4_reg_3223[0:0] === 1'b1) ? weight_temp_4_0_fu_332 : weight_temp_4_0_s_fu_400);

assign weight_regs_5_0_2_we_fu_2338_p3 = ((tmp_597_0_0_5_reg_3228[0:0] === 1'b1) ? weight_temp_5_0_fu_336 : weight_temp_5_0_s_fu_404);

assign weight_regs_6_0_2_we_fu_2346_p3 = ((tmp_597_0_0_6_reg_3233[0:0] === 1'b1) ? weight_temp_6_0_fu_340 : weight_temp_6_0_s_fu_408);

assign weight_regs_7_0_2_we_fu_2354_p3 = ((icmp46_reg_3238[0:0] === 1'b1) ? weight_temp_7_0_fu_344 : weight_temp_7_0_s_fu_412);

assign weight_regs_8_0_2_we_fu_2362_p3 = ((tmp_597_0_0_8_reg_3243[0:0] === 1'b1) ? weight_temp_8_0_fu_348 : weight_temp_8_0_s_fu_416);

assign weight_regs_9_0_2_we_fu_2370_p3 = ((tmp_597_0_0_9_reg_3248[0:0] === 1'b1) ? weight_temp_9_0_fu_352 : weight_temp_9_0_s_fu_420);

always @ (posedge ap_clk) begin
    tmp_612_cast_reg_3330[3:0] <= 4'b0000;
    tmp_612_cast_reg_3330[9] <= 1'b0;
end

endmodule //compute_pro_2
